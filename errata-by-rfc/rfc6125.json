[
  {
    "errata_id": "3090",
    "doc-id": "RFC6125",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "6.4.3",
    "orig_text": "6.4.3. Checking of Wildcard Certificates\r\n\r\n   A client employing this specification's rules MAY match the reference\r\n   identifier against a presented identifier whose DNS domain name\r\n   portion contains the wildcard character '*' as part or all of a label\r\n   (following the description of labels and domain names in\r\n   [DNS-CONCEPTS]).\r\n\r\n   For information regarding the security characteristics of wildcard\r\n   certificates, see Section 7.2.\r\n\r\n   If a client matches the reference identifier against a presented\r\n   identifier whose DNS domain name portion contains the wildcard\r\n   character '*', the following rules apply:\r\n\r\n   1.  The client SHOULD NOT attempt to match a presented identifier in\r\n       which the wildcard character comprises a label other than the\r\n       left-most label (e.g., do not match bar.*.example.net).\r\n\r\n   2.  If the wildcard character is the only character of the left-most\r\n       label in the presented identifier, the client SHOULD NOT compare\r\n       against anything but the left-most label of the reference\r\n       identifier (e.g., *.example.com would match foo.example.com but\r\n       not bar.foo.example.com or example.com).\r\n\r\n   3.  The client MAY match a presented identifier in which the wildcard\r\n       character is not the only character of the label (e.g.,\r\n       baz*.example.net and *baz.example.net and b*z.example.net would\r\n       be taken to match baz1.example.net and foobaz.example.net and\r\n       buzz.example.net, respectively).  However, the client SHOULD NOT\r\n       attempt to match a presented identifier where the wildcard\r\n       character is embedded within an A-label or U-label [IDNA-DEFS] of\r\n       an internationalized domain name [IDNA-PROTO].",
    "correct_text": "[ no firm test suggestions just as yet, please see below ]",
    "notes": "RFC6125 bug: Checking of Wildcard Certs lacks spec of how many labels in presented identifier\r\n\r\nsection 6.4.3 does not specify how many labels must be in a wildcarded presented identifier. I.e., it leaves open the possibility that the following presented identifiers could be matched against actual domain names..\r\n\r\n  *\r\n  *.\r\n  *.com  i.e.  *.<fill in TLD here>             e.g.:  *.uk or *.co.uk\r\n  *U     i.e.  *<fill in portion of TLD here>   e.g.:  will match AU, EDU, CU \r\n\r\n  etc. etc. \r\n\r\n                                                       \r\nIf actual TLS/SSL implementations (e.g. web browsers) were to make valid matches as shown above, then someone could ostensibly obtain a cert (c.f. diginotar) for one of them and then go and MITM large swaths of domain name space. \r\n\r\nNote that the discussion of wildcards in Section 7.2 of security considerations identifies the public suffix issue in passing, but only as one of a set of issues why the spec discourages use of wildcard certs.\r\n\r\nNote also that this issue begs the question of being able to determine what constitutes a so-called domain name \"public suffix\" (e.g. \".com\", \".co.uk\") -- we can't simply write into the spec \"the wildcard must be in the left-most label position and there must be at least one? two? three? labels to the right of the wildcard's position\". \r\n\r\nLikely the approach will need to consist of a \"SHOULD\" declaration and some hand-waving about how \"matching wildcards on presented identifiers with less than N (?) labels to the right of the wildcard has various increasing risks as N approaches zero, and that implementors should perhaps consider leveraging some of the available public suffix identification mechanisms, but that those are out of scope and have their own operational and security considerations.\"\r\n\r\nPSA: This issue needs to be addressed, but doing so by means of an erratum is not the best way to go about having this conversation. Marking as \"Hold For Document Update\" to make sure we don't lose track of the issue. -- Peter Saint-Andre",
    "submit_date": "2012-01-13",
    "submitter_name": "Jeff Hodges",
    "verifier_id": "121",
    "verifier_name": "Peter Saint-Andre",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "5654",
    "doc-id": "RFC6125",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "7.4",
    "orig_text": "   A more recent approach, formally specified in [TLS-EXT], is for the\r\n   client to use the TLS \"Server Name Indication\" (SNI) extension when\r\n   sending the client_hello message, stipulating the DNS domain name it\r\n   desires or expects of the service.  The service can then return the\r\n   appropriate certificate in its Certificate message, and that\r\n   certificate can represent a single DNS domain name.",
    "correct_text": "   A more recent approach, formally specified in [TLS-EXT], is for the\r\n   client to use the TLS \"Server Name Indication\" (SNI) extension when\r\n   sending the client_hello message, stipulating the DNS domain name it\r\n   desires or expects of the service.  The service can then return the\r\n   appropriate certificate in its Certificate message, and that\r\n   certificate can represent a single DNS domain name. The client SHOULD\r\n   include the \"source domain\" in the SNI extension and SHOULD NOT\r\n   include the “derived domain”.\r\n",
    "notes": "There is nothing wrong with the text, however its missing some clarifying text.\r\n\r\nWhen a client discovers a service using SRV, when it is doing TLS it should include the \"source domain\" in the SNI extension and SHOULD NOT include the “derived domain” in SNI. Now, this is obviously the correct thing to do. However, it doesnt explicitly state this anywhere in the RFC, or in RFC6066.",
    "submit_date": "2019-03-13",
    "submitter_name": "Owen Friel",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "5673",
    "doc-id": "RFC6125",
    "errata_status_code": "Reported",
    "errata_type_code": "Editorial",
    "section": "GLOBAL",
    "orig_text": "   If the certificate will be used for only a single type of application\r\n   service, then the service provider is encouraged to request a\r\n   certificate that includes a DNS-ID and, if appropriate for the\r\n   application service type, an SRV-ID or URI-ID that limits the\r\n   deployment scope of the certificate to only the defined application\r\n   service type.",
    "correct_text": "   If the certificate will be used for only a single type of application\r\n   service, the service provider is encouraged to request a\r\n   certificate that includes a DNS-ID and, if appropriate for the\r\n   application service type, an SRV-ID or URI-ID that limits the\r\n   deployment scope of the certificate to only the defined application\r\n   service type.",
    "notes": "All the sentences in the RFC (not just the one above) are written as pseudo code using IF...THEN.  Normative English sentence structure the IF is a Conjunction for a Subordinating Clause.   The THEN after the comma should be dropped to start the subject or main clause of the sentence.",
    "submit_date": "2019-03-25",
    "submitter_name": "Michael James",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "6325",
    "doc-id": "RFC6125",
    "errata_status_code": "Reported",
    "errata_type_code": "Editorial",
    "section": "10.2",
    "orig_text": "  [X.520]          International Telecommunications Union, \"Information\r\n                    Technology - Open Systems Interconnection - The\r\n                    Directory: Selected attribute types\", ITU-\r\n                    T Recommendation X.509, ISO Standard 9594-6,\r\n                    August 2005.\r\n",
    "correct_text": "  [X.520]          International Telecommunications Union, \"Information\r\n                    Technology - Open Systems Interconnection - The\r\n                    Directory: Selected attribute types\", ITU-\r\n                    T Recommendation X.520, ISO Standard 9594-6,\r\n                    August 2005.\r\n",
    "notes": "Selected attribute types is X.520 not X.509",
    "submit_date": "2020-11-06",
    "submitter_name": "tom petch",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": null
  }
]
