[
  {
    "errata_id": "2074",
    "doc-id": "RFC5681",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "3.1",
    "orig_text": "   A detailed rationale and discussion of the IW setting is provided in\r\n   [RFC3390].",
    "correct_text": "   A detailed rationale and discussion of the IW setting is provided in\r\n   [RFC3390].  The IW value for the case when (SMSS > 1095 bytes) and (SMSS <= \r\n   2190 bytes) is changed from RFC3390.  The new definition will keep early \r\n   values of cwnd at a multiple of SMSS and avoid transmitting partial segments.",
    "notes": "Hopefully, I surmised the reason for the change correctly.",
    "submit_date": "2010-03-15",
    "submitter_name": "Herbie Robinson",
    "verifier_id": "113",
    "verifier_name": "Lars Eggert",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "2269",
    "doc-id": "RFC5681",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "7",
    "orig_text": "   The description of fast retransmit and fast recovery has been\r\n   clarified, and the use of Limited Transmit [RFC3042] is now\r\n   recommended.",
    "correct_text": "   The description of fast retransmit and fast recovery has been\r\n   clarified.",
    "notes": "Really using of Limited Transmit [RFC3042] is not recommended anywhere in RFC 5681.\n --VERIFIER NOTES-- \nWG consensus is that this errata is incorrect.   ",
    "submit_date": "2010-05-18",
    "submitter_name": "Nikolai Malykh",
    "verifier_id": "113",
    "verifier_name": "Lars Eggert",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "4068",
    "doc-id": "RFC5681",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "GLOBAL",
    "orig_text": null,
    "correct_text": null,
    "notes": "The problem is the use of the phrase \"new data\" in an imprecise manner to sometimes mean \"previously unacknowledged data\" and other times mean \"never before sent data\".\r\n\r\nFor example, in Section 3.1\r\n\r\n   During slow start, a TCP increments cwnd by at most SMSS bytes for\r\n   each ACK received that cumulatively acknowledges new data. \r\n\r\nThis should read \r\n\r\n   During slow start, a TCP increments cwnd by at most SMSS bytes for\r\n   each ACK received that cumulatively acknowledges previously \r\n   unacknowledged data.\r\n\r\nI believe that throughout Section 3.1 \"new data\" refers to \"previously unacknowledged data\".\r\n\r\nHowever, in Section 3.2 we have\r\n\r\n   After the fast retransmit algorithm sends what appears to be the\r\n   missing segment, the \"fast recovery\" algorithm governs the\r\n   transmission of new data until a non-duplicate ACK arrives.\r\n\r\nI believe that here \"new data\" refers to \"previously unsent data\".  \r\n\r\nThis is clearer in the following paragraph from Section 3.2\r\n\r\n   1.  On the first and second duplicate ACKs received at a sender, a\r\n       TCP SHOULD send a segment of previously unsent data per [RFC3042]\r\n       provided that the receiver's advertised window allows, the total\r\n       FlightSize would remain less than or equal to cwnd plus 2*SMSS,\r\n       and that new data is available for transmission.\r\n\r\nHere we can see the use of \"previously unsent data\" followed by \"new data\" \r\nwhich refers to the aforementioned \"previously unsent data\".\r\n\r\nWhile the meaning of \"new data\" might be clear to those with extensive experience\r\nin TCP it is imprecise and therefore may be quite confusing to those who are learning about the protocol.",
    "submit_date": "2014-08-04",
    "submitter_name": "Michael Taylor",
    "verifier_id": "133",
    "verifier_name": "Martin Stiemerling",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "5458",
    "doc-id": "RFC5681",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": "2",
    "orig_text": "   DUPLICATE ACKNOWLEDGMENT: An acknowledgment is considered a\r\n      \"duplicate\" in the following algorithms when (a) the receiver of\r\n      the ACK has outstanding data, (b) the incoming acknowledgment\r\n      carries no data, (c) the SYN and FIN bits are both off, (d) the\r\n      acknowledgment number is equal to the greatest acknowledgment\r\n      received on the given connection (TCP.UNA from [RFC793]) and (e)\r\n      the advertised window in the incoming acknowledgment equals the\r\n      advertised window in the last incoming acknowledgment.",
    "correct_text": "   DUPLICATE ACKNOWLEDGMENT: An acknowledgment is considered a\r\n      \"duplicate\" in the following algorithms when (a) the receiver of\r\n      the ACK has outstanding data, (b) the incoming acknowledgment\r\n      carries no data, (c) the SYN and FIN bits are both off, (d) the\r\n      acknowledgment number is equal to the greatest acknowledgment\r\n      received on the given connection (SND.UNA from [RFC793]) and (e)\r\n      the advertised window in the incoming acknowledgment equals the\r\n      advertised window in the last incoming acknowledgment.",
    "notes": "There is no such thing as TCP.UNA in RFC793.  The boundary between acknowledged and unacknowledged sent data is SND.UNA.",
    "submit_date": "2018-08-12",
    "submitter_name": "James McCauley",
    "verifier_id": "153",
    "verifier_name": "Mirja KÃ¼hlewind",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "6233",
    "doc-id": "RFC5681",
    "errata_status_code": "Rejected",
    "errata_type_code": "Editorial",
    "section": "4.3",
    "orig_text": "Finally, after all loss in the given window of segments\r\nhas been successfully retransmitted, cwnd MUST be set to no more than\r\nssthresh and congestion avoidance MUST be used to further increase\r\ncwnd.",
    "correct_text": "Finally, after all loss in the given window of segments\r\nhas been successfully retransmitted, cwnd MUST be set to no less than\r\nssthresh and congestion avoidance MUST be used to further increase\r\ncwnd.",
    "notes": "if set cwnd no more than ssthresh, it will using slow start algorithm instead of congestion avoidance algorithm. so it should say \"cwnd no less than ...\" instead of \"cwnd no more than ...\".\n --VERIFIER NOTES-- \n   This would be a significant design change in TCP. The original text is as intended by the community.",
    "submit_date": "2020-07-20",
    "submitter_name": "Charles Deng",
    "verifier_id": "167",
    "verifier_name": "Martin Duke",
    "update_date": "2020-07-21 07:04:59"
  }
]
