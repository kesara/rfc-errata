[
  {
    "errata_id": 1209,
    "doc-id": "RFC5087",
    "errata_status_code": "Rejected",
    "errata_type_code": "Editorial",
    "section": "1, 5th para",
    "orig_text": "   As with all PWs, TDMoIP PWs may be manually configured or set up\r\n   using the PWE3 control protocol [RFC4447].  Extensions to the PWE3\r\n   control protocol required specifically for setup and maintenance of\r\n   TDMoIP pseudowires are described in [TDM-CONTROL].\r\n",
    "correct_text": "|  As with all PWs over MPLS, TDMoIP PWs may be manually configured or set\r\n   up using the PWE3 control protocol [RFC4447].  Extensions to the PWE3\r\n   control protocol required specifically for setup and maintenance of\r\n|  TDMoIP pseudowires over MPLS are described in [TDM-CONTROL].\r\n",
    "notes": "The RFC pretends to cover all kinds of PWs; RFC 4447 only applies\r\nto PWE3 over MPLS (with LDP signaling).\r\nEither the abover text needs to be restricted in scope as porposed in the NEW\r\ntext or it should be amended to correctly cover the L2TPv3 case as well.\n --VERIFIER NOTES-- \n   This was correct at the time of publication. It was only with the later publication of RFC5611 that it became possible to signal L2TPv3 TDM PWs. ",
    "submit_date": "2008-01-03",
    "submitter_name": "Alfred Hoenes",
    "verifier_id": 122,
    "verifier_name": "Stewart Bryant",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 1210,
    "doc-id": "RFC5087",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "1, 2nd para",
    "orig_text": "           [...].  In contrast to SAToP, structure-aware methods such as\r\n   TDMoIP ensure the integrity of TDM structure and thus enable the PW\r\n   to better withstand network degradations.  [...]",
    "correct_text": "           [...].  In contrast to SAToP, structure-aware methods such as\r\n   TDMoIP ensure the integrity of the TDM structure and thus enable the\r\n   PW to better withstand network degradations.  [...]",
    "notes": "Missing article.",
    "submit_date": "2008-01-03",
    "submitter_name": "Alfred Hoenes",
    "verifier_id": 122,
    "verifier_name": "Stewart Bryant",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 1211,
    "doc-id": "RFC5087",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "2, 6th para",
    "orig_text": "   When structure-aware TDM transport is employed, it is possible to\r\n   explicitly safeguard TDM structure during transport over the PSN,\r\n   thus making possible to effectively conceal packet loss events.\r\n",
    "correct_text": "   When structure-aware TDM transport is employed, it is possible to\r\n|  explicitly safeguard the TDM structure during transport over the PSN,\r\n   thus making possible to effectively conceal packet loss events.\r\n",
    "notes": "Missing article.",
    "submit_date": "2008-01-03",
    "submitter_name": "Alfred Hoenes",
    "verifier_id": 122,
    "verifier_name": "Stewart Bryant",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 1212,
    "doc-id": "RFC5087",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": 4.3,
    "orig_text": "   Protocol  (8 bits) is the IP protocol field.  It must be set to 0x73\r\n      (115), the user port number that has been assigned to L2TP by\r\n      IANA.\r\n",
    "correct_text": "   Protocol  (8 bits) is the IP protocol field.  It must be set to 0x73\r\n|     (115), the protocol number that has been assigned to L2TP by\r\n      IANA.\r\n                 ^^^^^^^^",
    "notes": "Near the bottom of page 14, the explanations belo Figure 5\r\nconfuse the terms \"port number\" and \"protocol\".  Sigh!",
    "submit_date": "2008-01-03",
    "submitter_name": "Alfred Hoenes",
    "verifier_id": 122,
    "verifier_name": "Stewart Bryant",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 1213,
    "doc-id": "RFC5087",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "4.4, 3rd p.",
    "orig_text": "   Ethernet encapsulation introduces restrictions on both minimum and\r\n   maximum packet size.  Whenever the entire TDMoIP packet is less than\r\n   64 bytes, padding is introduced and the true length indicated by\r\n   using the Length field in the control word.  In order to avoid\r\n   fragmentation, the TDMoIP packet MUST be restricted to the maximum\r\n   payload size.  For example, the length of the Ethernet payload for a\r\n   UDP/IP encapsulation of AAL1 format payload with 30 PDUs per packet\r\n   is 1472 bytes, which falls below the maximal permitted payload size\r\n   of 1500 bytes.\r\n",
    "correct_text": "   Ethernet encapsulation introduces restrictions on both minimum and\r\n   maximum packet size.  Whenever the entire TDMoIP packet is less than\r\n   64 bytes, padding is introduced and the true length indicated by\r\n   using the Length field in the control word.  In order to avoid\r\n   fragmentation, the TDMoIP packet MUST be restricted to the maximum\r\n   payload size.  For example, the length of the Ethernet payload for a\r\n|  UDP/IP encapsulation of the AAL1 format payload with 30 PDUs per packet\r\n   is 1472 bytes, which falls below the maximal permitted payload size\r\n   of 1500 bytes.\r\n",
    "notes": "",
    "submit_date": "2008-01-03",
    "submitter_name": "Alfred Hoenes",
    "verifier_id": 122,
    "verifier_name": "Stewart Bryant",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 1214,
    "doc-id": "RFC5087",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": 4.4,
    "orig_text": "   Rows 1 through 6 are the (DIX) Ethernet header; for 802.3 there may\r\n   be additional fields, depending on the value of the length field, see\r\n   [IEEE802.3].  Fields not previously described will now be explained.\r\n",
    "correct_text": "|  Rows 1 through 5 are the (DIX) Ethernet header; for 802.3 there may\r\n   be additional fields, depending on the value of the length field, see\r\n   [IEEE802.3].  Fields not previously described will now be explained.\r\n",
    "notes": "On page 16, the explanation immediately below Figure 6 gives the wrong\r\nnumber of rows (6) -- it should be 5 !",
    "submit_date": "2008-01-03",
    "submitter_name": "Alfred Hoenes",
    "verifier_id": 122,
    "verifier_name": "Stewart Bryant",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 1215,
    "doc-id": "RFC5087",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": "6, 7th para",
    "orig_text": "   When the L flag is set there are four possibilities for treatment of\r\n   payload content.  The default is for IWF1 to fill the payload with\r\n   the appropriate amount of AIS (usually all-ones) data.  If the AIS\r\n   has been generated before the IWF this can be accomplished by copying\r\n   the received TDM data; if the penultimate TDM link fails and the IWF\r\n   needs to generate the AIS itself.  [...]",
    "correct_text": "   When the L flag is set there are four possibilities for treatment of\r\n   payload content.  The default is for IWF1 to fill the payload with\r\n   the appropriate amount of AIS (usually all-ones) data.  If the AIS\r\n   has been generated before the IWF this can be accomplished by copying\r\n|  the received TDM data; if the penultimate TDM link fails, the IWF \r\n   needs to generate the AIS itself.  [...]\r\n                                                           ^^^^^^",
    "notes": "",
    "submit_date": "2008-01-03",
    "submitter_name": "Alfred Hoenes",
    "verifier_id": 122,
    "verifier_name": "Stewart Bryant",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 1216,
    "doc-id": "RFC5087",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "6, 10th para",
    "orig_text": "a)\r\n     ... trail terminated scenario ...\r\n \r\n\r\nb)\r\n\r\n     ... trail extended scenario ...",
    "correct_text": "a)\r\n     ... trail-terminated scenario ...\r\n \r\n\r\nb)\r\n\r\n     ... trail-extended scenario ...",
    "notes": "Two missing hyphens.",
    "submit_date": "2008-01-03",
    "submitter_name": "Alfred Hoenes",
    "verifier_id": 122,
    "verifier_name": "Stewart Bryant",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 1217,
    "doc-id": "RFC5087",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "6, 11th para",
    "orig_text": "   The final possibility is that of a unidirectional defect in the PSN.\r\n   In such a case, TDMoIP IWF1 sends packets toward IWF2, but these are\r\n   not received.  [...]",
    "correct_text": "   The final possibility is that of a unidirectional defect in the PSN.\r\n|  In such a case, the TDMoIP IWF1 sends packets toward IWF2, but these \r\n   are not received.  [...]",
    "notes": "Missing article.",
    "submit_date": "2008-01-03",
    "submitter_name": "Alfred Hoenes",
    "verifier_id": 122,
    "verifier_name": "Stewart Bryant",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 1218,
    "doc-id": "RFC5087",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "6, 12th para",
    "orig_text": "   [...]\r\n   Since TDM PWs are inherently bidirectional, a persistent defect in \r\n|  either directional results in a bidirectional service failure.  [...]   \r\n                   ^^",
    "correct_text": "   [...]\r\n   Since TDM PWs are inherently bidirectional, a persistent defect in\r\n | either direction results in a bidirectional service failure.  [...]",
    "notes": "Typo/grammar.",
    "submit_date": "2008-01-03",
    "submitter_name": "Alfred Hoenes",
    "verifier_id": 122,
    "verifier_name": "Stewart Bryant",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 1219,
    "doc-id": "RFC5087",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": 7.3,
    "orig_text": "                                                 vvv\r\n      1.  If the TDMoIP PW has been set up using the PWE3 control\r\n      protocol [RFC4447], the regular PW teardown procedures of these\r\n      protocols SHOULD be used.\r\n      ^^^^^^^^^                                   ^^^^^^^^^^^^^^^^^^^^",
    "correct_text": "      1.  If a TDMoIP PW over MPLS has been set up using the PWE3 control\r\n      protocol [RFC4447], the regular PW teardown procedures of that\r\n      protocol SHOULD be used.\r\n",
    "notes": "In the last part of Section 7.3, on mid-page 27, the RFC again does\r\nnot fulfill its promises of covering all kind of PW technology.\r\nThe first part of the sentence above again only talks about a single\r\ncontrol protocol - RFC 4447 (PW setup & maintenance for MPLS using LDP),\r\nbut the second part inconsistently says \"procedures of these protocols\".\r\nSo what about L2TPv3 ???\r\n\r\nThe text needs to be restricted in scope and made consistent as proposed\r\nin the NEW text, or it needs to be expanded to cover L2TPv3 as well.\n --VERIFIER NOTES-- \n   This (pre-RFc5611) text was correct at the time of publication. ",
    "submit_date": "2008-01-03",
    "submitter_name": "Alfred Hoenes",
    "verifier_id": 122,
    "verifier_name": "Stewart Bryant",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 1220,
    "doc-id": "RFC5087",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": 9,
    "orig_text": "   For MPLS PSNs, PW Types for TDMoIP PWs are allocated in [RFC4446].\r\n",
    "correct_text": "   For MPLS PSNs, PW Types for TDMoIP PWs have originally been allocated\r\n   provisionally in [RFC4446]; IANA has updated the References for MPLS\r\n   pseudowire types 0x0016 and 0x0018 (for TDMoIP AAL1 mode and TDMoIP\r\n   AAL2 mode respectively) in the \"pwe3-parameters\" registry to point\r\n   to RFC 5087.\r\n\r\n   IANA has allocated two pseudowire type values for these encapsulations\r\n   from the \"L2TPv3 Pseudowire Types\" sub-registry of the \"l2tp-parameters\"\r\n   registry as follows:\r\n         <TBD1>  -  TDMoIP AAL1 Mode             [RFC5087]\r\n         <TBD2>  -  TDMoIP AAL2 Mode             [RFC5087]\r\n",
    "notes": "The IANA considerations given are incomplete and much too imprecise.\r\n\r\nThe net result is that IANA has *not* reparented the assignments\r\nfor TDMoIP to RFC 5087, leaving the registry inconsistent and\r\nconfusing for all but the real PWE3 gurus.\r\n\r\nAnd it has been missed entirely to request allocation of L2TPv3\r\nPW types for the two encapsulations described in RFC 5087.\r\n\r\nThe NEW text shows what IANA better should have been advised to do\r\nduring the publication process of RFC 5087.\r\n\r\nPerhaps, it is not too late to have these allocations be performed\r\nafter the publication of RFC 5087.\n --VERIFIER NOTES-- \nThe PW types registry has been updated so that types 0x16 and 0x18 now point to RFC5087. There seems to be limited value to the reader of RFC5087 in directing them to an erratum describing this registry update.\r\n\r\nRFC5611 is the document that describes the signalling for TDM PWs using L2TPv3 and allocation of associated  code points.\r\n",
    "submit_date": "2008-01-03",
    "submitter_name": "Alfred Hoenes",
    "verifier_id": 122,
    "verifier_name": "Stewart Bryant",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 1221,
    "doc-id": "RFC5087",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "App. A",
    "orig_text": "      if D > 0 then\r\n        { packets expected, expected+1, ... received-1 are lost }\r\n         while not over-run\r\n           place filler (all-ones or interpolation) into playout buffer\r\n           if not over-run then\r\n             place packet contents into playout buffer\r\n           else\r\n             discard packet contents\r\n           set expected = (received + 1) mod 2^16\r\n       else  { late packet arrived }\r\n         [...]",
    "correct_text": "       if D > 0 then\r\n         { packets expected, expected+1, ... received-1 are lost }\r\n         while not over-run  and  D > 0\r\n           place filler (all-ones or interpolation) into playout buffer\r\n           set D = D - 1\r\n         if not over-run then\r\n           place packet contents into playout buffer\r\n         else\r\n           discard packet contents\r\n         set expected = (received + 1) mod 2^16\r\n       else  { late packet arrived }\r\n         [...]",
    "notes": "The pseudocode on mid-page 31 is severely flawed.\r\nThe counter value 'D' is never decremented and hence almost useless.\r\nThe code will erroneously loop until over-run.\r\nAlso, the final treatment must be taken out of the loop,\r\nwhich needs to be indicated by reducing the indentation of 5 lines\r\nby two character positions.\n --VERIFIER NOTES-- \n   D is a local temporary variable that is recalculated whenever a new packet is received and the condition (received = expected) is false. The scope of D is the else condition in which it is calculated.\r\n",
    "submit_date": "2008-01-03",
    "submitter_name": "Alfred Hoenes",
    "verifier_id": 122,
    "verifier_name": "Stewart Bryant",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 1222,
    "doc-id": "RFC5087",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "App. B",
    "orig_text": "   When the TDM circuit is channelized according to [G704], and in\r\n   particular when it is desired to fractional E1 or T1, it is\r\n   advantageous to use one of the structured AAL1 circuit emulation\r\n   services.  [...]",
    "correct_text": "   When the TDM circuit is channelized according to [G704], and in\r\n | particular when it is desired to transport fractional E1 or T1, it is\r\n   advantageous to use one of the structured AAL1 circuit emulation\r\n   services.  [...]",
    "notes": "In the first paragraph on page 33, the verb \"transport\"  (or similar)\r\nis missing.",
    "submit_date": "2008-01-03",
    "submitter_name": "Alfred Hoenes",
    "verifier_id": 122,
    "verifier_name": "Stewart Bryant",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 1223,
    "doc-id": "RFC5087",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "App. C",
    "orig_text": "   CID  (8 bits) channel identifier is an identifier that must be unique\r\n      for the PW.  The values 0-7 are reserved for special purposes,\r\n      (and if interworking with VoDSL is required, so are values 8\r\n      through 15 as specified in [LES]), thus leaving 248 (240) CIDs per\r\n      PW.  The mapping of CID values to channels MAY be manually\r\n      configured manually or signaled.\r\n",
    "correct_text": "   CID  (8 bits) channel identifier is an identifier that must be unique\r\n      for the PW.  The values 0-7 are reserved for special purposes,\r\n      (and if interworking with VoDSL is required, so are values 8\r\n      through 15 as specified in [LES]), thus leaving 248 (240) CIDs per\r\n |    PW.  The mapping of CID values to channels MAY be configured \r\n      manually or signaled.\r\n",
    "notes": "Replication of \"manually\" fixed.",
    "submit_date": "2008-01-03",
    "submitter_name": "Alfred Hoenes",
    "verifier_id": 122,
    "verifier_name": "Stewart Bryant",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 1224,
    "doc-id": "RFC5087",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "Norm. Ref's",
    "orig_text": "   [RFC2119]     Bradner, S., \"Key Words in RFCs to Indicate Requirement\r\n                 Levels\", RFC 2119, March 1997.\r\n",
    "correct_text": "   [RFC2119]     Bradner, S., \"Key Words in RFCs to Indicate Requirement\r\n|                Levels\", BCP 14, RFC 2119, March 1997.\r\n                          ^^^^^^^^",
    "notes": "The \"BCP14, \" tag for RFC 2119 is missing.",
    "submit_date": "2008-01-03",
    "submitter_name": "Alfred Hoenes",
    "verifier_id": 122,
    "verifier_name": "Stewart Bryant",
    "update_date": "2019-09-10 09:09:03"
  }
]
