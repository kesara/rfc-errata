[
  {
    "errata_id": "3446",
    "doc-id": "RFC6749",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": "1",
    "orig_text": "o  Resource owners cannot revoke access to an individual third party\r\n   without revoking access to all third parties, and must do so by\r\n   changing the third party's password.",
    "correct_text": "o  Resource owners cannot revoke access to an individual third party\r\n   without revoking access to all third parties, and must do so by\r\n   changing their password.",
    "notes": "The text was originally \"their\" but changed to \"the third party's\" between the last draft and RFC.\r\nHowever, \"their\" means \"resource owners'\", not \"the third party's\".",
    "submit_date": "2013-01-07",
    "submitter_name": "Nov Matake",
    "verifier_id": "128",
    "verifier_name": "Stephen Farrell",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "3500",
    "doc-id": "RFC6749",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": "4.1",
    "orig_text": "(E)  The authorization server authenticates the client, validates the\r\n     authorization code, and ensures that the redirection URI\r\n     received matches the URI used to redirect the client in\r\n     step (C).  If valid, the authorization server responds back with\r\n     an access token and, optionally, a refresh token.",
    "correct_text": "(E)  The authorization server authenticates the client, validates the\r\n     authorization code, and ensures that the redirection URI\r\n     received matches the URI used to redirect (the resource owner's user-agent) \r\n     to the client in step (C).  If valid, the authorization server \r\n     responds back with an access token and, optionally, a refresh token.",
    "notes": "The URI in question is the URI that was used to redirect the resource owner's user-agent back to the client to deliver the code.  The original text in step (E) seems to say that this URI was used to redirect the client, but I think this is an ambiguous/imprecise use of the word \"client.\"  It was not the OAuth client that was redirected using that URI, it was the resource owner's user-agent that was redirected, *to* the client.\r\n\r\nThe parenthetical (the resource owner's user-agent) is more precise but may perhaps be too verbose.  I think, at minimum, we must say \"....the URI used to redirect *to* the client in step (C).\"",
    "submit_date": "2013-02-26",
    "submitter_name": "John Field",
    "verifier_id": "128",
    "verifier_name": "Stephen Farrell",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "3780",
    "doc-id": "RFC6749",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "3.2.1",
    "orig_text": "A client MAY use the \"client_id\" request parameter to identify itself\r\n   when sending requests to the token endpoint.",
    "correct_text": "A public client MAY use the \"client_id\" request parameter to identify \r\nitself when sending requests to the token endpoint.",
    "notes": "Note from AD: The provided link doesn't exactly demonstrate consensus, but the change makes sense, hence this is marked \"Held for Document Update\".\r\n\r\nFrom Submitter: The current text may mislead confidential clients to sent their client_id in the request body in addition to their client_id and client_secret in the BASIC authz header. This leads to unnecessary duplication and ambiguities. \r\n\r\nThere has been consensus on the list that the intention of this sentence was to advise _public_ clients to identity themselves towards the token endpoint in order to mitigate substitution attacks and allow for logging. Confidential clients need to authenticate anyway, this sentence should be narrowed down to public clients only. \r\n\r\nsee http://www.ietf.org/mail-archive/web/oauth/current/msg12005.html\r\n\r\nThis issue was discovered in the course of the OpenID Connect Interop testings.",
    "submit_date": "2013-11-04",
    "submitter_name": "Torsten Lodderstedt",
    "verifier_id": "2",
    "verifier_name": "Kathleen Moriarty",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "3880",
    "doc-id": "RFC6749",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "10.16",
    "orig_text": "For public clients using implicit flows, this specification does not\r\nprovide any method for the client to determine what client an access\r\ntoken was issued to.",
    "correct_text": "For public clients using implicit flows, this specification does not\r\nprovide any method for the authorization server to determine what\r\nclient an access token was issued to.",
    "notes": "A client can only know about tokens issued to it and not for other clients.\r\n\r\nFrom the WG:\r\nhttps://www.ietf.org/mail-archive/web/oauth/current/msg12391.html\n --VERIFIER NOTES-- \n   The current text is correct, see https://www.ietf.org/mail-archive/web/oauth/current/msg12391.html",
    "submit_date": "2014-02-04",
    "submitter_name": "Eriksen Costa",
    "verifier_id": "141",
    "verifier_name": "Kathleen Moriarty",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "3904",
    "doc-id": "RFC6749",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": "11.2.2.",
    "orig_text": null,
    "correct_text": "   o  Parameter name: error\r\n   o  Parameter usage location: authorization response, token response\r\n   o  Change controller: IETF\r\n   o  Specification document(s): RFC 6749\r\n",
    "notes": "\"error\" is missing and should be added to the list of Initial Registry Contents of OAuth Parameters Registry.\r\n\r\nAD note: This is in the normative registry, although it doesn't appear in the final published RFC.  The WG suspects there was a mistake that removed it from RFC 6749 prior to final publication.  I've marked this as editorial since the IANA registry is normative, but also as verified.",
    "submit_date": "2014-03-01",
    "submitter_name": "Takahiko Kawasaki",
    "verifier_id": "2",
    "verifier_name": "Kathleen Moriarty",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "4206",
    "doc-id": "RFC6749",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "4.1",
    "orig_text": "   (E)  The authorization server authenticates the client, validates the\r\n        authorization code, and ensures that the redirection URI\r\n        received matches the URI used to redirect the client in\r\n        step (C).  If valid, the authorization server responds back with\r\n        an access token and, optionally, a refresh token.",
    "correct_text": "   (E)  The authorization server authenticates the client, validates the\r\n        authorization code, and ensures that the redirection URI\r\n        received matches the redirection URI provided by the client in\r\n        step (A).  If valid, the authorization server responds back with\r\n        an access token and, optionally, a refresh token.",
    "notes": "AD & WG notes: The wording is better, so this is accepted, but it does mean the same thing.  The URI in A and C are the same.\r\n\r\nSee https://www.ietf.org/mail-archive/web/oauth/current/msg15277.html and responses.\r\n\r\nSubmitter notes: As written in section 4.1.3, the redirection URI in the access token request must match the redirection URI provided by the client in the authorization request (4.1.1). The URI used to redirect the user agent to the client in step (C) is actually different from this URI, as it contains the additional query parameters \"code\" and \"state\".\r\n\r\nAffects the same sentence as Errata ID: 3500.",
    "submit_date": "2014-12-23",
    "submitter_name": "Alexander Kempgen",
    "verifier_id": "2",
    "verifier_name": "Kathleen Moriarty",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "4679",
    "doc-id": "RFC6749",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "GLOBAL",
    "orig_text": "     Content-Type: application/json;charset=UTF-8\r\n",
    "correct_text": "     Content-Type: application/json",
    "notes": "application/json does not have charset parameter.",
    "submit_date": "2016-04-29",
    "submitter_name": "Yi EungJun",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "4697",
    "doc-id": "RFC6749",
    "errata_status_code": "Reported",
    "errata_type_code": "Editorial",
    "section": "7.1",
    "orig_text": "For example, the \"bearer\" token type defined in [RFC6750] is utilized\r\n   by simply including the access token string in the request:\r\n",
    "correct_text": "For example, the \"Bearer\" token type defined in [RFC6750] is utilized\r\n   by simply including the access token string in the request:\r\n",
    "notes": "RFC6750 defines the \"Bearer\" token type not the \"bearer\" token type.",
    "submit_date": "2016-05-19",
    "submitter_name": "Ludwig Seitz",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "4745",
    "doc-id": "RFC6749",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "5.2",
    "orig_text": "error\r\n         REQUIRED.  A single ASCII [USASCII] error code from the\r\n         following:\r\n\r\n         invalid_request\r\n               The request is missing a required parameter, includes an\r\n               unsupported parameter value (other than grant type),\r\n               repeats a parameter, includes multiple credentials,\r\n               utilizes more than one mechanism for authenticating the\r\n               client, or is otherwise malformed.\r\n\r\n         invalid_client\r\n               Client authentication failed (e.g., unknown client, no\r\n               client authentication included, or unsupported\r\n               authentication method).  The authorization server MAY\r\n               return an HTTP 401 (Unauthorized) status code to indicate\r\n               which HTTP authentication schemes are supported.  If the\r\n               client attempted to authenticate via the \"Authorization\"\r\n               request header field, the authorization server MUST\r\n               respond with an HTTP 401 (Unauthorized) status code and\r\n               include the \"WWW-Authenticate\" response header field\r\n               matching the authentication scheme used by the client.\r\n\r\n         invalid_grant\r\n               The provided authorization grant (e.g., authorization\r\n               code, resource owner credentials) or refresh token is\r\n               invalid, expired, revoked, does not match the redirection\r\n               URI used in the authorization request, or was issued to\r\n               another client.\r\n\r\n         unauthorized_client\r\n               The authenticated client is not authorized to use this\r\n               authorization grant type.\r\n\r\n         unsupported_grant_type\r\n               The authorization grant type is not supported by the\r\n               authorization server.\r\n\r\n         invalid_scope\r\n               The requested scope is invalid, unknown, malformed, or\r\n               exceeds the scope granted by the resource owner.\r\n\r\n         Values for the \"error\" parameter MUST NOT include characters\r\n         outside the set %x20-21 / %x23-5B / %x5D-7E.",
    "correct_text": "error\r\n         REQUIRED.  A single ASCII [USASCII] error code from the\r\n         following:\r\n\r\n         invalid_request\r\n               The request is missing a required parameter, includes an\r\n               unsupported parameter value (other than grant type),\r\n               repeats a parameter, includes multiple credentials,\r\n               utilizes more than one mechanism for authenticating the\r\n               client, or is otherwise malformed.\r\n\r\n         invalid_client\r\n               Client authentication failed (e.g., unknown client, no\r\n               client authentication included, or unsupported\r\n               authentication method).  The authorization server MAY\r\n               return an HTTP 401 (Unauthorized) status code to indicate\r\n               which HTTP authentication schemes are supported.  If the\r\n               client attempted to authenticate via the \"Authorization\"\r\n               request header field, the authorization server MUST\r\n               respond with an HTTP 401 (Unauthorized) status code and\r\n               include the \"WWW-Authenticate\" response header field\r\n               matching the authentication scheme used by the client.\r\n\r\n         invalid_grant\r\n               The provided authorization grant (e.g., authorization\r\n               code, resource owner credentials) or refresh token is\r\n               invalid, expired, revoked, does not match the redirection\r\n               URI used in the authorization request, or was issued to\r\n               another client.\r\n\r\n         unauthorized_client\r\n               The authenticated client is not authorized to use this\r\n               authorization grant type.\r\n\r\n         unsupported_grant_type\r\n               The authorization grant type is not supported by the\r\n               authorization server.\r\n\r\n         invalid_scope\r\n               The requested scope is invalid, unknown, malformed, or\r\n               exceeds the scope granted by the resource owner.\r\n\r\n         server_error\r\n               The authorization server encountered an unexpected\r\n               condition that prevented it from fulfilling the request.\r\n               (This error code is needed because a 500 Internal Server\r\n               Error HTTP status code cannot be returned to the client\r\n               via an HTTP redirect.)\r\n\r\n         temporarily_unavailable\r\n               The authorization server is currently unable to handle\r\n               the request due to a temporary overloading or maintenance\r\n               of the server.  (This error code is needed because a 503\r\n               Service Unavailable HTTP status code cannot be returned\r\n               to the client via an HTTP redirect.)\r\n\r\n         Values for the \"error\" parameter MUST NOT include characters\r\n         outside the set %x20-21 / %x23-5B / %x5D-7E.",
    "notes": "This is simply adding the server_error and temporarily_unavailable errors in other responses responses to the access token response for non-implicit grant types.",
    "submit_date": "2016-07-20",
    "submitter_name": "Clark Downum",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "4749",
    "doc-id": "RFC6749",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "2.3.1",
    "orig_text": "Clients in possession of a client password MAY use the HTTP Basic\r\nauthentication scheme as defined in [RFC2617] to authenticate with\r\nthe authorization server.  The client identifier is encoded using the\r\n\"application/x-www-form-urlencoded\" encoding algorithm per\r\nAppendix B, and the encoded value is used as the username; the client\r\npassword is encoded using the same algorithm and used as the\r\npassword.  The authorization server MUST support the HTTP Basic\r\nauthentication scheme for authenticating clients that were issued a\r\nclient password.",
    "correct_text": "Clients in possession of a client password MAY use the HTTP Basic\r\nauthentication scheme as defined in [RFC2617] to authenticate with\r\nthe authorization server.  The client identifier is encoded using the\r\n\"application/x-www-form-urlencoded\" encoding algorithm per\r\nAppendix B, and the encoded value is used as the username; the client\r\npassword is encoded using the same algorithm and used as the\r\npassword. The url encoded values are then encoded as defined in\r\n[RFC2617]. The authorization server MUST support the HTTP Basic\r\nauthentication scheme for authenticating clients that were issued a\r\nclient password.",
    "notes": "It was not clear to some implementers that the intention is a 2-step encoding. First for special characters and second the 2617 base 64 encoding.  Implementers thought 6749 was in conflict with 2617.\r\n\r\nTo avoid inter-op issues, a new clarifying sentence is proposed.\r\n\"The url encoded values are then encoded as defined in [RFC2617].\"",
    "submit_date": "2016-07-26",
    "submitter_name": "Phil Hunt",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "4819",
    "doc-id": "RFC6749",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "4.2.2",
    "orig_text": "HTTP/1.1 302 Found\r\nLocation: http://example.com/cb#\r\n          access_token=2YotnFZFEjr1zCsicMWpAA\r\n          &state=xyz&token_type=example&expires_in=3600",
    "correct_text": "HTTP/1.1 302 Found\r\nLocation: http://client.example.com/cb#\r\n          access_token=2YotnFZFEjr1zCsicMWpAA\r\n          &state=xyz&token_type=example&expires_in=3600",
    "notes": "In the example for section 4.2.1, the request was made with a `redirect_uri` parameter value of `redirect_uri=https%3A%2F%2Fclient%2Eexample%2Ecom%2Fcb`. If I understand correctly, the `client` subdomain should be included in the `Location` header in the response.",
    "submit_date": "2016-10-05",
    "submitter_name": "Lars Kemmann",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "4945",
    "doc-id": "RFC6749",
    "errata_status_code": "Reported",
    "errata_type_code": "Editorial",
    "section": "4.1.4",
    "orig_text": "If the access token request is valid and authorized, the\r\n   authorization server issues an access token and optional refresh\r\n   token as described in Section 5.1.  If the request client\r\n   authentication failed or is invalid, the authorization server returns\r\n   an error response as described in Section 5.2.",
    "correct_text": "If the access token request is valid and authorized, the\r\n   authorization server issues an access token and optional refresh\r\n   token as described in Section 5.1.  If the request failed client\r\n   authentication or is invalid, the authorization server returns\r\n   an error response as described in Section 5.2.",
    "notes": "In the 2nd line, \"request failed\" makes more sense than the original text.\r\nThe 1st paragraph of section 5 in the document and the para just before section 5 also state \"If the request failed client authentication or ...\" instead of what is currently mentioned in section 4.1.4.\r\n\r\nIt is just a typing mistake, I think the words got exchanged during typing.\r\nPlease, correct it.",
    "submit_date": "2017-02-21",
    "submitter_name": "Abhimanyu Singh Gaur",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "5234",
    "doc-id": "RFC6749",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "2.1.",
    "orig_text": "   public\r\n      Clients incapable of maintaining the confidentiality of their\r\n      credentials (e.g., clients executing on the device used by the\r\n      resource owner, such as an installed native application or a web\r\n      browser-based application), and incapable of secure client\r\n      authentication via any other means.",
    "correct_text": "   public\r\n      Clients incapable of maintaining the confidentiality of their\r\n      credentials (e.g., clients executing on the device used by the\r\n      third-party (not resource owner but another end user), such as an\r\n      installed native application or a web\r\n      browser-based application), and incapable of secure client\r\n      authentication via any other means.",
    "notes": "I think in case of public client type, it should state as \"e.g. the clients executing on the device used by third-party and not the actual resource owner\" as mentioned in the original RFC. I let the author or experts to review my remark. Thanks.",
    "submit_date": "2018-01-12",
    "submitter_name": "Randip Kumar Malakar",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "5332",
    "doc-id": "RFC6749",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "4.1",
    "orig_text": "(B)  The authorization server authenticates the resource owner (via\r\n     the user-agent) and establishes whether the resource owner\r\n     grants or denies the client's access request.",
    "correct_text": "(B)  The authorization server validates the request to ensure that \r\n     all required parameters are present and valid.  If the request \r\n     is valid, the authorization server authenticates the resource \r\n     owner and obtains an authorization decision (by asking the \r\n     resource owner via the user-agent or by use of other \r\n     established approval means).\r\n",
    "notes": "\"Section 4.1 Authorization Code Grant (B)\" conflicts with \"Section 4.1.1 Authorization\r\nRequest\".  The current verbiage implies the resource owner should be authenticated \r\nprior to \"The authorization server validates the request to ensure that all required \r\nparameters are present and valid\".  Such implementations lead to overly complex \r\nuser experiences when the Authorization Server determines the request is invalid.",
    "submit_date": "2018-04-24",
    "submitter_name": "Donald F Coffin",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "5379",
    "doc-id": "RFC6749",
    "errata_status_code": "Reported",
    "errata_type_code": "Editorial",
    "section": "5.1, 4.2.2",
    "orig_text": "expires_in\r\n         RECOMMENDED.  The lifetime in seconds of the access token.  For\r\n         example, the value \"3600\" denotes ...",
    "correct_text": "expires_in\r\n         RECOMMENDED.  The lifetime in seconds of the access token.  For\r\n         example, the value 3600 denotes ...",
    "notes": "The \"expires_in\" member in JSON must be a numeric value, not a string. Unfortunately quite a few implementations have got this wrong. A likely reason is the quoted value \"3600\" in the RFC where \"expires_in\" is defined. The quotes in the text version of the RFC are only an artefact of the marked-up as a protocol value in the RFC production chain.",
    "submit_date": "2018-06-06",
    "submitter_name": "James Manger",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "5708",
    "doc-id": "RFC6749",
    "errata_status_code": "Reported",
    "errata_type_code": "Editorial",
    "section": "3.1 and 3.2",
    "orig_text": "Parameters sent without a value MUST be treated as if they were\r\nomitted from the request.  The authorization server MUST ignore\r\nunrecognized request parameters.  Request and response parameters\r\nMUST NOT be included more than once.",
    "correct_text": "Parameters sent without a value MUST be treated as if they were\r\nomitted from the request.  The authorization server MUST ignore\r\nunrecognized request parameters.  Request and response parameters\r\ndefined by this specification MUST NOT be included more than once.",
    "notes": "Adds the text \"defined by this specification\" to the last sentence to clarify that the restriction only applies to parameters defined in RFC 6749 and not to unrecognized parameters or parameters defined by extension.",
    "submit_date": "2019-04-29",
    "submitter_name": "Brian Campbell",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "5793",
    "doc-id": "RFC6749",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "2.3.1",
    "orig_text": "   Alternatively, the authorization server MAY support including the\r\n   client credentials in the request-body using the following\r\n   parameters:",
    "correct_text": "   In addition to that, the authorization server MAY support including\r\n   the client credentials in the request-body using the following\r\n   parameters:",
    "notes": "Given that the authorization MUST support the HTTP Basic authentication scheme in the paragraphs just before this one, using the word \"alternatively\" here can be understood as \"instead of\", which is not the intention and can lead to confusion for implementors.\r\n\r\nThis intention is further highlighted by the use of the word MAY in the paragraph above.",
    "submit_date": "2019-07-25",
    "submitter_name": "Martin May",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "5873",
    "doc-id": "RFC6749",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "11.4",
    "orig_text": null,
    "correct_text": "11.4.2 Initial Registry Contents\r\n\r\nThe OAuth Extensions Error registry's initial contents are:\r\n\r\no Error name: invalid_request\r\no Error usage location: authorization code grant error response, implicit grant error response, token error response\r\no Related protocol extension: authorization code grant, implicit grant, any access token type\r\no Change controller: IETF\r\no Specification document(s): RFC 6749\r\n\r\no Error name: unauthorized_client\r\no Error usage location: authorization code grant error response, implicit grant error response, token error response\r\no Related protocol extension: authorization code grant, implicit grant, any access token type\r\no Change controller: IETF\r\no Specification document(s): RFC 6749\r\n\r\no Error name: access_denied\r\no Error usage location: authorization code grant error response, implicit grant error response\r\no Related protocol extension: authorization code grant, implicit grant\r\no Change controller: IETF\r\no Specification document(s): RFC 6749\r\n\r\no Error name: unsupported_response_type\r\no Error usage location: authorization code grant error response, implicit grant error response\r\no Related protocol extension: authorization code grant, implicit grant\r\no Change controller: IETF\r\no Specification document(s): RFC 6749\r\n\r\no Error name: invalid_scope\r\no Error usage location: authorization code grant error response, implicit grant error response, token error response\r\no Related protocol extension: authorization code grant, implicit grant, any access token type\r\no Change controller: IETF\r\no Specification document(s): RFC 6749\r\n\r\no Error name: server_error\r\no Error usage location: authorization code grant error response, implicit grant error response\r\no Related protocol extension: authorization code grant, implicit grant\r\no Change controller: IETF\r\no Specification document(s): RFC 6749\r\n\r\no Error name: temporarily_unavailable\r\no Error usage location: authorization code grant error response, implicit grant error response\r\no Related protocol extension: authorization code grant, implicit granto Change controller: IETF\r\no Specification document(s): RFC 6749\r\n\r\no Error name: invalid_client\r\no Error usage location: token error response\r\no Related protocol extension: any access token type\r\no Change controller: IETF\r\no Specification document(s): RFC 6749\r\n\r\no Error name: invalid_grant\r\no Error usage location: token error response\r\no Related protocol extension: any access token type\r\no Change controller: IETF\r\no Specification document(s): RFC 6749\r\n\r\no Error name: unsupported_grant_type\r\no Error usage location: token error response\r\no Related protocol extension: any access token type\r\no Change controller: IETF\r\no Specification document(s): RFC 6749",
    "notes": "It seems that the values specified in sections 4.1.2.1.,4.2.2.1. and 5.2. should have been added to the registry but were forgotten.\r\nThis errata suggests \"any access token type\" for \"Related protocol extension\" for the error codes of 5.2 since they seem to apply to any errors returned from the token endpoint, no matter which access token type is involved.",
    "submit_date": "2019-10-11",
    "submitter_name": "Ludwig Seitz",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": null
  },
  {
    "errata_id": "6017",
    "doc-id": "RFC6749",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "2.3.1",
    "orig_text": "Clients in possession of a client password MAY use the HTTP Basic\r\n   authentication scheme as defined in [RFC2617] to authenticate with\r\n   the authorization server.  The client identifier is encoded using the\r\n   \"application/x-www-form-urlencoded\" encoding algorithm per\r\n   Appendix B, and the encoded value is used as the username; the client\r\n   password is encoded using the same algorithm and used as the\r\n   password.",
    "correct_text": "Clients in possession of a client password MAY use the HTTP Basic\r\n   authentication scheme as defined in [RFC7617] to authenticate with\r\n   the authorization server.",
    "notes": "RFC 2617 has been superseded by RFC7617 which clearly defines in section 2.1 how a charset can be provided to solve the usecase described with encoding.\r\n\r\nThe original text of this RFC violates the approach described for Basic authentication.",
    "submit_date": "2020-03-15",
    "submitter_name": "Michael Osipov",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": null
  },
  {
    "errata_id": "6613",
    "doc-id": "RFC6749",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": "3.3",
    "orig_text": "The value of the scope parameter is expressed as a list of space-delimited, case-sensitive strings",
    "correct_text": "The value of the scope parameter is expressed as a space-delimited list of case-sensitive strings",
    "notes": "The original/current seems to be a bit confusing.\r\n\r\nThe value is not a collection of space-delimited strings (whatever a \"space-delimited string\" would be), but it a space-delimited (representation of) a collection of strings.",
    "submit_date": "2021-06-17",
    "submitter_name": "Daniel Barclay",
    "verifier_id": "159",
    "verifier_name": "Benjamin Kaduk",
    "update_date": "2021-07-18 16:30:55"
  },
  {
    "errata_id": "6614",
    "doc-id": "RFC6749",
    "errata_status_code": "Reported",
    "errata_type_code": "Editorial",
    "section": "5.1",
    "orig_text": "... adding the following parameters to the entity-body of the HTTP response ...",
    "correct_text": "... adding the following parameters as members to the JSON object in the entity-body of the HTTP response ...",
    "notes": "Saying \"adding the following parameters to the entity-body\" seems to be confusing, \r\nimplying that HTTP entity bodies have parameters (at the level of semantics defined by HTTP), which they don't.\r\n\r\nThe corrected text doesn't necessarily need to be what I proposed in the \"Corrected Text\" field, but it should probably at least refer to the data or (JSON) object inside the entity body instead of just referring to the entity body.",
    "submit_date": "2021-06-17",
    "submitter_name": "Daniel Barclay",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": null
  },
  {
    "errata_id": "6615",
    "doc-id": "RFC6749",
    "errata_status_code": "Reported",
    "errata_type_code": "Editorial",
    "section": "GLOBAL",
    "orig_text": "Condition descriptions like \"The authorization server ... validates the authorization grant, and if valid, issues an access token.\"\r\n ",
    "correct_text": "Adjusted descriptions like \"The authorization server ... validates the authorization grant, and if it is valid, issues an access token.\"\r\n",
    "notes": "The wording pattern \"A validates B, and if valid, does X\" means \"A validates B, and if A is valid, does X\" and is confusing.\r\n\r\nThose descriptions' wording should be adjusted, probably to the pattern \"A validates B, and if it is valid, does X\" (or whatever else actually says what was meant to be specified).\r\n\r\nThere are many occurrences with literally \"and if valid\"; it looks (from a quick search) like most, but not all, need adjustment. There are also several cases of \"and if\" followed by something other than \"valid\"--some seem correct, but a few might need adjustment.",
    "submit_date": "2021-06-17",
    "submitter_name": "Daniel Barclay",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": null
  },
  {
    "errata_id": "7429",
    "doc-id": "RFC6749",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "2",
    "orig_text": "Before initiating the protocol, the client registers with the\r\n   authorization server.  The means through which the client registers\r\n   with the authorization server are beyond the scope of this\r\n   specification but typically involve end-user interaction with an HTML\r\n   registration form.",
    "correct_text": "Before initiating the protocol, the client registers with the\r\n   authorization server.  The means through which the client registers\r\n   with the authorization server are beyond the scope of this\r\n   specification but typically involve client developer interaction with an HTML\r\n   registration form.",
    "notes": "As described in 1.1 resource owner if person is referred to as end user. Resource owner is not responsible for registering a client with authorization server, but the client developer is.",
    "submit_date": "2023-04-20",
    "submitter_name": "Gasan Guseinov",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": null
  },
  {
    "errata_id": "7631",
    "doc-id": "RFC6749",
    "errata_status_code": "Reported",
    "errata_type_code": "Editorial",
    "section": "3.2.1",
    "orig_text": "This protects the client from substitution of the authentication code.",
    "correct_text": "This protects the client from substitution of the authorization code.",
    "notes": "It will be a bit confusing to figure out if it is a MAC or an authorization code.",
    "submit_date": "2023-09-05",
    "submitter_name": "Daiki Usami",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": null
  },
  {
    "errata_id": "7642",
    "doc-id": "RFC6749",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "1",
    "orig_text": " Instead, she authenticates directly with a server trusted by the photo-sharing service (authorization server), which issues the printing service delegation-\r\nspecific credentials (access token).",
    "correct_text": "Instead, she directly authenticates with a trusted server, the authorization server, which issues delegation-specific credentials, known as access tokens, to the printing service for controlled and secure access.",
    "notes": "The sentence is confusing, and the reader might confuse the Authorization Server with the Resource Server.",
    "submit_date": "2023-09-17",
    "submitter_name": "Wilhelm Fast",
    "verifier_id": "2",
    "verifier_name": null,
    "update_date": "2023-09-18 15:21:44"
  },
  {
    "errata_id": "7715",
    "doc-id": "RFC6749",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "4.2.2.1",
    "orig_text": "   HTTP/1.1 302 Found\r\n   Location: https://client.example.com/cb#error=access_denied&state=xyz",
    "correct_text": "   HTTP/1.1 302 Found\r\n   Location: https://client.example.com/cb?error=access_denied&state=xyz",
    "notes": "For query parameters, the hash should be a question mark.",
    "submit_date": "2023-11-29",
    "submitter_name": "Alex Wilson",
    "verifier_id": "2",
    "verifier_name": null,
    "update_date": "2023-11-29 11:11:26"
  },
  {
    "errata_id": "7716",
    "doc-id": "RFC6749",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "4.2.2",
    "orig_text": "   For example, the authorization server redirects the user-agent by\r\n   sending the following HTTP response (with extra line breaks for\r\n   display purposes only):\r\n\r\n     HTTP/1.1 302 Found\r\n     Location: http://example.com/cb#access_token=2YotnFZFEjr1zCsicMWpAA\r\n               &state=xyz&token_type=example&expires_in=3600\r\n",
    "correct_text": "   For example, the authorization server redirects the user-agent by\r\n   sending the following HTTP response (with extra line breaks for\r\n   display purposes only):\r\n\r\n     HTTP/1.1 302 Found\r\n     Location: http://client.example.com/cb?access_token=2YotnFZFEjr1zCsicMWpAA\r\n               &state=xyz&token_type=example&expires_in=3600\r\n",
    "notes": "- Host example.com should be client.example.com to be consistent with other examples.\r\n- A hash is used for the query parameters when a question mark should have been used.",
    "submit_date": "2023-11-29",
    "submitter_name": "Alex Wilson",
    "verifier_id": "2",
    "verifier_name": null,
    "update_date": "2023-11-29 11:13:09"
  }
]
