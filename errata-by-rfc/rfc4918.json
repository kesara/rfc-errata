[
  {
    "errata_id": 1068,
    "doc-id": "RFC4918",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "10.4.7",
    "orig_text": "     If: (Not <urn:uuid:181d4fae-7d8c-11d0-a765-00a0c91e6bf2>\r\n     <urn:uuid:58f202ac-22cf-11d1-b12d-002035b29092>) ",
    "correct_text": "     If: (Not <urn:uuid:181d4fae-7d8c-11d0-a765-00a0c91e6bf2>\r\n          <urn:uuid:58f202ac-22cf-11d1-b12d-002035b29092>) ",
    "notes": "Indentation is relevant here. In the published form, the second line would be a separate (invalid) HTTP header, not a continuation line.",
    "submit_date": "2007-11-13",
    "submitter_name": "Julian Reschke",
    "verifier_id": 99,
    "verifier_name": "Lisa Dusseault",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 1207,
    "doc-id": "RFC4918",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "9.10.1",
    "orig_text": "   A LOCK request to an existing resource will create a lock on the\r\n   resource identified by the Request-URI, provided the resource is not\r\n   already locked with a conflicting lock.  The resource identified in\r\n   the Request-URI becomes the root of the lock.  LOCK method requests\r\n   to create a new lock MUST have an XML request body.  The server MUST\r\n   preserve the information provided by the client in the 'owner'\r\n   element in the LOCK request.  The LOCK request MAY have a Timeout\r\n   header.\r\n",
    "correct_text": "   A LOCK request to an existing resource will create a lock on the\r\n   resource identified by the Request-URI, provided the resource is not\r\n   already locked with a conflicting lock.  The Request-URI becomes the\r\n   root of the lock.  LOCK method requests\r\n   to create a new lock MUST have an XML request body.  The server MUST\r\n   preserve the information provided by the client in the 'owner'\r\n   element in the LOCK request.  The LOCK request MAY have a Timeout\r\n   header.",
    "notes": "This is incorrect in that it implies that the \"lock root\" is a resource, not a URL (<http://ietf.osafoundation.org:8080/bugzilla/show_bug.cgi?id=251>). However, should a directly locked resource have multiple bindings, only the one used in the Request-URI of the LOCK request will be the protected from changes of clients not supplying the lock token.\r\n\r\nNote that this change makes the description consistent with the definition of the DAV:lockroot XML element in Section 14.12 of [RFC4918].",
    "submit_date": "2008-01-03",
    "submitter_name": "Julian Reschke",
    "verifier_id": 121,
    "verifier_name": "Peter Saint-Andre",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 1371,
    "doc-id": "RFC4918",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": 9.2,
    "orig_text": "    Servers MUST process PROPPATCH instructions in document order (an\r\n    exception to the normal rule that ordering is irrelevant).\r\n",
    "correct_text": "    Servers MUST process the child elements of the propertyupdate XML\r\n    element in the order they appear in the request body (an exception to\r\n    the normal rule that ordering is irrelevant).\r\n",
    "notes": "There are no \"PROPPATCH\" instructions in the request document (PROPPATCH is a method name, not an XML element name used in WebDAV). \r\n\r\nNote this issue was raised during Gen-art review, but not fixed before publication (http://www.ietf.org/mail-archive/web/gen-art/current/msg01823.html)",
    "submit_date": "2008-03-14",
    "submitter_name": "Julian Reschke",
    "verifier_id": 121,
    "verifier_name": "Peter Saint-Andre",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 1430,
    "doc-id": "RFC4918",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": 9.3,
    "orig_text": "9.3.  MKCOL Method\r\n\r\n   MKCOL creates a new collection resource at the location specified by\r\n   the Request-URI. [...]",
    "correct_text": "9.3 MKCOL Method\r\n\r\n   The MKCOL method is used to create a new collection. All DAV compliant\r\n   resources MUST support the MKCOL method.\r\n\r\n   MKCOL creates a new collection resource at the location specified by\r\n   the Request-URI. [...]",
    "notes": "The statement, that support for MKCOL is a MUST-requirement has unintentionally been dropped.",
    "submit_date": "2008-05-26",
    "submitter_name": "Werner Baumann",
    "verifier_id": 101,
    "verifier_name": "Lisa Dusseault",
    "update_date": "2021-07-20 16:39:13"
  },
  {
    "errata_id": 1519,
    "doc-id": "RFC4918",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": 8.3,
    "orig_text": "Within Simple-ref productions, senders MUST NOT:\r\n\r\n   o  use dot-segments (\".\" or \"..\"), or\r\n\r\n   o  have prefixes that do not match the Request-URI (using the\r\n      comparison rules defined in Section 3.2.3 of [RFC2616]).\r\n\r\n\r\n",
    "correct_text": "Within Simple-ref productions, senders MUST NOT use dot-segments (\".\" or \"..\").\r\nSimple-ref productions used in Multi-Status responses MUST NOT have prefixes that\r\ndo not match the Request-URI (using the comparison rules defined in Section 3.2.3\r\nof [RFC2616]).\r\n\r\n\r\n",
    "notes": "The original text explicitly applies not only to Simple-ref productions used in Multi-Status responses, but also to those used in Destination Headers. Since URIs used in Destination headers may have other prefixes (for example in a cross-server COPY request), this is wrong.",
    "submit_date": "2008-09-19",
    "submitter_name": "Manfred Baedke",
    "verifier_id": 121,
    "verifier_name": "Peter Saint-Andre",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 1635,
    "doc-id": "RFC4918",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": 7.4,
    "orig_text": "MOVE an internal member into the collection,",
    "correct_text": "MOVE inserting a new internal member into the collection,",
    "notes": "Edited the corrected text as per discussion between Lisa and Julian.",
    "submit_date": "2008-12-13",
    "submitter_name": "Zdenek Kouba",
    "verifier_id": 116,
    "verifier_name": "Alexey Melnikov",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 4431,
    "doc-id": "RFC4918",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "GLOBAL",
    "orig_text": null,
    "correct_text": null,
    "notes": "The phrase: \"live properties defined in this specification.\" is used throughout RFC4918 but there is no place they are defined.\r\n\r\nCareful reading can deduce what they may be, but that is not satisfactory.  It would be better to actually define them.",
    "submit_date": "2015-08-02",
    "submitter_name": "Worik Stanton",
    "verifier_id": 99,
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 4435,
    "doc-id": "RFC4918",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "9.8.5",
    "orig_text": null,
    "correct_text": "The 404 (Not Found) status code indicates that the origin server did\r\n   not find a current representation for the target resource or is not\r\n   willing to disclose that one exists.  A 404 status code does not\r\n   indicate whether this lack of representation is temporary or\r\n   permanent; the 410 (Gone) status code is preferred over 404 if the\r\n   origin server knows, presumably through some configurable means, that\r\n   the condition is likely to be permanent.\r\n\r\n   ",
    "notes": "The case of the resource being copied not existing is not covered.  I assume that a 404 error is appropriate, but that is my assumption.",
    "submit_date": "2015-08-05",
    "submitter_name": "Worik Stanton",
    "verifier_id": 2,
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 4440,
    "doc-id": "RFC4918",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": 9.8,
    "orig_text": null,
    "correct_text": null,
    "notes": "There are several ambiguities in this section.  Here is one.\r\n\r\nCopying a resource to a defined collection: \r\n\r\nFrom    To    Result\r\n/a/c/d  /b/    /b/d       \r\n\r\nThis is the logical interpretation and does not conflict with the specifications.  But...\r\n\r\nFrom    To    Result\r\n/a/c/d  /b/   /d           (/b/ is overwritten)\r\n\r\nThis perverse but does not conflict either.  Trashing he complete collection in this way cannot be right, but it is not in conflict with anything I can find in section 9.8.  The closest I can find is:\r\n\r\n\"When a collection is overwritten, the membership of the destination   collection after the successful COPY request MUST be the same membership as the source collection immediately before the COPY.\"\r\n\r\nThis does not explicitly prohibit overwriting a collection with a non-collection.\r\n\r\n\r\nThe specification uses \"in the destination..\" and \"at the destination...\" interchangeably.\r\n\r\n\"The COPY method creates a duplicate of the source resource identified by the Request-URI, in the destination resource identified by the URI in the Destination header.\"  This suggests the first\r\n\r\nThe specification also says: \"When the source resource is not a collection, the result of the COPY method is the creation of a new resource at the destination whose state and behavior match that of the source resource as closely as possible.\"  This could mean the second.\r\n\r\nPossibly copying a non-collection resource to a collection resource should not be allowed (but I can find no such prohibition)",
    "submit_date": "2015-08-09",
    "submitter_name": "Worik Stanton",
    "verifier_id": 99,
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  }
]
