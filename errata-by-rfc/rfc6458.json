[
  {
    "errata_id": 4921,
    "doc-id": "RFC6458",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": 9.1,
    "orig_text": "If sd is an IPv4 socket, the addresses passed must be IPv4 addresses.\r\nIf the sd is an IPv6 socket, the addresses passed can either be IPv4\r\nor IPv6 addresses.",
    "correct_text": "If sd is an IPv4 socket, the passed addresses must be IPv4 addresses.\r\nIf sd is an IPv6 socket, the passed addresses must be IPv6 addresses.\r\nUse IPv4-mapped IPv6 addresses to bind an IPv6 socket to an IPv4\r\naddress. Note that some implementations optionally allow IPv4 addresses\r\nto be passed in directly.",
    "notes": "The erratum is a subtle change in meaning that would be a useful clarification.",
    "submit_date": "2017-02-02",
    "submitter_name": "Jonathan Leighton",
    "verifier_id": 167,
    "verifier_name": "Martin Duke",
    "update_date": "2020-04-27 13:45:03"
  },
  {
    "errata_id": 6081,
    "doc-id": "RFC6458",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "GLOBAL",
    "orig_text": "8.1.26    must indicate that they are\r\n   finished sending a particular record by including the SCTP_EOR flag.\r\n\r\nbut I can not find where to use SCTP_EOR flag.\r\n\r\nbecause\r\n\r\n5.1  The msg_flags are not used when sending a message with sendmsg().\r\n\r\n3.1.4  flags:  No new flags are defined for SCTP at this level.  See\r\n      Section 5 for SCTP-specific flags used in the msghdr structure.\r\n\r\n4.1.8 same with 3.1.4\r\n\r\n9.10, 9.12    flags:  The same flags as used by the sendmsg() call flags (e.g.,\r\n      MSG_DONTROUTE).\r\n\r\n9.7   flags:  The same as sinfo_flags (see Section 5.3.2).\r\n\r\n5.3.2 sinfo_flags not mention about it  ",
    "correct_text": "maybe msg_flags should be used.",
    "notes": "Another problem is that, I think it should be discuss about debfine a flag like SCTP_BOR for beginning(init chunk) of a Record, because a stream of this socket(assoc) can still be used after send a SCTP_EOR.\r\n\r\nAnd between  a init chunk and  a STCP_EOR,  if I change SCTP_EXPLICIT_EOR status, what the socket will send the message?\n --VERIFIER NOTES-- \n6111 addresses the same problem and has a more actionable recommendation.",
    "submit_date": "2020-04-09",
    "submitter_name": "wanglihe",
    "verifier_id": 167,
    "verifier_name": "Martin Duke",
    "update_date": "2020-04-27 14:53:28"
  },
  {
    "errata_id": 6111,
    "doc-id": "RFC6458",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "GLOBAL",
    "orig_text": "in Section 5.3.2\r\n\r\n         SCTP_EOF:  Setting this flag invokes the SCTP graceful shutdown\r\n            procedure on the specified association.  Graceful shutdown\r\n            assures that all data queued by both endpoints is\r\n            successfully transmitted before closing the association.\r\n\r\n         SCTP_SENDALL:  This flag, if set, will cause a one-to-many\r\n            style socket to send the message to all associations that\r\n            are currently established on this socket.  For the one-to-\r\n            one style socket, this flag has no effect.\r\n\r\n\r\n\r\nin Section 5.3.4\r\n\r\n      SCTP_EOF:  Setting this flag invokes the SCTP graceful shutdown\r\n         procedures on the specified association.  Graceful shutdown\r\n         assures that all data queued by both endpoints is successfully\r\n         transmitted before closing the association.\r\n\r\n      SCTP_SENDALL:  This flag, if set, will cause a one-to-many style\r\n         socket to send the message to all associations that are\r\n         currently established on this socket.  For the one-to-one style\r\n         socket, this flag has no effect.\r\n\r\n\r\n\r\nin Section 8.1.13\r\n\r\nThe sinfo_flags field is composed of a bitwise OR\r\nof SCTP_UNORDERED, SCTP_EOF, and SCTP_SENDALL.\r\n\r\n\r\n\r\nin Section 8.1.31\r\n\r\nThe snd_flags parameter is composed of a bitwise OR \r\nof SCTP_UNORDERED, SCTP_EOF, and SCTP_SENDALL.\r\n",
    "correct_text": "in Section 5.3.2\r\n\r\n         SCTP_EOF:  Setting this flag invokes the SCTP graceful shutdown\r\n            procedure on the specified association.  Graceful shutdown\r\n            assures that all data queued by both endpoints is\r\n            successfully transmitted before closing the association.\r\n\r\n         SCTP_EOR: This flag, if set and explicit EOR marking (see\r\n            Section 8.1.26) is enabled , indicates that the user data\r\n            provided is the last part of a user message. If explicit\r\n            EOR marking is disabled, this flag is not relevant, since the\r\n            user data provided is a complete user message.\r\n\r\n         SCTP_SENDALL:  This flag, if set, will cause a one-to-many\r\n            style socket to send the message to all associations that\r\n            are currently established on this socket.  For the one-to-\r\n            one style socket, this flag has no effect.\r\n\r\n\r\n\r\nin Section 5.3.4\r\n\r\n      SCTP_EOF:  Setting this flag invokes the SCTP graceful shutdown\r\n         procedures on the specified association.  Graceful shutdown\r\n         assures that all data queued by both endpoints is successfully\r\n         transmitted before closing the association.\r\n\r\n      SCTP_EOR: This flag, if set and explicit EOR marking (see Section 8.1.26)\r\n         is enabled , indicates that the user data provided is the last part of\r\n         a user message. If explicit EOR marking is disabled, this flag is\r\n         not relevant, since the user data provided is a complete user message.\r\n\r\n      SCTP_SENDALL:  This flag, if set, will cause a one-to-many style\r\n         socket to send the message to all associations that are\r\n         currently established on this socket.  For the one-to-one style\r\n         socket, this flag has no effect.\r\n\r\n\r\n\r\nin Section 8.1.13\r\n\r\nThe sinfo_flags field is composed of a bitwise OR\r\nof SCTP_UNORDERED, SCTP_EOF, SCTP_EOR, and SCTP_SENDALL.\r\n\r\n\r\n\r\nin Section 8.1.31\r\n\r\nThe snd_flags parameter is composed of a bitwise OR\r\nof SCTP_UNORDERED, SCTP_EOF, SCTP_EOR, and SCTP_SENDALL.",
    "notes": "The text is missing a description of how to use the SCTP_EOR flag in the Socket API. The problem was initially reported by wanglihe in https://www.rfc-editor.org/errata/eid6081",
    "submit_date": "2020-04-20",
    "submitter_name": "Michael Tuexen",
    "verifier_id": 167,
    "verifier_name": "Martin Duke",
    "update_date": "2020-04-27 14:54:11"
  },
  {
    "errata_id": 6112,
    "doc-id": "RFC6458",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": 3.2,
    "orig_text": "The success or failure of sending the data message (with\r\npossible SCTP_INITMSG ancillary data) will be signaled by the\r\nSCTP_ASSOC_CHANGE event with SCTP_COMM_UP or SCTP_CANT_START_ASSOC.\r\nIf user data could not be sent (due to an SCTP_CANT_START_ASSOC),\r\nthe sender will also receive an SCTP_SEND_FAILED_EVENT event.",
    "correct_text": "The success or failure of sending the data message (with\r\npossible SCTP_INITMSG ancillary data) will be signaled by the\r\nSCTP_ASSOC_CHANGE event with SCTP_COMM_UP or SCTP_CANT_STR_ASSOC.\r\nIf user data could not be sent (due to an SCTP_CANT_STR_ASSOC),\r\nthe sender will also receive an SCTP_SEND_FAILED_EVENT event.",
    "notes": "The constant SCTP_CANT_START_ASSOC is not defined. The correct name is SCTP_CANT_STR_ASSOC.",
    "submit_date": "2020-04-20",
    "submitter_name": "Michael Tuexen",
    "verifier_id": 167,
    "verifier_name": "Martin Duke",
    "update_date": "2020-04-27 15:20:20"
  },
  {
    "errata_id": 6113,
    "doc-id": "RFC6458",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "6.1.1",
    "orig_text": "sac_info:  If sac_state is SCTP_COMM_LOST and an ABORT chunk was\r\n      received for this association, sac_info[] contains the complete\r\n      ABORT chunk as defined in Section 3.3.7 of the SCTP specification\r\n      [RFC4960].",
    "correct_text": "sac_info:  If sac_state is SCTP_COMM_LOST or SCTP_CANT_STR_ASSOC and\r\n      an ABORT chunk was received for this association, sac_info[]\r\n      contains the complete ABORT chunk as defined in Section 3.3.7\r\n      of the SCTP specification [RFC4960].",
    "notes": "During association setup, SCTP_CANT_STR_ASSOC is signalled when an ABORT chunk is received. SCTP_COMM_LOST is used after the association has been established.",
    "submit_date": "2020-04-20",
    "submitter_name": "Michael Tuexen",
    "verifier_id": 167,
    "verifier_name": "Martin Duke",
    "update_date": "2020-04-27 15:24:49"
  },
  {
    "errata_id": 6114,
    "doc-id": "RFC6458",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": 9.5,
    "orig_text": "If the id field is set to the value '0', then the locally bound\r\naddresses are returned without regard to any particular association.\r\n",
    "correct_text": "If the id field is set to the value SCTP_FUTURE_ASSOC, then the locally bound\r\naddresses are returned without regard to any particular association.\r\n",
    "notes": "Don't use a numeric constant, but the symbolic constant. Its numeric value is implementation specific.",
    "submit_date": "2020-04-20",
    "submitter_name": "Michael Tuexen",
    "verifier_id": 167,
    "verifier_name": "Martin Duke",
    "update_date": "2020-04-27 15:32:54"
  },
  {
    "errata_id": 6115,
    "doc-id": "RFC6458",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "8.2.1",
    "orig_text": "sstat_state:  This contains the association's current state, i.e.,\r\n      one of the following values:\r\n\r\n      *  SCTP_CLOSED\r\n\r\n      *  SCTP_BOUND\r\n\r\n      *  SCTP_LISTEN\r\n\r\n      *  SCTP_COOKIE_WAIT\r\n\r\n      *  SCTP_COOKIE_ECHOED\r\n\r\n      *  SCTP_ESTABLISHED\r\n\r\n      *  SCTP_SHUTDOWN_PENDING\r\n\r\n      *  SCTP_SHUTDOWN_SENT\r\n\r\n      *  SCTP_SHUTDOWN_RECEIVED\r\n\r\n      *  SCTP_SHUTDOWN_ACK_SENT\r\n",
    "correct_text": "sstat_state:  This contains the association's current state, i.e.,\r\n      one of the following values:\r\n\r\n      *  SCTP_CLOSED\r\n\r\n      *  SCTP_LISTEN\r\n\r\n      *  SCTP_COOKIE_WAIT\r\n\r\n      *  SCTP_COOKIE_ECHOED\r\n\r\n      *  SCTP_ESTABLISHED\r\n\r\n      *  SCTP_SHUTDOWN_PENDING\r\n\r\n      *  SCTP_SHUTDOWN_SENT\r\n\r\n      *  SCTP_SHUTDOWN_RECEIVED\r\n\r\n      *  SCTP_SHUTDOWN_ACK_SENT\r\n",
    "notes": "SCTP_BOUND is not a state of an SCTP association, so it should not be part of this list.",
    "submit_date": "2020-04-20",
    "submitter_name": "Michael Tuexen",
    "verifier_id": 167,
    "verifier_name": "Martin Duke",
    "update_date": "2020-04-27 15:34:03"
  },
  {
    "errata_id": 6116,
    "doc-id": "RFC6458",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "6.1.2",
    "orig_text": "   spc_state:  This field holds one of a number of values that\r\n      communicate the event that happened to the address.  They include\r\n\r\n      SCTP_ADDR_AVAILABLE:  This address is now reachable.  This\r\n         notification is provided whenever an address becomes reachable.\r\n\r\n      SCTP_ADDR_UNREACHABLE:  The address specified can no longer be\r\n         reached.  Any data sent to this address is rerouted to an\r\n         alternate until this address becomes reachable.  This\r\n         notification is provided whenever an address becomes\r\n         unreachable.\r\n\r\n      SCTP_ADDR_REMOVED:  The address is no longer part of the\r\n         association.\r\n\r\n      SCTP_ADDR_ADDED:  The address is now part of the association.\r\n\r\n      SCTP_ADDR_MADE_PRIM:  This address has now been made the primary\r\n         destination address.  This notification is provided whenever an\r\n         address is made primary.\r\n",
    "correct_text": "   spc_state:  This field holds one of a number of values that\r\n      communicate the event that happened to the address.  They include\r\n\r\n      SCTP_ADDR_CONFIRMED:  This address is now confirmed.  This\r\n         notification is provided once an address transitions from\r\n         the UNCONFIRMED state to the CONFIRMED state (see\r\n         Section 5.4 of [RFC 4960]).\r\n\r\n      SCTP_ADDR_AVAILABLE:  This address is now reachable.  This\r\n         notification is provided whenever an address becomes reachable.\r\n\r\n      SCTP_ADDR_UNREACHABLE:  The address specified can no longer be\r\n         reached.  Any data sent to this address is rerouted to an\r\n         alternate until this address becomes reachable.  This\r\n         notification is provided whenever an address becomes\r\n         unreachable.\r\n\r\n      SCTP_ADDR_REMOVED:  The address is no longer part of the\r\n         association.\r\n\r\n      SCTP_ADDR_ADDED:  The address is now part of the association.\r\n\r\n      SCTP_ADDR_MADE_PRIM:  This address has now been made the primary\r\n         destination address.  This notification is provided whenever an\r\n         address is made primary.\r\n",
    "notes": "A description of the handling of the path verification as specified in Section 5.4 of RFC 4960 was missing.",
    "submit_date": "2020-04-20",
    "submitter_name": "Michael Tuexen",
    "verifier_id": 167,
    "verifier_name": "Martin Duke",
    "update_date": "2020-04-27 15:38:43"
  },
  {
    "errata_id": 6131,
    "doc-id": "RFC6458",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "GLOBAL",
    "orig_text": "8.1.26    must indicate that they are\r\n   finished sending a particular record by including the SCTP_EOR flag.\r\n\r\nbut I can not find where to use SCTP_EOR flag.\r\n\r\nbecause\r\n\r\n5.1  The msg_flags are not used when sending a message with sendmsg().\r\n\r\n3.1.4  flags:  No new flags are defined for SCTP at this level.  See\r\n      Section 5 for SCTP-specific flags used in the msghdr structure.\r\n\r\n4.1.8 same with 3.1.4\r\n\r\n9.10, 9.12    flags:  The same flags as used by the sendmsg() call flags (e.g.,\r\n      MSG_DONTROUTE).\r\n\r\n9.7   flags:  The same as sinfo_flags (see Section 5.3.2).\r\n\r\n5.3.2 sinfo_flags not mention about it  ",
    "correct_text": "maybe msg_flags should be used.",
    "notes": "Another problem is that, I think it should be discuss about debfine a flag like SCTP_BOR for beginning(init chunk) of a Record, because a stream of this socket(assoc) can still be used after send a SCTP_EOR.\r\n\r\nAnd between  a init chunk and  a STCP_EOR,  if I change SCTP_EXPLICIT_EOR status, what the socket will send the message?\n --VERIFIER NOTES-- \n   This is an accidental duplication; please disregard.",
    "submit_date": "2020-04-09",
    "submitter_name": "wanglihe",
    "verifier_id": 167,
    "verifier_name": "Martin Duke",
    "update_date": "2020-04-27 15:03:46"
  },
  {
    "errata_id": 6132,
    "doc-id": "RFC6458",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "GLOBAL",
    "orig_text": "8.1.26    must indicate that they are\r\n   finished sending a particular record by including the SCTP_EOR flag.\r\n\r\nbut I can not find where to use SCTP_EOR flag.\r\n\r\nbecause\r\n\r\n5.1  The msg_flags are not used when sending a message with sendmsg().\r\n\r\n3.1.4  flags:  No new flags are defined for SCTP at this level.  See\r\n      Section 5 for SCTP-specific flags used in the msghdr structure.\r\n\r\n4.1.8 same with 3.1.4\r\n\r\n9.10, 9.12    flags:  The same flags as used by the sendmsg() call flags (e.g.,\r\n      MSG_DONTROUTE).\r\n\r\n9.7   flags:  The same as sinfo_flags (see Section 5.3.2).\r\n\r\n5.3.2 sinfo_flags not mention about it  ",
    "correct_text": "maybe msg_flags should be used.",
    "notes": "Another problem is that, I think it should be discuss about debfine a flag like SCTP_BOR for beginning(init chunk) of a Record, because a stream of this socket(assoc) can still be used after send a SCTP_EOR.\r\n\r\nAnd between  a init chunk and  a STCP_EOR,  if I change SCTP_EXPLICIT_EOR status, what the socket will send the message?\n --VERIFIER NOTES-- \n   Accidental duplication; please disregard.",
    "submit_date": "2020-04-09",
    "submitter_name": "wanglihe",
    "verifier_id": 167,
    "verifier_name": "Martin Duke",
    "update_date": "2020-04-27 15:04:25"
  },
  {
    "errata_id": 6133,
    "doc-id": "RFC6458",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "GLOBAL",
    "orig_text": "8.1.26    must indicate that they are\r\n   finished sending a particular record by including the SCTP_EOR flag.\r\n\r\nbut I can not find where to use SCTP_EOR flag.\r\n\r\nbecause\r\n\r\n5.1  The msg_flags are not used when sending a message with sendmsg().\r\n\r\n3.1.4  flags:  No new flags are defined for SCTP at this level.  See\r\n      Section 5 for SCTP-specific flags used in the msghdr structure.\r\n\r\n4.1.8 same with 3.1.4\r\n\r\n9.10, 9.12    flags:  The same flags as used by the sendmsg() call flags (e.g.,\r\n      MSG_DONTROUTE).\r\n\r\n9.7   flags:  The same as sinfo_flags (see Section 5.3.2).\r\n\r\n5.3.2 sinfo_flags not mention about it  ",
    "correct_text": "maybe msg_flags should be used.",
    "notes": "Another problem is that, I think it should be discuss about debfine a flag like SCTP_BOR for beginning(init chunk) of a Record, because a stream of this socket(assoc) can still be used after send a SCTP_EOR.\r\n\r\nAnd between  a init chunk and  a STCP_EOR,  if I change SCTP_EXPLICIT_EOR status, what the socket will send the message?\n --VERIFIER NOTES-- \n   Accidental duplicate, please disregard.",
    "submit_date": "2020-04-09",
    "submitter_name": "wanglihe",
    "verifier_id": 167,
    "verifier_name": "Martin Duke",
    "update_date": "2020-04-27 15:05:05"
  }
]
