[
  {
    "errata_id": "7770",
    "doc-id": "RFC0889",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": "3",
    "orig_text": "     One of the basic features of TCP which allow it to be used on paths\r\nspanning many nets of widely varying delay and packet-loss characteristics is\r\nthe retranansmission-timeout algorithm, sometimes known as the \"RSRE\r\nAlgorithm\" for the original designers.  The algorithm operates by recording\r\nthe time and initial sequence number when a segment is transmitted, then\r\ncomputing the elapsed time for that sequence number to be acknowledged.  There\r\nare various degrees of sophistication in the implementation of the algorithm,\r\nranging from allowing only one such computation to be in progress at a time to\r\nallowing one for each segment outstanding at a time on the connection.\r\n\r\n     The retransmission-timeout algorithm is basically an estimation process.\r\nIt maintains an extimate of the current roundtrip delay time and updates it as\r\nnew delay samples are computed.  The algorithm smooths these samples and then\r\nestablishes a timeout, which if exceeded causes a retransmission.  The\r\nselection of the parameters of this algorithm are vitally important in order\r\nto provide effective data transmission and avoid abuse of the Internet system\r\nby excessive retransmissions.  I have long been suspicious of the parameters\r\nsuggested in the specification and used in some implementations, especially in\r\ncases involving long-delay paths involving lossy nets.  The experiment was\r\ndesigned to simulate the operation of the algorithm using data collected from\r\nreal paths involving some pretty leaky Internet plumbing.",
    "correct_text": "     One of the basic features of TCP which allows it to be used on paths\r\nspanning many nets of widely varying delay and packet-loss characteristics is\r\nthe retranansmission-timeout algorithm, sometimes known as the \"RSRE\r\nAlgorithm\" by the original designers.  The algorithm operates by recording\r\nthe time and initial sequence number when a segment is transmitted, then\r\ncomputing the elapsed time for that sequence number to be acknowledged.  There\r\nare various degrees of sophistication in the implementation of the algorithm,\r\nranging from allowing only one such computation to be in progress at a time to\r\nallowing one for each segment outstanding at a time on the connection.\r\n     \r\n     The retransmission-timeout algorithm is basically an estimation process.\r\nIt maintains an estimate of the current roundtrip delay time and updates it as\r\nnew delay samples are computed.  The algorithm smooths these samples and then\r\nestablishes a timeout, which if exceeded causes a retransmission.  The\r\nselection of the parameters of this algorithm are vitally important in order\r\nto provide effective data transmission and avoid abuse of the Internet system\r\nby excessive retransmissions.  I have long been suspicious of the parameters\r\nsuggested in the specification and used in some implementations, especially in\r\ncases involving long-delay paths involving lossy nets.  The experiment was\r\ndesigned to simulate the operation of the algorithm using data collected from\r\nreal paths involving some pretty leaky Internet plumbing.",
    "notes": "The first paragraph contains grammatical errors.  The second contains a spelling error.\r\n\r\n--RFC Editor notes: --\r\nfirst sentence in first paragraph: allow > allows\r\nfirst sentence in first paragraph: for > by\r\nfirst sentence in second paragraph: extimate > estimate",
    "submit_date": "2024-01-20",
    "submitter_name": "Greg Skinner",
    "verifier_id": "2",
    "verifier_name": "RFC Editor",
    "update_date": "2024-01-22 09:58:46"
  }
]
