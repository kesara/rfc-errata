[
  {
    "errata_id": 77,
    "doc-id": "RFC4502",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": 99,
    "orig_text": "(1)  clarification\r\n\r\nThe RFC 4502 text in Section 2.2, under bullet 3), on page 5,\r\nsays:\r\n\r\n         Bit     Definition\r\n\r\n         6       For WAN media, this bit is set for packets\r\n                 coming from one direction and cleared for\r\n                 packets coming from the other direction.\r\n                 It is an implementation-specific matter\r\n|                as to which bit is assigned to which\r\n                 direction, but it must be consistent for\r\n                 all packets received by the agent.  [...]\r\n\r\nThis text certainly is intended to always (and only) cover bit #6.\r\nTherefore, the wording, \"which bit is assigned\" is misleading;\r\nit should be \"which [bit] value is assigned\".\r\n\r\nThus, the above snippit sould better say:\r\n\r\n         Bit     Definition\r\n\r\n         6       For WAN media, this bit is set for packets\r\n                 coming from one direction and cleared for\r\n                 packets coming from the other direction.\r\n                 It is an implementation-specific matter\r\n|                as to which bit value is assigned to which\r\n                 direction, but it must be consistent for\r\n                 all packets received by the agent.  [...]\r\n\r\n\r\n(2)  Ref. issue\r\n\r\nIn Section 3.2, the third paragraph on page 9 says:\r\n\r\n   In the RMON MIB [RFC2819], the EntryStatus textual convention was\r\n   introduced to provide this mutual exclusion function.  Since then,\r\n   this function was added to the SNMP framework as the RowStatus\r\n   textual convention.  The RowStatus textual convention is used for the\r\n   definition of all new tables.\r\n\r\nThis text unfortunately has turned wrong by updating the (obsolete)\r\nreference \"[RFC1757]\" (in RFC 2102) to \"[RFC2819]\".\r\n(-- A very unusual event! --)\r\nThe text in RFC 2102 was correct, because RFC 1757 predates the\r\ninvention of the 'RowStatus' TC which was finalized in STD 58.\r\nBut STD 58 predates RFC 2819, and therefore, the clause,\r\n     vvvvvvvvvv\r\n|    Since then,\r\n     this function was added to the SNMP framework\r\n     as the RowStatus textual convention.\r\nhas turned wrong by the replacement of the Ref.!\r\n\r\n(NOTE: RFC 2819 in fact still makes use of the 'EntryStatus' TC,\r\n which already had been introduced in RFC 1271, the predecessor\r\n of RFC 1757 !)\r\n\r\nTo correct this issue without causing a need to update the\r\nReferences of RFC 4502 as well, I propose the following substitute\r\ntext as an Erratum for the text snippit above:\r\n\r\n          vvvvvvvvvvvvvvvvvvvv\r\n|  In the predecessors of the RMON MIB [RFC2819], the EntryStatus\r\n   textual convention was introduced to provide this mutual exclusion\r\n   function.  Since then, this function was added to the SNMP framework\r\n   as the RowStatus textual convention.  The RowStatus textual\r\n   convention is used for the definition of all new tables.\r\n\r\n\r\n(3)  outdated Ref.\r\n\r\nThe DESCRIPTION clause of the protocolDirID OBJECT-TYPE,\r\non page 21/22 of RFC 4502, says:\r\n\r\n    DESCRIPTION\r\n        \"A unique identifier for a particular protocol.  Standard\r\n        identifiers will be defined in such a manner that they\r\n<< page break >>\r\n        can often be used as specifications for new protocols - i.e.,\r\n        a tree-structured assignment mechanism that matches the\r\n        protocol encapsulation 'tree' and that has algorithmic\r\n        assignment mechanisms for certain subtrees.  See RFC 2074 for\r\n        more details.\r\n\r\n        [...]\r\n\r\nRFC 2074 has been obsoleted by RFC 2895 and RFC 2896.\r\nTherefore, the last sentence of this paragraph should better say:\r\n\r\n                                             [...].  See RFC 2895 and\r\n        RFC 2896 for more details.\r\n\r\n\r\n(4)  MIB indexing issue #1\r\n\r\nAs stated in the text added by RFC 4502 to the DESCRIPTION clause\r\nof the addressMapEntry OBJECT-TYPE, the addressMapTable might run\r\nin problems due to the cumulative length of its index object\r\ninstances.\r\n\r\nTherefore, I suspect that it might have been better to replace the\r\nlast index object, addressMapSource, by an object mirroring the\r\naddressMapControlIndex object (direct use of addressMapControlIndex\r\nas the *last* index object might not be considered a valid option).\r\n\r\nNOTE:\r\nI know that it it too late now for any change, unfortunately.\r\n\r\n\r\n(5)  MIB indexing issue #2\r\n\r\nThe DESCRIPTION clause of the TimeFilter TEXTUAL-CONVENTION,\r\non page 16, explains that an index object of type TimeFilter\r\nshould be included as the *first* INDEX component for a time-\r\nfiltered table:\r\n\r\n      A time-filtered conceptual table is created by inserting a\r\n      single object of SYNTAX TimeFilter as the first INDEX component\r\n      in a copy of an existing basic conceptual table (i.e., any\r\n      SEQUENCE without a TimeFilter INDEX component).  [...]\r\n\r\nThe RMON2 MIB does not follow this rule for the following tables:\r\n  - nlHostTable,\r\n  - nlMatrixSDTable,\r\n  - nlMatrixDSTable,\r\n  - alHostTable,\r\n  - alMatrixSDTable, and\r\n  - alMatrixDSTable.\r\n\r\nSince there are arguably good reasons for the present indexing\r\nstructure of these tables, it might perhaps have been better\r\nto have the above DESCRIPTION of the TC modified to accommodate\r\nfor the existing practice.\r\n\r\n\r\n(6)  textual issue\r\n\r\nThe first paragraph of the DESCRIPTION clause for the\r\nalMatrixTopNControlRateBase OBJECT-TYPE, on page 78, says:\r\n\r\n        \"This object controls which alMatrix[SD/DS] entry that the\r\n        alMatrixTopNEntries are sorted by, which view of the matrix\r\n        table that will be used, as well as which table the results\r\n        will be reported in.\r\n\r\nIt should perhaps better say (deleting 2 x 'that'):\r\n\r\n|       \"This object controls which alMatrix[SD/DS] entry the\r\n        alMatrixTopNEntries are sorted by, which view of the matrix\r\n|       table will be used, as well as which table the results\r\n        will be reported in.\r\n\r\n\r\n(7)  wrong numerical limits in ASN.1 comment\r\n\r\nThe ASN.1 comments on the User History Collection Group,\r\nin the second paragraph on page 86, says:\r\n\r\n-- A sample value is stored in two objects - an absolute value and\r\n-- a status object.  This allows numbers from -(2G-1) to +4G to be\r\n-- stored.  The status object also indicates whether a sample is\r\n-- valid.  This allows data collection to continue if periodic\r\n-- retrieval of a particular instance fails for any reason.\r\n\r\nBased on the specification of usrHistoryAbsValue and\r\nusrHistoryValStatus (on page93/94), I strongly suspect that the\r\nspecified limits are wrong, and that this text should say:\r\n\r\n-- A sample value is stored in two objects - an absolute value and\r\n-- a status object.  This allows numbers from -(4G-1) to +(4G-1) to\r\n-- be stored.  The status object also indicates whether a sample is\r\n-- valid.  This allows data collection to continue if periodic\r\n-- retrieval of a particular instance fails for any reason.\r\n\r\n\r\n(8)  inappropriate semantics specified in DESCRIPTION text\r\n     for objects in the usrHistoryControlTable\r\n\r\nThe DESCRIPTION clause of the usrHistoryControlBucketsRequested and\r\nusrHistoryControlBucketsGranted objects (on page 87/88) seem to be\r\ngarbled a bit.\r\n\r\nThe latter contains the (3rd) paragraph:\r\n\r\n        The associated usrHistoryControlBucketsRequested object\r\n        should be set before or at the same time as this object\r\n        to allow the probe to accurately estimate the resources\r\n        required for this usrHistoryControlEntry.\r\n\r\nThis makes no sense here, because the usrHistoryControlBucketsGranted\r\nobject is read-only, and hence cannot be set.\r\n\r\nI strongly suspect that a similar coupling in fact is needed\r\nfor the usrHistoryControlObjects object in relation to the\r\nusrHistoryControlBucketsRequested object:\r\nThe probe cannot estimate the internal resource requirements,\r\nand hence determine the value of usrHistoryControlBucketsGranted\r\nwithout knowing the values of both the usrHistoryControlObjects\r\nand the usrHistoryControlBucketsRequested objects in a row.\r\n\r\nTherefore, I suspect that the above paragraph should be deleted,\r\nand re-inserted with a slight modification as the new second\r\nparagraph into the usrHistoryControlBucketsRequested DESCRIPTION\r\nclause, saying:\r\n                                        vvvvvvv\r\n|       The associated usrHistoryControlObjects object\r\n        should be set before or at the same time as this object\r\n        to allow the probe to accurately estimate the resources\r\n        required for this usrHistoryControlEntry.\r\n\r\n(I intentionally have omitted the appropriate line re-folding\r\n here for clarity.)\r\n\r\n\r\n(9)  two typos\r\n\r\nThe DESCRIPTION clause of the ControlString TEXTUAL-CONVENTION,\r\non page 95, contains two typos:\r\n\r\nThe paragraph:\r\n\r\n           ^w  Wait for the reply string that follows, which is\r\n               terminated by the next command or the end of string.\r\n               Partial and case-insensitive matching is applied, i.e.,\r\n               if the reply string (any case combination) is found\r\n               anywhere in the received string, then the a match is\r\n               found.  If the current timeout elapses without a match,\r\n               then the remaining control string is ignored.\r\n\r\nshould say (deleting 'the' in 'the a') :\r\n\r\n           ^w  Wait for the reply string that follows, which is\r\n               terminated by the next command or the end of string.\r\n               Partial and case-insensitive matching is applied, i.e.,\r\n               if the reply string (any case combination) is found\r\n|              anywhere in the received string, then a match is found.\r\n               If the current timeout elapses without a match, then\r\n               the remaining control string is ignored.\r\n\r\nThe 4th-to-last line of page 95,\r\n\r\n           ^    0x1C\r\n\r\nshould say:\r\n\r\n           ^\\    0x1C\r\n\r\n\r\n(10)  textual clarification\r\n\r\nIn the Appendix of RFC 4502 (Section 8), the paragraph below\r\nthe pseudo-code on page 133 says:\r\n\r\n   The agent applies this function regardless of the lastActivationTime\r\n   of the conceptual row in question.  In other words, counter\r\n   discontinuities are ignored (i.e., a conceptual row is deleted and\r\n   then re-created later).  An agent should consider an object instance\r\n   'changed' when it is created (either at restart time for scalars and\r\n   static objects, or row-creation-time for dynamic tables).\r\n\r\nIt should better say:\r\n\r\n   The agent applies this function regardless of the lastActivationTime\r\n   of the conceptual row in question.  In other words, counter\r\n|  discontinuities (e.g., a conceptual row is deleted and then re-\r\n|  created later) are ignored.  An agent should consider an object\r\n   instance 'changed' when it is created (either at restart time for\r\n   scalars and static objects, or row-creation-time for dynamic tables).",
    "correct_text": "",
    "notes": "from pending",
    "submit_date": "2006-06-28",
    "submitter_name": "Alfred Hoenes",
    "verifier_id": 99,
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  }
]
