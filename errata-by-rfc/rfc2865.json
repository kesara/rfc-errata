[
  {
    "errata_id": "1469",
    "doc-id": "RFC2865",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "7.3.",
    "orig_text": "      02 01 00 38 15 ef bc 7d ab 26 cf a3 dc 34 d9 c0\r\n      3c 86 01 a4 06 06 00 00 00 02 07 06 00 00 00 01\r\n      08 06 ff ff ff fe 0a 06 00 00 00 02 0d 06 00 00\r\n      00 01 0c 06 00 00 05 dc\r\n\r\n",
    "correct_text": "      02 01 00 38 E8 6F A2 FE 28 70 33 AD 2F 6D 5C A3\r\n      F7 41 5D A2 06 06 00 00 00 02 07 06 00 00 00 01\r\n      08 06 FF FF FF FE 0A 06 00 00 00 00 0D 06 00 00\r\n      00 01 0C 06 00 00 05 DC",
    "notes": "in Attributes, \"Framed-Routing\" came with value \"None\" (0)\r\nbut in Hex dump of packet the value for this attribute is \"Listen for routing packets\" (2)\r\n\r\nCorrect Hex Dump, or Attributes.\r\n\r\nCorrected Attributes is:\r\n\r\nAttributes:\r\n       6  Service-Type (6) = Framed (2)\r\n       6  Framed-Protocol (7) = PPP (1)\r\n       6  Framed-IP-Address (8) = 255.255.255.254\r\n       6  Framed-Routing (10) = Listen for routing packets (2)\r\n       6  Framed-Compression (13) = VJ TCP/IP Header Compression (1)\r\n       6  Framed-MTU (12) = 1500\r\n\r\n----------\r\n\r\nVERIFIER NOTE: Referenced section should be 7.2 and not 7.3\r\n",
    "submit_date": "2008-07-13",
    "submitter_name": "Isaac NickAein",
    "verifier_id": "106",
    "verifier_name": "Dan Romascanu",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "2712",
    "doc-id": "RFC2865",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": "5",
    "orig_text": "      Note that none of the types in RADIUS terminate with a NUL (hex\r\n      00).  In particular, types \"text\" and \"string\" in RADIUS do not\r\n      terminate with a NUL (hex 00).  The Attribute has a length field\r\n      and does not use a terminator.  Text contains UTF-8 encoded 10646\r\n      [7] characters and String contains 8-bit binary data.  Servers and\r\n      servers and clients MUST be able to deal with embedded nulls.\r\n      ^^^^^^^^^^^^",
    "correct_text": "      Note that none of the types in RADIUS terminate with a NUL (hex\r\n      00).  In particular, types \"text\" and \"string\" in RADIUS do not\r\n      terminate with a NUL (hex 00).  The Attribute has a length field\r\n      and does not use a terminator.  Text contains UTF-8 encoded 10646\r\n      [7] characters and String contains 8-bit binary data.  Servers and\r\n      clients MUST be able to deal with embedded nulls.",
    "notes": "Unnecessary Words.",
    "submit_date": "2011-02-12",
    "submitter_name": "Wang Haojian",
    "verifier_id": "106",
    "verifier_name": "Dan Romascanu",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "368",
    "doc-id": "RFC2865",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "5.18",
    "orig_text": "   Multiple Reply-Message's MAY be included and if any are displayed,\n   they MUST be displayed in the same order as they appear in the\n   packet.",
    "correct_text": "   Multiple Reply-Messages MAY be included and if any are displayed,\n   they MUST be displayed in the same order as they appear in the\n   packet.\n",
    "notes": "",
    "submit_date": "2002-09-12",
    "submitter_name": "Aaron Webb",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "4077",
    "doc-id": "RFC2865",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "3",
    "orig_text": "      Response Authenticator\r\n\r\n         The value of the Authenticator field in Access-Accept, Access-\r\n         Reject, and Access-Challenge packets is called the Response\r\n         Authenticator, and contains a one-way MD5 hash calculated over\r\n         a stream of octets consisting of: the RADIUS packet, beginning\r\n         with the Code field, including the Identifier, the Length, the\r\n         Request Authenticator field from the Access-Request packet, and\r\n         the response Attributes, followed by the shared secret.  That\r\n         is, ResponseAuth =\r\n         MD5(Code+ID+Length+RequestAuth+Attributes+Secret) where +\r\n         denotes concatenation.\r\n",
    "correct_text": "      Response Authenticator\r\n\r\n         The value of the Authenticator field in Access-Accept, Access-\r\n         Reject, and Access-Challenge packets is called the Response\r\n         Authenticator, and contains a one-way MD5 hash calculated over\r\n         a stream of octets consisting of: the response Code field, the\r\n         Identifier, the response Length, the Request Authenticator, the\r\n         response Attributes, and finally the shared secret. \r\n         That is, ResponseAuth =\r\n         MD5(Code+ID+Length+RequestAuth+Attributes+Secret) where +\r\n         denotes concatenation.\r\n",
    "notes": "This sentence fragment \"[...] consisting of: the RADIUS packet, [...]\" tends to imply one is considering either the Access-Request packet, or the reply packet being under construction.\r\n\r\nBut this is inconsistent with the idea of having the the MD5 hash calculated over both the Request Authenticator and the response Attributes...\n --VERIFIER NOTES-- \nAs discussed with the AAA doctors",
    "submit_date": "2014-08-10",
    "submitter_name": "Axel Luttgens",
    "verifier_id": "132",
    "verifier_name": "Benoit Claise",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "6486",
    "doc-id": "RFC2865",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "7.3",
    "orig_text": "   The state is the magic cookie from the Access-Challenge packet,\r\n   unchanged.\r\n\r\n      01 03 00 43 b1 22 55 6d 42 8a 13 d0 d6 25 38 07\r\n      c4 57 ec f0 01 07 6d 6f 70 73 79 02 12 69 2c 1f\r\n      20 5f c0 81 b9 19 b9 51 95 f5 61 a5 81 04 06 c0\r\n      a8 01 10 05 06 00 00 00 07 18 10 33 32 37 36 39\r\n      34 33 30\r\n\r\n       1 Code = Access-Request (1)\r\n",
    "correct_text": "   The state is the magic cookie from the Access-Challenge packet,\r\n   unchanged.\r\n\r\n      01 03 00 43 b1 22 55 6d 42 8a 13 d0 d6 25 38 07\r\n      c4 57 ec f0 01 07 6d 6f 70 73 79 02 12 69 2c 1f\r\n      20 5f c0 81 b9 19 b9 51 95 f5 61 a5 81 04 06 c0\r\n      a8 01 10 05 06 00 00 00 07 18 0a 33 32 37 36 39\r\n      34 33 30\r\n\r\n       1 Code = Access-Request (1)\r\n",
    "notes": "Mistake is length of last attribute of sample packet on page 70, in penultimate line of hex dump. RFC has 0x10; correct value is 0x0a. (Sample on page 69 shows correct value.)",
    "submit_date": "2021-03-18",
    "submitter_name": "Paul Bennett",
    "verifier_id": "166",
    "verifier_name": "Robert Wilton",
    "update_date": "2021-03-24 02:45:35"
  },
  {
    "errata_id": "6915",
    "doc-id": "RFC2865",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "5",
    "orig_text": "      The Value field is zero or more octets and contains information\r\n      specific to the Attribute.",
    "correct_text": "      The Value field is one or more octets and contains information\r\n      specific to the Attribute.",
    "notes": "Section \"5. Attributes\" is ambiguous when it talks about the attribute value size:\r\n\r\nFirst it says: \"The Value field is zero or more octets\", then it provides 5 possible value data types none of which allows a zero length value. For 'text' type it says: \"Text of length zero (0) MUST NOT be sent; omit the entire attribute instead\" and the same for 'string' type.\r\n\r\nSection \"5.26. Vendor-Specific\" also says about the value of a vendor-specific attribute \"The String field is one or more octets\".\r\n\r\nThus the RFC allows empty values for attributes in general but prohibits for any declared types of the attributes.",
    "submit_date": "2022-04-02",
    "submitter_name": "Oleg Pekar",
    "verifier_id": "166",
    "verifier_name": "Rob Wilton",
    "update_date": "2024-02-09 02:42:18"
  }
]
