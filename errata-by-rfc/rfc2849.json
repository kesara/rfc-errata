[
  {
    "errata_id": 2258,
    "doc-id": "RFC2849",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "GLOBAL",
    "orig_text": "Example 3: A file containing a base-64-encoded value\r\n\r\nversion: 1\r\ndn: cn=Gern Jensen, ou=Product Testing, dc=airius, dc=com\r\nobjectclass: top\r\nobjectclass: person\r\nobjectclass: organizationalPerson\r\ncn: Gern Jensen\r\ncn: Gern O Jensen\r\nsn: Jensen\r\nuid: gernj\r\ntelephonenumber: +1 408 555 1212\r\ndescription:: V2hhdCBhIGNhcmVmdWwgcmVhZGVyIHlvdSBhcmUhICBUaGlzIHZhbHVl\r\nIGlzIGJhc2UtNjQtZW5jb2RlZCBiZWNhdXNlIGl0IGhhcyBhIGNvbnRyb2wgY2hhcmFjdG\r\nVyIGluIGl0IChhIENSKS4NICBCeSB0aGUgd2F5LCB5b3Ugc2hvdWxkIHJlYWxseSBnZXQg\r\nb3V0IG1vcmUu",
    "correct_text": "Example 3: A file containing a base-64-encoded value\r\n\r\nversion: 1\r\ndn: cn=Gern Jensen, ou=Product Testing, dc=airius, dc=com\r\nobjectclass: top\r\nobjectclass: person\r\nobjectclass: organizationalPerson\r\ncn: Gern Jensen\r\ncn: Gern O Jensen\r\nsn: Jensen\r\nuid: gernj\r\ntelephonenumber: +1 408 555 1212\r\ndescription:: V2hhdCBhIGNhcmVmdWwgcmVhZGVyIHlvdSBhcmUhICBUaGlzIHZhbHVl\r\n IGlzIGJhc2UtNjQtZW5jb2RlZCBiZWNhdXNlIGl0IGhhcyBhIGNvbnRyb2wgY2hhcmFjdG\r\n VyIGluIGl0IChhIENSKS4NICBCeSB0aGUgd2F5LCB5b3Ugc2hvdWxkIHJlYWxseSBnZXQg\r\n b3V0IG1vcmUu",
    "notes": "There is no section numbering in this RFC, hence the \"GLOBAL\".\r\n\r\nNote 10 in \"Notes on LDIF Syntax\" says that base64-encoded values are subject to the same folding rules explained in Note 2. Note 2 requires folded lines to begin with a space character.\r\n\r\nThis modification was introduced passing from draft-good-ldap-ldif to RFC 2849.",
    "submit_date": "2010-05-13",
    "submitter_name": "Flavio Poletti",
    "verifier_id": 121,
    "verifier_name": "Peter Saint-Andre",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 3646,
    "doc-id": "RFC2849",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "Note 4",
    "orig_text": "Any dn or rdn that contains characters other than those\r\ndefined as \"SAFE-UTF8-CHAR\", or begins with a character other\r\nthan those defined as \"SAFE-INIT-UTF8-CHAR\",",
    "correct_text": "Any dn or rdn that contains characters other than those\r\ndefined as \"SAFE-CHAR\", or begins with a character other\r\nthan those defined as \"SAFE-INIT-CHAR\",",
    "notes": "This appears in note 4 of \"Notes on LDIF Syntax\".\r\n\r\n---- Verifier notes ----\r\nNote 4 has double text, one of which allows more than the other.   But the ABNF\r\ndoesn't have that ambiguity.  This is really something that can only be fixed by\r\nrevising the spec.   It's simply not clear what the intent was.",
    "submit_date": "2013-06-11",
    "submitter_name": "Boris Kleint",
    "verifier_id": 130,
    "verifier_name": "Barry Leiba",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 4009,
    "doc-id": "RFC2849",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "LDIF Syntax",
    "orig_text": "change-moddn             = (\"modrdn\" / \"moddn\") SEP\r\n                            \"newrdn:\" (    FILL rdn /\r\n                                       \":\" FILL base64-rdn) SEP\r\n                            \"deleteoldrdn:\" FILL (\"0\" / \"1\")  SEP\r\n                            0*1(\"newsuperior:\"\r\n                            (    FILL distinguishedName /\r\n                             \":\" FILL base64-distinguishedName) SEP)",
    "correct_text": "change-moddn             = (\"modrdn\" / \"moddn\") SEP\r\n                            \"newrdn:\" (    FILL rdn /\r\n                                       \":\" FILL base64-rdn) SEP\r\n                            \"deleteoldrdn:\" FILL (\"0\" / \"1\")  SEP [8]\r\n                            0*1(\"newsuperior:\"\r\n                            (    FILL distinguishedName /\r\n                             \":\" FILL base64-distinguishedName) SEP)\r\n\r\nNote 8: If deleteoldrdn is \"0\" the old rdn will be kept; if it is \"1\"\r\nthe old rdn will be deleted.",
    "notes": "There is no formal specification of the meaning of the \"deleteoldrdn\" value 0 or 1. 1 stands for deletion, 0 stands for keeping the old rdn. Add a note to explain the value meaning.\r\n\r\n-----\r\nVerifier note:\r\nIt is correct that the meaning of \"deleteoldrdn\" is never explained in the document.  The proposed resolution is a reasonable fix for that, and such an explanation is needed.",
    "submit_date": "2014-06-09",
    "submitter_name": "Giovanni Cannata",
    "verifier_id": 130,
    "verifier_name": "Barry Leiba",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 4355,
    "doc-id": "RFC2849",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "GLOBAL",
    "orig_text": "In the section \"Formal Syntax Definition of LDIF\", Notes 2 and 8 \r\nindirectly imply, that folded lines may contain leading whitespaces(1) \r\nand not allowed trailing whitespaces(2).\r\nOr, in other words, a fold must occur before a whitespace, or entire \r\nvalue must be base64-encoded before folding.\r\nHowever, the understanding is implied, rather than clearly stated.",
    "correct_text": "I suggest to clarify the folding rules to include a reference to \r\ntrailing whitespaces in this specific case.\r\nSomething as simple as \"in case of folding a line containing \r\nwhitespaces, the fold MUST NOT occur after a whitespace character\" will \r\ngo a long way towards clearing the confusion.\r\nOr, in ABNF syntax,\r\nfolding-sequence = (SAFE-INIT-CHAR / \":\" / \"<\") FILL SEP SPACE SAFE-CHAR\r\n(That is, symbols \":\" and \"<\" may safely appear at the end of a value \r\nstring, given it is not the first character of attribute value...)",
    "notes": "The implication is drawn from the \r\n(1): Note 2, \"When joining folded lines, exactly one space character at the beginning of each continued line must be discarded.\" (Emphasis on \"exactly one\".)\r\n(2): Note 8, \"Values â€¦ that end with SPACE SHOULD be base-64 encoded.\", implied premise of the format that each single line read from the file must be \"basically correct\", means, follow generic rule of (<empty line> / <comment> / <name:value pair> / <continuation line>) and the generic experience that trailing whitespaces are not apparently visible in text files without the use of special tools.\n --VERIFIER NOTES-- \n\r\nExcept that it's an incorrect implication.  The space at the beginning of the continued line is discarded simply because it's the space that was added to fold the line, so it has to be removed when you unfold.  There is no restriction on where the folding is done other than what Note 2 says (MUST NOT fold before the first character of the line, and SHOULD NOT fold in the middle of a multi-byte UTF-8 character).\r\n\r\nIn particular, a line can be folded in the middle of a FILL sequence, in the middle of a sequence of SPACE characters in a string, or in the middle of a sequence of SPACE characters in a comment line.  It is perfectly valid to have SPACE characters both before and after the <SEP SPACE> sequence that folding adds.",
    "submit_date": "2015-05-05",
    "submitter_name": "Andrey Repin",
    "verifier_id": 130,
    "verifier_name": "Barry Leiba",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 4377,
    "doc-id": "RFC2849",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "LDIF Syntax",
    "orig_text": "ldap-oid                 = 1*DIGIT 0*1(\".\" 1*DIGIT)\r\n                           ; An LDAPOID, as defined in [4]",
    "correct_text": "ldap-oid                 = 1*DIGIT 0*(\".\" 1*DIGIT)\r\n                           ; An LDAPOID, as defined in [4]",
    "notes": "ldap-oid syntax on RFC2849 allow only ONE dot.\r\nBut it should allow decimal string separated by multi dots.\r\n\r\nRFC2251 LDAPOID definition:\r\n   The LDAPOID is a notational convenience to indicate that the\r\n   permitted value of this string is a (UTF-8 encoded) dotted-decimal\r\n   representation of an OBJECT IDENTIFIER.\r\n\r\n        LDAPOID ::= OCTET STRING\r\n\r\n   For example,\r\n\r\n        1.3.6.1.4.1.1466.1.2.3",
    "submit_date": "2015-05-28",
    "submitter_name": "Keita Kondou",
    "verifier_id": 130,
    "verifier_name": "Barry Leiba",
    "update_date": "2019-09-10 09:09:03"
  }
]
