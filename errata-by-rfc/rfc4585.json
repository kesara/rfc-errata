[
  {
    "errata_id": "2853",
    "doc-id": "RFC4585",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "4.2",
    "orig_text": "OLD:\r\n      rtcp-fb-param      = SP \"app\" [SP byte-string]\r\n                         / SP token [SP byte-string]\r\n                         / ; empty\r\nNEW:\r\n      rtcp-fb-param      = [ SP \"app\" [SP byte-string]\r\n                         / SP token [SP byte-string] ]\r\n\r\n\r\nOLD:\r\n      rtcp-fb-ack-param  = SP \"rpsi\"\r\n                         / SP \"app\" [SP byte-string]\r\n                         / SP token [SP byte-string]\r\n                         / ; empty\r\nNEW:\r\n      rtcp-fb-ack-param  = [ SP \"rpsi\"\r\n                         / SP \"app\" [SP byte-string]\r\n                         / SP token [SP byte-string] ]\r\n\r\n\r\nOLD:\r\n      rtcp-fb-nack-param = SP \"pli\"\r\n                         / SP \"sli\"\r\n                         / SP \"rpsi\"\r\n                         / SP \"app\" [SP byte-string]\r\n                         / SP token [SP byte-string]\r\n                         / ; empty\r\nNEW:\r\n      rtcp-fb-nack-param = [ SP \"pli\"\r\n                         / SP \"sli\"\r\n                         / SP \"rpsi\"\r\n                         / SP \"app\" [SP byte-string]\r\n                         / SP token [SP byte-string] ]\r\n",
    "correct_text": null,
    "notes": "During the AUTH48 of RFC 6285, we discovered a bug with the ABNF syntax in RFC 4585. The original ABNF in Section 4.2 (as noted above) is incorrect (\"/ ;empty\" is not a valid ABNF - RFC 5234 does not allow empty alternates).\r\n\r\nThe NEW text intends to fix it. There are 3 places where the same change should be applied (changes are identical).",
    "submit_date": "2011-07-05",
    "submitter_name": "Ali Begen",
    "verifier_id": "118",
    "verifier_name": "Robert Sparks",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "3313",
    "doc-id": "RFC4585",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "4.2",
    "orig_text": "      rtcp-fb-ack-param  = SP \"rpsi\"\r\n                         / SP \"app\" [SP byte-string]\r\n                         / SP token [SP byte-string]\r\n                         / ; empty\r\n",
    "correct_text": "      rtcp-fb-ack-param  = SP \"rpsi\"\r\n                         / SP \"app\" [SP byte-string]\r\n                         / SP token [SP byte-string]\r\n",
    "notes": "RFC 4585 defines and allows generic NACK (with no further parameters) but not generic ACK (which always requires further parameters). Section 4.2 says:\r\n...\r\n      Parameters MUST be provided to further distinguish different types\r\n      of positive acknowledgement feedback.\r\n...\r\n      The feedback type \"nack\", without parameters, indicates use of the\r\n      Generic NACK feedback format as defined in Section 6.2.1.\r\n...\r\nThe ABNF incorrectly allows nothing after \"ack\", implying that generic ACK is valid. Even the approved errata, which replaces the invalid empty alternate with optional [], still allows nothing after \"ack\". Note that recent interest in RTP congestion control (e.g. RMCAT BOF) may lead to defining a standard ACK.",
    "submit_date": "2012-08-11",
    "submitter_name": "Mo Zanaty",
    "verifier_id": "118",
    "verifier_name": "Robert Sparks",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "51",
    "doc-id": "RFC4585",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "Errors (11)-(19) of 19",
    "orig_text": "(11)  [formatting issue]\r\n\r\nIn Section 6, the text around the page break from page 31 to page 32\r\nis not formatted properly.\r\nThe RFC says:\r\n\r\n      [...]\r\n      audio and DTMF) or when codec changes occur, the payload type\r\n      information may need to be conveyed explicitly as part of the FB\r\n      message.  This applies to all\r\n << page break >>\r\n      payload-specific as well as application layer FB messages.  It is\r\n      up to the specification of an FB message to define how payload\r\n      type information is transmitted.\r\n\r\nIt should say:\r\n\r\n      [...]\r\n      audio and DTMF) or when codec changes occur, the payload type\r\n      information may need to be conveyed explicitly as part of the FB\r\n      message.  This applies to all payload-specific as well as\r\n << page break >>\r\n      application layer FB messages.  It is up to the specification of\r\n      an FB message to define how payload type information is\r\n      transmitted.\r\n\r\n\r\n(12)  [inconsistent text]\r\n\r\nStill in Section 6, the second paragraph on page 32 (immediately\r\nfollowing the text quotation in item (11) above) says:\r\n\r\n                         vvv\r\n|  This document defines two transport layer and three (video) payload-\r\n   specific FB messages as well as a single container for application\r\n   layer FB messages.  Additional transport layer and payload-specific\r\n   FB messages MAY be defined in other documents and MUST be registered\r\n   through IANA (see Section 9, \"IANA Considerations\").\r\n\r\nIt should say:\r\n                         vvv\r\n|  This document defines one transport layer and three (video) payload-\r\n   specific FB messages as well as a single container for application\r\n   layer FB messages.  Additional transport layer and payload-specific\r\n   FB messages MAY be defined in other documents and MUST be registered\r\n   through IANA (see Section 9, \"IANA Considerations\").\r\n\r\nRationale:\r\nCf. the third paragraph of Section 6, on page 31, and\r\nthe subsequent pages, in particular page 34, where the\r\nsecond paragraph of Section 6.2 says:\r\n\r\n|  A single general purpose transport layer FB message is defined in\r\n   this document: Generic NACK.  It is identified by means of the FMT\r\n   parameter as follows:\r\n\r\n   [...]\r\n\r\n(And so it does, per Section 6.2.1.)\r\n\r\n\r\n(13)  [incomplete specification?]\r\n\r\nWithin Section 6.1, the last paragraph on page 33 says:\r\n\r\n   Each RTCP feedback packet MUST contain at least one FB message in the\r\n   FCI field.  Sections 6.2 and 6.3 define for each FCI type, whether or\r\n   not multiple FB messages MAY be compressed into a single FCI field.\r\n|  If this is the case, they MUST be of the same type, i.e., same FMT.\r\n|  If multiple types of feedback messages, i.e., several FMTs, need to\r\n   be conveyed, then several RTCP FB messages MUST be generated and\r\n   SHOULD be concatenated in the same compound RTCP packet.\r\n\r\nI strongly suspect -- and this is supported by the examples in the\r\nRFC -- that feedback packets to be combined MUST also have the same\r\npayload type (PT), not only agree in their FMT values.\r\nOtherwise, there would be no way to carry the different PT values\r\nin the FB message according to the format specified in Figure 3.\r\n\r\nTherefore, the RFC should say:\r\n\r\n   Each RTCP feedback packet MUST contain at least one FB message in the\r\n   FCI field.  Sections 6.2 and 6.3 define for each FCI type, whether or\r\n   not multiple FB messages MAY be compressed into a single FCI field.\r\n|  If this is the case, they MUST be of the same type, i.e., same PT and\r\n|  the same FMT.  If multiple types of feedback messages, i.e., several\r\n|  PTs and/or several FMTs, need to be conveyed, then several RTCP FB\r\n   messages MUST be generated and SHOULD be concatenated in the same\r\n   compound RTCP packet.\r\n\r\n(Authors, please supply alternative wording, if you desire.)\r\n\r\nNote:\r\nPerhaps, this issue arised because of the slightly differing\r\nsemantics implied for the various usages of the term \"FB message\"\r\nin Section 6.1 -- (a) the whole RTCP FB message, and (b) a semantic\r\nentity carried in the FCI field of that RTCP message.\r\nFuture updates to the RFC might try further clarifications of the\r\ntext to avoid this subtle sematic overloading.\r\n\r\n\r\n(14)  [missing article]\r\n\r\nThe last paragraph of Section 6.3, at the bottom of page 35, says:\r\n\r\n   The following subsections define the FCI formats for the payload-\r\n|  specific FB messages, Section 6.4 defines FCI format for the\r\n   application layer FB message.\r\n\r\nIt should say:\r\n\r\n   The following subsections define the FCI formats for the payload-\r\n|  specific FB messages, Section 6.4 defines the FCI format for the\r\n   application layer FB message.\r\n\r\n\r\n(15)  [extraneous words]\r\n\r\nThe second paragraph of Section 6.3.1.1, on page 36, says:\r\n\r\n   Other RTP payload specifications such as RFC 2032 [6] already define\r\n|  a feedback mechanism for some for certain codecs.  An application\r\n   supporting both schemes MUST use the feedback mechanism defined in\r\n   this specification when sending feedback.  For backward compatibility\r\n   reasons, such an application SHOULD also be capable to receive and\r\n   react to the feedback scheme defined in the respective RTP payload\r\n   format, if this is required by that payload format.\r\n\r\nIt should say:\r\n\r\n   Other RTP payload specifications such as RFC 2032 [6] already define\r\n|  a feedback mechanism for certain codecs.  An application supporting\r\n   both schemes MUST use the feedback mechanism defined in this\r\n   specification when sending feedback.  For backward compatibility\r\n   reasons, such an application SHOULD also be capable to receive and\r\n   react to the feedback scheme defined in the respective RTP payload\r\n   format, if this is required by that payload format.\r\n\r\n\r\n(16)  [misleading wording]\r\n\r\nThe first paragraph of Section 6.3.2.2, on page 37, says:\r\n\r\n                                                     vvvvv\r\n|  The Slice Loss Indication uses one additional FCI field, the content\r\n   of which is depicted in Figure 6.  The length of the FB message MUST\r\n   be set to 2+n, with n being the number of SLIs contained in the FCI\r\n   field.\r\n\r\nTo avoid the semantic overloading of the word \"field\", it should\r\nperhaps better say:\r\n                                                     vvvv\r\n|  The Slice Loss Indication uses one additional FCI word, the content\r\n   of which is depicted in Figure 6.  The length of the FB message MUST\r\n   be set to 2+n, with n being the number of SLIs contained in the FCI\r\n   field.\r\n\r\n\r\n(17)  [typo]\r\n\r\nThe first paragraph of Section 6.3.3.1, on page 39, says:\r\n\r\n                             v\r\n                                   [...].  As this reference picture is\r\n|  temporally further away then usual, the resulting predictively coded\r\n   picture will use more bits.\r\n\r\nIt should say:\r\n                             v\r\n                                   [...].  As this reference picture is\r\n|  temporally further away than usual, the resulting predictively coded\r\n   picture will use more bits.\r\n\r\n\r\n(18)  [inappropriate wording]\r\n\r\nThe first paragraph of Section 8, on page 42, says:\r\n\r\n   RTP packets transporting information with the proposed payload format\r\n   are subject to the security considerations discussed in the RTP\r\n   specification [1] and in the RTP/AVP profile specification [2].  This\r\n   profile does not specify any additional security services.\r\n\r\nThe wording of the first sentence is inappropriate for this RFC.\r\n(It perhaps has been copied unchanged from an RFC with an RTP Payload\r\nspecification.)\r\n\r\nRFC 4585 should say instead:\r\n\r\n|  RTP packets transporting information as defined in various payload\r\n|  formats supporting this profile are subject to the security\r\n   considerations discussed in the RTP specification [1] and in the\r\n   RTP/AVP profile specification [2].  This profile does not specify any\r\n   additional security services.\r\n\r\n\r\n(19)  [redundant Ref.]\r\n\r\nThe Normative Reference [7] (in Section 11.1, on page 48) and\r\nthe Informative Reference [20] (in Section 11.2, on page 49)\r\nboth point to RFC 3448.\r\n([7] and [20] are referred to once each in the RFC text.)\r\n\r\nThis is unusual and unexpected.  Only one pointer to RFC 3448\r\nshould have been specified.  Authors, please check.\r\n",
    "correct_text": "",
    "notes": "from pending\r\n\r\n--VERIFIER COMMENT--\r\nThanks for the review.  I have only quickly skimmed your comments\r\nand there does not seem to be anything serious.\r\n\r\nWe will be happy to archive these and migt consider them if\r\nwe do a revision of the RFC.  But an errata document would\r\nonly make sense if there is something seriously hindering\r\ninteroperability.  I have not seen anything falling into this\r\ncategory (well, and there are implementations out there from\r\nthe spec).\r\n",
    "submit_date": "2006-08-17",
    "submitter_name": "Alfred Hoenes",
    "verifier_id": "99",
    "verifier_name": "Joerg Ott",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "768",
    "doc-id": "RFC4585",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "Errors (1)-(10) of 19",
    "orig_text": "(1)\r\n\r\nSection 1.1 of RFC 4585, on mid-page 4, says:\r\n\r\n   Feedback (FB) message:\r\n      An RTCP message as defined in this document is used to convey\r\n      information about events observed at a receiver -- in addition to\r\n      long-term receiver status information that is carried in RTCP\r\n      receiver reports (RRs) -- back to the sender of the media stream.\r\n|     For the sake of clarity, feedback message is referred to as FB\r\n|     message throughout this document.\r\n\r\nI do not see how and why using the abbreviation might have improved\r\n*clarity* of the text; apparently, it has been used for *brevity* .\r\nTherefore, the two tagged lines should better say:\r\n\r\n|     For the sake of brevity, feedback message is referred to as FB\r\n|     message throughout this document.\r\n\r\nSimilarly, at the bottom of page 4, where the RFC says:\r\n\r\n   Feedback (FB) threshold:\r\n      The FB threshold indicates the transition between Immediate\r\n      Feedback and Early RTCP mode.  [...]\r\n      [...]\r\n      to application designers and is not used in any calculations.  For\r\n|     the sake of clarity, the term feedback threshold is referred to as\r\n      FB threshold throughout this document.\r\n\r\nThe last 3 lines should better say:\r\n\r\n      to application designers and is not used in any calculations.  For\r\n|     the sake of brevity, the term feedback threshold is referred to as\r\n      FB threshold throughout this document.\r\n\r\n\r\n(2)\r\n\r\nThe first bulleted item in Section 3.1, on page 7, says:\r\n                                                    vvvvvvvvvvvvv\r\n|  o  Status reports are contained in sender report (SR)/received report\r\n      (RR) packets and are transmitted at regular intervals as part of\r\n      compound RTCP packets (which also include source description\r\n      (SDES) and possibly other messages); these status reports provide\r\n      an overall indication for the recent reception quality of a media\r\n      stream.\r\n\r\nFor *clarity*, it perhaps should better say -- not binding together the\r\nwords intended to being separated by the slash marking the alternative:\r\n                                                        vvv\r\n|  o  Status reports are contained in sender report (SR) / received\r\n      report (RR) packets and are transmitted at regular intervals as\r\n      part of compound RTCP packets (which also include source\r\n      description (SDES) and possibly other messages); these status\r\n      reports provide an overall indication for the recent reception\r\n      quality of a media stream.\r\n\r\n\r\n(3)  [missing article]\r\n\r\nIn Section 3.4, on mid-page 11, RFC 4585 says:\r\n\r\n   j) Let T_fd be the actual (randomized) delay for the transmission of\r\n      FB message in response to an event at time t0.\r\n\r\nIt should say:\r\n\r\n   j) Let T_fd be the actual (randomized) delay for the transmission of\r\n|     a FB message in response to an event at time t0.\r\n      ^^\r\n\r\n(4)  [inappropriate wording]\r\n\r\nThe algorithm in Section 3.5.2, at the bottom of page 16, contains\r\nthe sub-step:\r\n\r\n      4b) If allow_early == TRUE, then R MUST schedule an Early RTCP\r\n          packet for te = t0 + RND * T_dither_max with RND being a\r\n|         pseudo random function evenly distributed between 0 and 1.\r\n                        ^^^^^^^^\r\n\r\nThis wording is inappropriate.  RND is not a *function* (that's code!),\r\nbut a *number*, the function *value*.  Therefore, the RFC should say:\r\n\r\n      4b) If allow_early == TRUE, then R MUST schedule an Early RTCP\r\n          packet for te = t0 + RND * T_dither_max with RND being a\r\n|         pseudo random number evenly distributed between 0 and 1.\r\n                        ^^^^^^\r\n\r\n\r\n(5)  [inappropriate wording]\r\n\r\nThe algorithm in Section 3.5.3, at the top of page 19, says:\r\n\r\n   2. Otherwise, a temporary value T_rr_current_interval is calculated\r\n      as follows:\r\n\r\n         T_rr_current_interval = RND*T_rr_interval\r\n\r\n|     with RND being a pseudo random function evenly distributed between\r\n      0.5 and 1.5.  This dithered value is used to determine one of the\r\n      following alternatives:\r\n\r\nSimilar to item (4) above, the RFC should say instead:\r\n\r\n   2. Otherwise, a temporary value T_rr_current_interval is calculated\r\n      as follows:\r\n\r\n         T_rr_current_interval = RND*T_rr_interval\r\n\r\n|     with RND being a pseudo random number evenly distributed between\r\n      0.5 and 1.5.  This dithered value is used to determine one of the\r\n      following alternatives:\r\n\r\n\r\n(6)  [typo / dup. wording]\r\n\r\nSection 3.6.2 of RFC 4585, on mid-page 21, says:\r\n\r\n   Example: If a 256-kbit/s video with 30 fps is transmitted through a\r\n   network with an MTU size of some 1,500 bytes, then, in most cases,\r\n|  each frame would fit in into one packet leading to a packet rate of\r\n   30 packets per second.  [...]\r\n\r\nIt should say:\r\n\r\n   Example: If a 256-kbit/s video with 30 fps is transmitted through a\r\n   network with an MTU size of some 1,500 bytes, then, in most cases,\r\n|  each frame would fit into one packet leading to a packet rate of\r\n   30 packets per second.  [...]\r\n\r\n\r\n(7)  [wrong ref. tag]\r\n\r\nOn mid-page 23, Section 4.1 of RFC 4585 says:\r\n\r\n                             vvv\r\n|  The AV profile defined in [4] is referred to as \"AVP\" in the context\r\n   of, e.g., the Session Description Protocol (SDP) [3].  The profile\r\n   specified in this document is referred to as \"AVPF\".\r\n\r\nThere apparently is a confusion of the ref. tags used.\r\nThe RFC should say:\r\n                             vvv\r\n|  The AV profile defined in [2] is referred to as \"AVP\" in the context\r\n   of, e.g., the Session Description Protocol (SDP) [3].  The profile\r\n   specified in this document is referred to as \"AVPF\".\r\n\r\n\r\n(8)  [missing article]\r\n\r\nIn Section 4.2, near the top of page 25, the ABNF production:\r\n\r\n      rtcp-fb-pt         = \"*\"   ; wildcard: applies to all formats\r\n|                        / fmt   ; as defined in SDP spec\r\n\r\nshould better say, improving the ABNF comment text:\r\n\r\n      rtcp-fb-pt         = \"*\"   ; wildcard: applies to all formats\r\n|                        / fmt   ; as defined in the SDP spec\r\n                                                ^^^^^\r\n\r\n\r\n(9)  [inconsistent specification]\r\n\r\nIn Section 4.2, the ABNF on page 25 contains the following productions:\r\n\r\n      rtcp-fb-val        = \"ack\" rtcp-fb-ack-param\r\n                         / [...]\r\nand\r\n      rtcp-fb-ack-param  = SP \"rpsi\"\r\n                         / SP \"app\" [SP byte-string]\r\n                         / SP token [SP byte-string]\r\n|                        / ; empty\r\n\r\nThis means that the feedback type \"ack\" *MAY* have parameters.\r\n\r\nContrary to that, below the ABNF, the RFC explains:\r\n\r\n   Feedback type \"ack\":\r\n\r\n      This feedback type indicates that positive acknowledgements for\r\n      feedback are supported.\r\n\r\n      The feedback type \"ack\" MUST only be used if the media session is\r\n      allowed to operate in ACK mode as defined in Section 3.6.1.\r\n\r\n|     Parameters MUST be provided to further distinguish different types\r\n|     of positive acknowledgement feedback.\r\n\r\n      [...]\r\n\r\nThe *MUST* in the tagged lines contradicts the ABNF.\r\n\r\nAuthors, please resolve the issue:\r\n\r\nEither have the ABNF changed by omission of the tagged line above,\r\n\r\n|                        / ; empty\r\n\r\nor change the tagged explanation lines to say:\r\n\r\n|     Parameters MAY be provided to further distinguish different types\r\n|     of positive acknowledgement feedback.\r\n\r\n\r\n(10)  [incomplete specification, and an extraneous word]\r\n\r\nAt the bottom of page 26, Section 4.2 of RFC 4585 says:\r\n\r\n   Other feedback types <rtcp-fb-id>:\r\n\r\n      Other documents MAY define additional types of feedback; to keep\r\n      the grammar extensible for those cases, the rtcp-fb-id is\r\n|     introduced as a placeholder.  A new feedback scheme name MUST to\r\n      be unique (and thus MUST be registered with IANA).  Along with a\r\n|     new name, its semantics, packet formats (if necessary), and rules\r\n      for its operation MUST be specified.\r\n\r\nIt should say:\r\n\r\n   Other feedback types <rtcp-fb-id>:\r\n\r\n      Other documents MAY define additional types of feedback; to keep\r\n      the grammar extensible for those cases, the rtcp-fb-id is\r\n|     introduced as a placeholder.  A new feedback scheme name MUST be\r\n      unique (and thus MUST be registered with IANA).  Along with a new\r\n|     new name, its semantics, possible parameters, packet formats (if\r\n      necessary), and rules for its operation MUST be specified.\r\n\r\nRationale:\r\n\r\na) \"MUST to be unique\" should be \"MUST be unique\".\r\n\r\nb) Syntax and semantics of parameters (if any) obviously MUST be\r\n   specified as well.  The RFC text in the IANA Considerations\r\n   (Section 9) already reflects this requirement.\r\n   For completeness and clarity, it should be stated here as well.\r\n   I have proposed minimal additional wording -- you might choose\r\n   alternative words.",
    "correct_text": "",
    "notes": "from pending\r\n\r\n--VERIFIER COMMENT--\r\nThanks for the review.  I have only quickly skimmed your comments\r\nand there does not seem to be anything serious.\r\n\r\nWe will be happy to archive these and migt consider them if\r\nwe do a revision of the RFC.  But an errata document would\r\nonly make sense if there is something seriously hindering\r\ninteroperability.  I have not seen anything falling into this\r\ncategory (well, and there are implementations out there from\r\nthe spec).\r\n",
    "submit_date": "2006-08-17",
    "submitter_name": "Alfred Hoenes",
    "verifier_id": "99",
    "verifier_name": "Joerg Ott",
    "update_date": "2019-09-10 09:09:03"
  }
]
