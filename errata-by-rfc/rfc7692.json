[
  {
    "errata_id": "4982",
    "doc-id": "RFC7692",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "7.1.1.1",
    "orig_text": "A server MAY include the \"server_no_context_takeover\" extension\r\nparameter in an extension negotiation response even if the extension\r\nnegotiation offer being accepted by the extension negotiation\r\nresponse didn't include the \"server_no_context_takeover\" extension\r\nparameter.",
    "correct_text": "A server MAY include the \"server_no_context_takeover\" extension\r\nparameter in an extension negotiation response even if the extension\r\nnegotiation offer being accepted by the extension negotiation\r\nresponse didn't include the \"server_no_context_takeover\" extension\r\nparameter.\r\nA client SHOULD treat the \"server_no_context_takeover\" extension\r\nparameter in an extension negotiation response as a hint with no\r\nrequirement to provide an implementation, and MUST NOT treat this\r\nparameter, if included in the response, as an invalid configuration.",
    "notes": "It is currently possible for a client and a server to implement per spec and fail to make a connection.\r\n\r\nThere is no requirement for a client to implement this purely optional parameter, nor to understand this parameter if not implemented. If not supported, this would result in an invalid configuration. As a result, point 7 mandates that the socket connection MUST be closed.\r\nThis will only occur if a client has no implementation for this parameter and does not understand/accept the parameter, and the server sends an unsolicited \"server_no_context_takeover\" parameter in its response, which is allowed.",
    "submit_date": "2017-03-28",
    "submitter_name": "Mark Straver",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "8099",
    "doc-id": "RFC7692",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "7.2.3.3",
    "orig_text": "The first 2 octets (0xc1 0x0b)\r\nare the WebSocket frame header (FIN=1, RSV1=1, RSV2=0, RSV3=0,\r\nopcode=text, MASK=0, Payload length=7).",
    "correct_text": "The first 2 octets (0xc1 0x0b)\r\nare the WebSocket frame header (FIN=1, RSV1=1, RSV2=0, RSV3=0,\r\nopcode=text, MASK=0, Payload length=11).",
    "notes": "The example frame has a payload length of 11, not 7.",
    "submit_date": "2024-09-11",
    "submitter_name": "Amichai Rothman",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": null
  }
]
