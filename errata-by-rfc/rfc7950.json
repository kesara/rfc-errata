[
  {
    "errata_id": 4794,
    "doc-id": "RFC7950",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "7.21.5",
    "orig_text": "   o  If the \"when\" statement is a child of an \"augment\" statement, then\r\n      the context node is the augment's target node in the data tree, if\r\n      the target node is a data node.  Otherwise, the context node is\r\n      the closest ancestor node to the target node that is also a data\r\n      node.  If no such node exists, the context node is the root node.\r\n      The accessible tree is tentatively altered during the processing\r\n      of the XPath expression by removing all instances (if any) of the\r\n      nodes added by the \"augment\" statement.\r\n",
    "correct_text": "   o  If the \"when\" statement is a child of an \"augment\" statement, then\r\n      the context node is the augment's target node in the data tree, if\r\n      the target node is a data node, rpc, action or notification.\r\n      Otherwise, the context node is the closest ancestor node to the\r\n      target node that is also a data node, rpc, action or notification.\r\n      If no such node exists, the context node is the root node. The\r\n      accessible tree is tentatively altered during the processing of\r\n      the XPath expression by removing all instances (if any) of the\r\n      nodes added by the \"augment\" statement.\r\n",
    "notes": "If the target node of an \"augment\" is inside an rpc, action or notification, the context node also needs to be inside that rpc, action or notification. For example, if the target node is the \"input\" node of an action, the context node should be the action node, not the data node for which the action is defined as the original text implies. This is also in accordance with the definition of the accessible tree in Sec. 6.4.1.",
    "submit_date": "2016-09-02",
    "submitter_name": "Ladislav Lhotka",
    "verifier_id": 132,
    "verifier_name": "Benoit Claise",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 4916,
    "doc-id": "RFC7950",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "7.17.",
    "orig_text": "If the target node is a container, list, case, input, output, or\r\nnotification node, the \"container\", \"leaf\", \"list\", \"leaf-list\",\r\n\"uses\", and \"choice\" statements can be used within the \"augment\"\r\nstatement.",
    "correct_text": "If the target node is a container, list, case, input, output, or\r\nnotification node, the \"anydata\", \"anyxml\", \"container\", \"leaf\",\r\n\"list\", \"leaf-list\", \"uses\", and \"choice\" statements can be used\r\nwithin the \"augment\" statement.",
    "notes": "It was forgotten to mention \"anydata\" and \"anyxml\" as valid substatements in this case.",
    "submit_date": "2017-01-24",
    "submitter_name": "Michal Vasko",
    "verifier_id": 132,
    "verifier_name": "Benoit Claise",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 5157,
    "doc-id": "RFC7950",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": 14,
    "orig_text": "  key-predicate-expr  = node-identifier *WSP \"=\" *WSP quoted-string",
    "correct_text": "  key-predicate-expr  = node-identifier *WSP \"=\" *WSP \r\n        (quoted-string / integer-value / decimal-value)",
    "notes": "An instance identifier is forced to specify every key value to be a string\r\neven though the YANG key leaf type could be a numeric type.\r\nXPath does not require a quoted string here, just YANG.\r\n\r\nOld:  /top/list[idx=\"4\"]\r\nNew: /top/list[idx=4]\n --VERIFIER NOTES-- \n Hi,\r\n\r\nTo be clear, I am withdrawing this errata because existing implementations\r\nmay not accept a numeric literal in an instance-identifier.\r\nI think this should be addressed in YANG 2.0 and this thread should be\r\nrecorded in the yang-next issue trac ker.\r\n\r\nAndy",
    "submit_date": "2017-10-16",
    "submitter_name": "Andy Bierman",
    "verifier_id": 132,
    "verifier_name": "Benoit Claise",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 5237,
    "doc-id": "RFC7950",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": "6.4.1.1",
    "orig_text": "The accessible tree for an action invocation of \"reset\" on\r\n/a/b[id=\"1\"] with the \"when\" parameter set to \"10\" would be:\r\n\r\n<a xmlns=\"urn:example:a\">\r\n<b>\r\n<id>1</id>\r\n<reset>\r\n<delay>10</delay>\r\n</reset>\r\n</b>\r\n<b>\r\n<id>2</id>\r\n</b>\r\n</a>\r\n// possibly other top-level nodes here",
    "correct_text": "The accessible tree for an action invocation of \"reset\" on\r\n/a/b[id=\"1\"] with the \"delay\" parameter set to \"10\" would be:\r\n\r\n<a xmlns=\"urn:example:a\">\r\n<b>\r\n<id>1</id>\r\n<reset>\r\n<delay>10</delay>\r\n</reset>\r\n</b>\r\n<b>\r\n<id>2</id>\r\n</b>\r\n</a>\r\n// possibly other top-level nodes here",
    "notes": "The example action \"reset\" has an input parameter named \"delay\" and not a parameter named \"when\".",
    "submit_date": "2018-01-18",
    "submitter_name": "Muly Ilan",
    "verifier_id": 132,
    "verifier_name": "Benoit Claise",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 5274,
    "doc-id": "RFC7950",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "7.16.3",
    "orig_text": "   A corresponding XML instance example of the complete notification:\r\n\r\n     <notification\r\n       xmlns=\"urn:ietf:params:xml:ns:netconf:notification:1.0\">\r\n       <eventTime>2008-07-08T00:01:00Z</eventTime>\r\n       <event xmlns=\"urn:example:event\">\r\n         <event-class>fault</event-class>\r\n         <reporting-entity>\r\n           /ex:interface[ex:name='Ethernet0']\r\n         </reporting-entity>\r\n         <severity>major</severity>\r\n       </event>\r\n     </notification>",
    "correct_text": "   A corresponding XML instance example of the complete notification\r\n   follows.  This example reports an event for an interface from the\r\n   \"example-foo\" module defined in Section 13.1.1.\r\n\r\n     <notification\r\n       xmlns=\"urn:ietf:params:xml:ns:netconf:notification:1.0\">\r\n       <eventTime>2008-07-08T00:01:00Z</eventTime>\r\n       <event xmlns=\"urn:example:event\">\r\n         <event-class>fault</event-class>\r\n         <reporting-entity xmlns:ex=\"urn:example:foo\">\r\n           /ex:interface[ex:name='Ethernet0']\r\n         </reporting-entity>\r\n         <severity>major</severity>\r\n       </event>\r\n     </notification>\r\n",
    "notes": "The \"ex\" prefix is not declared.  The \"example-foo\" module in 13.1.1 is the only module in the draft that matches the given instance-identifier.  An alternative fix would be to use a different module and a matching instance-identifier.",
    "submit_date": "2018-03-04",
    "submitter_name": "Kent Watsen",
    "verifier_id": 132,
    "verifier_name": "Benoit Claise",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 5489,
    "doc-id": "RFC7950",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "7.20.3.2",
    "orig_text": "The argument \"delete\" deletes properties from the target node.  The\r\n   properties to delete are identified by substatements to the \"delete\"\r\n   statement. ",
    "correct_text": "The argument \"delete\" deletes properties from the target node.  The\r\n   properties to delete are identified by substatements to the \"deviate\"\r\n   statement. ",
    "notes": null,
    "submit_date": "2018-09-03",
    "submitter_name": "Andreas Jakobik",
    "verifier_id": 155,
    "verifier_name": "Warren Kumari (Ops AD)",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 5517,
    "doc-id": "RFC7950",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "10.4.2",
    "orig_text": "The derived-from-or-self() function returns \"true\" if any node in the\r\n   argument \"nodes\" is a node of type \"identityref\" and its value is an\r\n   identity that is equal to or derived from (see Section 7.18.2) the\r\n   identity \"identity\"; otherwise, it returns \"false\".\r\n",
    "correct_text": " The derived-from-or-self() function returns \"true\" if any node in the\r\n argument \"nodes\" is a node of type \"identityref\" or a type derived\r\n from \"identityref\", and its value is an identity that is equal to or\r\n derived from (see Section 7.18.2) the identity \"identity\"; \r\n otherwise, it returns \"false\".\r\n",
    "notes": "The node-set can have node which are of types that may be derived from an identityref. Typical example is in ietf-netconf-nmda, where \"when 'derived-from-or-self(datastore, \"ds:operational\")';\" is used, but the \"datastore\" node is of type \"datastore-ref\" defined in ietf-datastores module, which is in-turn derived from \"identityref\"\r\n\r\ncorrected text proposal with additional editing by Martin Bjorklund and Ladislav Lhotka ",
    "submit_date": "2018-10-08",
    "submitter_name": "Rohit R Ranade",
    "verifier_id": 135,
    "verifier_name": "Joel Jaeggli",
    "update_date": "2019-09-24 09:56:10"
  },
  {
    "errata_id": 5617,
    "doc-id": "RFC7950",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": 14,
    "orig_text": "path-arg            = absolute-path / relative-path",
    "correct_text": "path-arg            = deref-expr / path-str\r\n\r\nderef-expr          = deref-function-invocation *WSP \"/\" *WSP \r\n                      relative-path\r\n\r\npath-str            = absolute-path / relative-path\r\n\r\nderef-function-invocation = deref-keyword *WSP\r\n                            \"(\" *WSP path-str *WSP \")\"\r\n\r\nderef-keyword       = %s\"deref\"",
    "notes": "This is to allow path statement to contain also \"deref\" function invocation which is supported by pyang and Cisco compiler but for now is not supported by i.e. yanglint validator because of above statement which does not allow for it.",
    "submit_date": "2019-01-30",
    "submitter_name": "Marek Michalak, Pawel Koch",
    "verifier_id": 135,
    "verifier_name": "Joel Jaeggli",
    "update_date": "2019-10-15 11:44:09"
  },
  {
    "errata_id": 5642,
    "doc-id": "RFC7950",
    "errata_status_code": "Rejected",
    "errata_type_code": "Editorial",
    "section": "9.6.4",
    "orig_text": "It takes as an argument a string that is the assigned name. ",
    "correct_text": "It takes as an argument an unquoted string that is the assigned name.",
    "notes": "Readers are not beeing made aware that careful reading of section 6.1.3 and the detailed definition of string in section 14 must be consulted.\r\nFor comming versions of this RFC it would be preferable to use a more specialized grammar token for these cases (e.g. unquoted-string).\n --VERIFIER NOTES-- \n Juergen Schoenwaelder wrote:\r\n\r\nSection 6.1 defines the lexical rules and what the scanner returns is\r\nan unquopted string but it accepts unquoted strings and quoted string\r\nand combinations thereof with the \"+\" concatenation operator as input.\r\n\r\nThe errata should be rejected.\r\n\r\n",
    "submit_date": "2019-02-21",
    "submitter_name": "Peter Loborg",
    "verifier_id": 135,
    "verifier_name": "Joel Jaeggli",
    "update_date": "2019-10-05 08:55:42"
  },
  {
    "errata_id": 5663,
    "doc-id": "RFC7950",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": 14,
    "orig_text": "deviate-delete-stmt = deviate-keyword sep delete-keyword-str optsep\r\n                      (\";\" /\r\n                       \"{\" stmtsep\r\n                           ;; these stmts can appear in any order\r\n                           [units-stmt]\r\n                           *must-stmt\r\n                           *unique-stmt\r\n                           *default-stmt\r\n                       \"}\") stmtsep\r\n",
    "correct_text": "deviate-delete-stmt = deviate-keyword sep delete-keyword-str optsep\r\n                      (\";\" /\r\n                       \"{\" stmtsep\r\n                           ;; these stmts can appear in any order\r\n                           [units-stmt]\r\n                           *must-stmt\r\n                           *unique-stmt\r\n                           *default-stmt\r\n                           [config-stmt]\r\n                           [mandatory-stmt]\r\n                           [min-elements-stmt]\r\n                           [max-elements-stmt]\r\n                       \"}\") stmtsep\r\n",
    "notes": "Section 7.20.3.2 specifies all permitted substatements for the \"deviate\" statement however the ABNF grammar specifies different valid substatements per deviate argument.  The \"delete\" argument is one such that only contains a subset of what is defined in the substatement table in this section.\r\n\r\nThe errata mentioned at: https://www.rfc-editor.org/errata/eid5489 is meant to correct the following statement\r\n\r\n\"\"\"\r\nThe argument \"delete\" deletes properties from the target node.  The\r\nproperties to delete are identified by substatements to the \"delete\"\r\nstatement.\r\n\"\"\"\r\n\r\nHowever this either needs to be a per argument table or ABNF correction\n --VERIFIER NOTES-- \n   Martin Bjorklund wrote:\r\n\r\nI agree that the document needs clarification, and the yang-next issue\r\nwill take care of that.  The document needs a clarification that the\r\nrefers to the grammar, or perhaps different substatement tables for\r\nadd/replace/delete.\r\n\r\nMeanwhile, I think that this errata should be rejected.\r\n\r\nrob wilton and robert varga wrote:\r\n\r\nHi Ebben,\r\n\r\nI've always taken the ABNF to list the definitive sub-statements that are allowed for the various deviate \"add\", \"replace\", or \"delete\" options.  Perhaps the RFC could state this more explicitly.  Perhaps raise an issue on the YANG Next issue tracker to clarify this (https://github.com/netmod-wg/yang-next/issues) and it might get discussed tomorrow.\r\n\r\nI agree.\r\n\r\nProposed statements are simple cases, for which 'deviate replace' can be\r\nused to specify the correct value -- for example remove 'min-elements'\r\nby replacing it with 'min-elements 0'.",
    "submit_date": "2019-03-18",
    "submitter_name": "Ebben Aries",
    "verifier_id": 135,
    "verifier_name": "Joel Jaeggli",
    "update_date": "2019-10-15 11:44:15"
  },
  {
    "errata_id": 5698,
    "doc-id": "RFC7950",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": "7.5.4.3",
    "orig_text": "     container interface {\r\n       leaf ifType {\r\n         type enumeration {\r\n           enum ethernet;\r\n           enum atm;\r\n         }\r\n       }\r\n       leaf ifMTU {\r\n         type uint32;\r\n       }\r\n       must 'ifType != \"ethernet\" or ifMTU = 1500' {\r\n         error-message \"An Ethernet MTU must be 1500\";\r\n       }\r\n       must 'ifType != \"atm\" or'\r\n          + ' (ifMTU <= 17966 and ifMTU >= 64)' {\r\n         error-message \"An ATM MTU must be 64 .. 17966\";\r\n       }\r\n     }\r\n",
    "correct_text": "     container interface {\r\n       leaf ifType {\r\n         type enumeration {\r\n           enum ethernet;\r\n           enum atm;\r\n         }\r\n       }\r\n       leaf ifMTU {\r\n         type uint32;\r\n       }\r\n       must 'string(ifType) != \"ethernet\" or ifMTU = 1500' {\r\n         error-message \"An Ethernet MTU must be 1500\";\r\n       }\r\n       must 'string(ifType) != \"atm\" or'\r\n          + ' (ifMTU <= 17966 and ifMTU >= 64)' {\r\n         error-message \"An ATM MTU must be 64 .. 17966\";\r\n       }\r\n     }\r\n",
    "notes": "The intent of the example is for each must-stmt to be false if the ifType leaf does not exist.\r\nHowever the XPath is incorrect.\r\n\r\nFrom the XPath 1.0 spec, section 3.4, para 5\r\n\r\nIf one object to be compared is a node-set and the other is a string, then the comparison will be true if and only if there is a node in the node-set such that the result of performing the comparison on the string-value of the node and the other string is true. \r\n\r\nThe empty node-set is not implicitly converted to an empty string for a = or != comparison.\r\nInstead the string() function must explicitly convert the node-set to a string",
    "submit_date": "2019-04-18",
    "submitter_name": "Andy Bierman",
    "verifier_id": 158,
    "verifier_name": "Ignas Bagdonas",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 5784,
    "doc-id": "RFC7950",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "9.3.2",
    "orig_text": "Leading and trailing zeros are prohibited, subject to the rule that \r\nthere MUST be at least one digit before and after the decimal point.  \r\nThe value zero is represented as \"0.0\".\r\n\r\n\r\n",
    "correct_text": "Leading zeros before the first digit and trailing zeros after the \r\nlast digit are prohibited, subject to the rule that there MUST be \r\nat least one digit before and after the decimal point.  The value \r\nzero is represented as \"0.0\".",
    "notes": "Based on the rule in the orginal text, the value such as \"0.5\",\"0.0\" is illegal. So I think the intention of the original text is to make sure the leading zeros before the first digit and the trailing zero after the last digit are prohibited.\n --VERIFIER NOTES-- \n   The consensus on the NetMod WG was that this text was somewhat confusing, but understandable (and that crafting clear, concise replacement text will be ugly). I'm rejecting this, but future updates may want to consider addressing this anyway (I didn't feel it rose to the HFDU level) ",
    "submit_date": "2019-07-17",
    "submitter_name": "Qin WU",
    "verifier_id": 155,
    "verifier_name": "Warren Kumari (Ops AD)",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 5807,
    "doc-id": "RFC7950",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "7.21.5.",
    "orig_text": "   o  If the \"when\" statement is a child of a \"uses\", \"choice\", or\r\n      \"case\" statement, then the context node is the closest ancestor\r\n      node to the node with the \"when\" statement that is also a data\r\n      node.  If no such node exists, the context node is the root node.\r\n      The accessible tree is tentatively altered during the processing\r\n      of the XPath expression by removing all instances (if any) of the\r\n      nodes added by the \"uses\", \"choice\", or \"case\" statement.",
    "correct_text": "   o  If the \"when\" statement is a child of a \"uses\", \"choice\", or\r\n      \"case\" statement, then the context node is the closest ancestor\r\n      node to the node with the \"when\" statement that is also a data\r\n      node, rpc, action or notification.  If no such node exists, the\r\n      context node is the root node. The accessible tree is tentatively\r\n      altered during the processing of the XPath expression by removing\r\n      all instances (if any) of the nodes added by the \"uses\",\r\n      \"choice\", or \"case\" statement.",
    "notes": "Similar to verified errata 4794 (https://www.rfc-editor.org/errata/eid4794) but covers the \"uses\", \"choice\" and \"case\" corner case (instead of \"augment\"). If the node for which the \"when\" statement is defined is within an rpc, action or notification, the context node also needs to be inside that rpc, action or notification. There are published IETF modules, which rely on this to be true, such as \"ietf-netconf-nmda@2019-01-07\" in RFC8526 (https://tools.ietf.org/html/rfc8526) at schema node id \"/ncds:get-data/ncds:input/ncds:origin-filters\". Original text assigns the context node to the root node, if no data node ancestor is found. \"rpc\", \"action\" and \"notification\" are not data nodes and are represented by nodes that are descendants of the root node, as described in Section 6.4.1.",
    "submit_date": "2019-08-13",
    "submitter_name": "Jernej Tuljak",
    "verifier_id": 155,
    "verifier_name": "Warren Kumari (Ops AD)",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 5856,
    "doc-id": "RFC7950",
    "errata_status_code": "Rejected",
    "errata_type_code": "Editorial",
    "section": "9.6.4",
    "orig_text": "It takes as an argument a string that is the assigned name. ",
    "correct_text": "It takes as an argument an unquoted string that is the assigned name.",
    "notes": "Readers are not beeing made aware that careful reading of section 6.1.3 and the detailed definition of string in section 14 must be consulted.\r\nFor comming versions of this RFC it would be preferable to use a more specialized grammar token for these cases (e.g. unquoted-string).\r\n\r\n\r\n\n --VERIFIER NOTES-- \n   Please see the thread  https://mailarchive.ietf.org/arch/browse/netmod/?gbt=1&index=L3rZ7qFjnpsPeRJ4FfJZegWXdig for further discussions.",
    "submit_date": "2019-02-21",
    "submitter_name": "Peter Loborg",
    "verifier_id": 155,
    "verifier_name": "Warren Kumari (Ops AD)",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 5879,
    "doc-id": "RFC7950",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": 3,
    "orig_text": "o  schema tree: The definition hierarchy specified within a module.\r\n",
    "correct_text": "o  schema tree: The hierarchy of schema nodes defined in the set of all modules \r\n   implemented by a server, as specified in the YANG library data [RFC7895].\r\n\r\n",
    "notes": "The original definition of the term has two problems:\r\n\r\n1. Schema tree is not limited to a single module. Some YANG constructs, such as augment and leafref type, may refer to a schema node that is defined in another module.\r\n\r\n2. Apart from schema nodes, YANG modules contain definitions that do not contribute to the schema tree: groupings, typedefs, identities etc.\n --VERIFIER NOTES-- \n   Rejected based on WG discussion: https://mailarchive.ietf.org/arch/msg/netmod/5uDEBwgNehfLaPONpDSjVnCcWx8\r\n",
    "submit_date": "2019-10-22",
    "submitter_name": "Ladislav Lhotka",
    "verifier_id": 158,
    "verifier_name": "Ignas Bagdonas",
    "update_date": "2019-10-28 14:48:30"
  },
  {
    "errata_id": 6031,
    "doc-id": "RFC7950",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "9.9.3",
    "orig_text": "The \"require-instance\" statement, which is a substatement to the \r\n\"type\" statement, MAY be present if the type is \"instance-identifier\"\r\nor \"leafref\".  It takes as an argument the string \"true\" or \"false\".\r\nIf this statement is not present, it defaults to \"true\".",
    "correct_text": "The \"require-instance\" statement, which is a substatement to the\r\n\"type\" statement, MAY be present if the type is \"instance-identifier\",\r\n\"leafref\" or a type derived from them.  It takes as an argument the\r\nstring \"true\" or \"false\".  If this statement is not present, it\r\ndefaults to \"true\".",
    "notes": "The document does not specify whether the “require-instance” keyword is allowed in typedef refinements derived from the “leafref” or “instance-identifier” base types, but it is anticipated that a future revision of YANG would allow this.   It is suggested that modules using YANG language versions 1 [RFC 6020] and 1.1 [RFC 7950] avoid using this construct, YANG module validation tools flag a warning if this construct is used, but implementations allow this if possible.",
    "submit_date": "2020-03-27",
    "submitter_name": "Radek Krejci",
    "verifier_id": 166,
    "verifier_name": "Robert Wilton",
    "update_date": "2020-05-04 03:02:42"
  },
  {
    "errata_id": 6078,
    "doc-id": "RFC7950",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "6.4.",
    "orig_text": "   For example, consider the following definition:\r\n\r\n     leaf lxiv {\r\n       type decimal64 {\r\n         fraction-digits 18;\r\n       }\r\n       must \". <= 10\";\r\n     }\r\n\r\n   An instance of the \"lxiv\" leaf having the value of\r\n   10.0000000000000001 will then successfully pass validation.",
    "correct_text": "   For example, consider the following definition:\r\n\r\n     leaf lxiv {\r\n       type decimal64 {\r\n         fraction-digits 18;\r\n       }\r\n       must \". <= 9\";\r\n     }\r\n\r\n   An instance of the \"lxiv\" leaf having the value of\r\n   9.0000000000000001 will then successfully pass validation.",
    "notes": "Value 10.0000000000000001 is not a valid decimal64 value with 18 fraction digits as per Section 9.3.4.",
    "submit_date": "2020-04-03",
    "submitter_name": "Michal Vasko",
    "verifier_id": 166,
    "verifier_name": "Rob Wilton",
    "update_date": "2020-04-03 04:08:51"
  },
  {
    "errata_id": 6258,
    "doc-id": "RFC7950",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "5.6.5",
    "orig_text": "For example, with these modules:\r\n\r\n     module a {\r\n       yang-version 1.1;\r\n       namespace \"urn:example:a\";\r\n       prefix \"a\";\r\n\r\n       import b {\r\n         revision-date 2015-01-01;\r\n       }\r\n       import c;\r\n\r\n       revision 2015-01-01;\r\n",
    "correct_text": "For example, with these modules:\r\n\r\n     module a {\r\n       yang-version 1.1;\r\n       namespace \"urn:example:a\";\r\n       prefix \"a\";\r\n\r\n       import b {\r\n         revision-date 2015-01-01;\r\n         prefix b;\r\n       }\r\n       import c {\r\n         prefix c;\r\n       }\r\n\r\n       revision 2015-01-01;\r\n",
    "notes": "As is considered in 7.1.5, The mandatory \"prefix\" substatement assigns a prefix for the imported module that is scoped to the importing module or submodule. \r\n\r\nSo, there should be a prefix substatement in the \"import b\" and \"import c\" statement respectively.",
    "submit_date": "2020-08-20",
    "submitter_name": "Fred Gan",
    "verifier_id": 99,
    "verifier_name": null,
    "update_date": null
  },
  {
    "errata_id": 6570,
    "doc-id": "RFC7950",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": 11,
    "orig_text": "   o  New typedefs, groupings, rpcs, notifications, extensions,\r\n      features, and identities may be added.",
    "correct_text": "   o  New typedefs, groupings, rpcs, actions, notifications,\r\n      extensions, features, and identities may be added.",
    "notes": "The original text unintentionally fails to mention actions. A definition in a published module may be revised by adding actions to this definition.",
    "submit_date": "2021-05-04",
    "submitter_name": "Jernej Tuljak",
    "verifier_id": 166,
    "verifier_name": "Rob Wilton",
    "update_date": "2021-05-10 00:26:33"
  },
  {
    "errata_id": 6655,
    "doc-id": "RFC7950",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": "10.6.1.1",
    "orig_text": "   leaf flags {\r\n       type bits {\r\n         bit UP;\r\n         bit PROMISCUOUS\r\n         bit DISABLED;\r\n       }\r\n      }",
    "correct_text": "   leaf flags {\r\n       type bits {\r\n         bit UP;\r\n         bit PROMISCUOUS;\r\n         bit DISABLED;\r\n       }\r\n      }",
    "notes": "The missing semicolon makes the YANG snippet invalid.",
    "submit_date": "2021-08-06",
    "submitter_name": "Viktor Leijon",
    "verifier_id": 166,
    "verifier_name": "Rob Wilton",
    "update_date": "2021-10-12 06:58:05"
  },
  {
    "errata_id": 6855,
    "doc-id": "RFC7950",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "GLOBAL",
    "orig_text": "7.5.  The \"container\" Statement\r\n7.5.7.  XML Encoding Rules\r\n\r\n   A container node is encoded as an XML element.  The element's local\r\n   name is the container's identifier, and its namespace is the module's\r\n   XML namespace (see Section 7.1.3).\r\n\r\n   The container's child nodes are encoded as subelements to the\r\n   container element.  If the container defines RPC or action input or\r\n   output parameters, these subelements are encoded in the same order as\r\n   they are defined within the \"container\" statement.  Otherwise, the\r\n   subelements are encoded in any order.\r\n\r\n7.8. The \"list\" Statement\r\n7.8.5.  XML Encoding Rules\r\n\r\n   The list's key nodes are encoded as subelements to the list's\r\n   identifier element, in the same order as they are defined within the\r\n   \"key\" statement.\r\n\r\n   The rest of the list's child nodes are encoded as subelements to the\r\n   list element, after the keys.  If the list defines RPC or action\r\n   input or output parameters, the subelements are encoded in the same\r\n   order as they are defined within the \"list\" statement.  Otherwise,\r\n   the subelements are encoded in any order.\r\n   . . . . .\r\n\r\n7.14.  The \"rpc\" Statement\r\n7.14.4.  NETCONF XML Encoding Rules\r\n\r\n   . . . . .\r\n\r\n   Input parameters are encoded as child XML elements to the rpc node's\r\n   XML element, in the same order as they are defined within the \"input\"\r\n   statement.\r\n\r\n   If the RPC operation invocation succeeded and no output parameters\r\n   are returned, the <rpc-reply> contains a single <ok/> element defined\r\n   in [RFC6241].  If output parameters are returned, they are encoded as\r\n   child elements to the <rpc-reply> element defined in [RFC6241], in\r\n   the same order as they are defined within the \"output\" statement.\r\n\r\n\r\n7.15.  The \"action\" Statement\r\n7.15.2.  NETCONF XML Encoding Rules\r\n\r\n   . . . . .\r\n\r\n   The <action> element contains a hierarchy of nodes that identifies\r\n   the node in the datastore.  It MUST contain all containers and list\r\n   nodes in the direct path from the top level down to the list or\r\n   container containing the action.  For lists, all key leafs MUST also\r\n   be included.  The innermost container or list contains an XML element\r\n   that carries the name of the defined action.  Within this element,\r\n   the input parameters are encoded as child XML elements, in the same\r\n   order as they are defined within the \"input\" statement.\r\n\r\n   . . . . .\r\n\r\n   If the action operation invocation succeeded and no output parameters\r\n   are returned, the <rpc-reply> contains a single <ok/> element defined\r\n   in [RFC6241].  If output parameters are returned, they are encoded as\r\n   child elements to the <rpc-reply> element defined in [RFC6241], in\r\n   the same order as they are defined within the \"output\" statement.\r\n",
    "correct_text": "7.5.  The \"container\" Statement\r\n7.5.7.  XML Encoding Rules\r\n\r\n   . . . . .\r\n\r\n   The container's child nodes are encoded as subelements to the\r\n   container element.  If the container defines RPC or action input or\r\n   output parameters, these subelements MUST be encoded in the same order as\r\n   they are defined within the \"container\" statement.  Otherwise, the\r\n   subelements are encoded in any order.\r\n\r\n7.8. The \"list\" Statement\r\n7.8.5.  XML Encoding Rules\r\n\r\n   The list's key nodes MUST be encoded as subelements to the list's\r\n   identifier element, in the same order as they are defined within the\r\n   \"key\" statement.\r\n\r\n   The rest of the list's child nodes are encoded as subelements to the\r\n   list element, after the keys.  If the list defines RPC or action\r\n   input or output parameters, the subelements MUST be encoded in the same\r\n   order as they are defined within the \"list\" statement.  Otherwise,\r\n   the subelements are encoded in any order.\r\n   . . . . .\r\n\r\n7.14.  The \"rpc\" Statement\r\n7.14.4.  NETCONF XML Encoding Rules\r\n\r\n   . . . . .\r\n\r\n   Input parameters MUST be encoded as child XML elements to the rpc node's\r\n   XML element, in the same order as they are defined within the \"input\"\r\n   statement.\r\n\r\n   If the RPC operation invocation succeeded and no output parameters\r\n   are returned, the <rpc-reply> contains a single <ok/> element defined\r\n   in [RFC6241].  If output parameters are returned, they MUST be encoded as\r\n   child elements to the <rpc-reply> element defined in [RFC6241], in\r\n   the same order as they are defined within the \"output\" statement.\r\n\r\n\r\n7.15.  The \"action\" Statement\r\n7.15.2.  NETCONF XML Encoding Rules\r\n\r\n   . . . . .\r\n\r\n   The <action> element contains a hierarchy of nodes that identifies\r\n   the node in the datastore.  It MUST contain all containers and list\r\n   nodes in the direct path from the top level down to the list or\r\n   container containing the action.  For lists, all key leafs MUST also\r\n   be included.  The innermost container or list contains an XML element\r\n   that carries the name of the defined action.  Within this element,\r\n   the input parameters MUST be encoded as child XML elements, in the same\r\n   order as they are defined within the \"input\" statement.\r\n\r\n   . . . . .\r\n\r\n   If the action operation invocation succeeded and no output parameters\r\n   are returned, the <rpc-reply> contains a single <ok/> element defined\r\n   in [RFC6241].  If output parameters are returned, they MUST be encoded as\r\n   child elements to the <rpc-reply> element defined in [RFC6241], in\r\n   the same order as they are defined within the \"output\" statement.",
    "notes": "The RFC 2119 keywords are missing in description of ordering for XML encoding rules for RPC, actions and references thereto and in additional instance of list keys encoding.\r\n\r\nAlthough the text of RFC suggests reading this as if \"MUST\" was present, without keyword it is open to interpretation if the sentences actually mean \"MUST\" or \"SHOULD\" or may be even \"MAY\".\r\n\r\nIn other places discussing ordering, for example 7.7.8., 7.8.5. and 7.9.5. the \"MUST\" is actually present, hence proposed errata would make ordering description usage of keywords consistent.\n --VERIFIER NOTES-- \nI can see your point of view that MUST is used in other similar places, and I'm sure that in hindsight it would be nice if the language was used consistently in equivalent places.\r\n\r\nHowever, I don't think that the lack of a MUST statement makes the other text any less normative, or ambiguous.  In particular, there is this paragraph of RFC 8174 that updates RFC 2119:\r\n\r\n   o  These words can be used as defined here, but using them is not\r\n      required.  Specifically, normative text does not require the use\r\n      of these key words.  They are used for clarity and consistency\r\n      when that is what's wanted, but a lot of normative text does not\r\n      use them and is still normative.\r\n",
    "submit_date": "2022-02-17",
    "submitter_name": "Alexei Sadovnikov",
    "verifier_id": 166,
    "verifier_name": "Rob Wilton",
    "update_date": "2022-02-22 07:19:32"
  },
  {
    "errata_id": 6885,
    "doc-id": "RFC7950",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": 11,
    "orig_text": "   A definition in a published module may be revised in any of the\r\n   following ways:\r\n\r\n   o  An \"enumeration\" type may have new enums added, provided the old\r\n      enums's values do not change.  Note that inserting a new enum\r\n      before an existing enum or reordering existing enums will result\r\n      in new values for the existing enums, unless they have explicit\r\n      values assigned to them.\r\n\r\n   o  A \"bits\" type may have new bits added, provided the old bit\r\n      positions do not change.  Note that inserting a new bit before an\r\n      existing bit or reordering existing bits will result in new\r\n      positions for the existing bits, unless they have explicit\r\n      positions assigned to them.",
    "correct_text": "See Notes.",
    "notes": "When server is exposing updated yang model as mentioned in Section 11, particularly with enums, bits having new items - client systems that are not updated to use the new yang module will not be able to recognize and use the new values.\r\n\r\nThis is problematic when there are multiple clients and those systems are getting updated to catch up with yang changes over time. Updated \"Client A\" recognizing new enum and using it (update datastore with new value using edit-config), will make, old/not-yet-updated \"Client B\" to encounter the new value (received as response of get-config) that it cannot work with.\r\n\r\nSo, the \"backward compatible\" ways of updating a yang module should consider \"multiple clients\" scenario and make recommendations in such a way that clients are not forced to update all at once.\n --VERIFIER NOTES-- \nThe document text accurately represents the consensus of the WG at the time that it was published.  Hence, this errata is beyond the scope of what changes could be considered as part of the errata process, such a change would need to happen via a new or updated RFC.",
    "submit_date": "2022-03-16",
    "submitter_name": "R Kaja Mohideen",
    "verifier_id": 166,
    "verifier_name": "Rob Wilton",
    "update_date": "2022-03-17 03:10:24"
  },
  {
    "errata_id": 6952,
    "doc-id": "RFC7950",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": "10.4.2.1",
    "orig_text": "       augment \"/interface\" {\r\n         when 'derived-from-or-self(type, \"exif:fast-ethernet\");\r\n         // Fast-Ethernet-specific definitions here\r\n       }",
    "correct_text": "       augment \"/interface\" {\r\n         when 'derived-from-or-self(type, \"exif:fast-ethernet\")';\r\n         // Fast-Ethernet-specific definitions here\r\n       }",
    "notes": "single quote to end complete string is missing",
    "submit_date": "2022-05-03",
    "submitter_name": "Andy Bierman",
    "verifier_id": 2,
    "verifier_name": "RFC Editor",
    "update_date": "2022-05-04 14:35:37"
  },
  {
    "errata_id": 7021,
    "doc-id": "RFC7950",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": 11,
    "orig_text": "A definition in a published module may be revised in any of the\r\n   following ways:\r\n\r\n   o  An \"enumeration\" type may have new enums added, provided the old\r\n      enums's values do not change.  Note that inserting a new enum\r\n      before an existing enum or reordering existing enums will result\r\n      in new values for the existing enums, unless they have explicit\r\n      values assigned to them.",
    "correct_text": "A definition in a published module may be revised in any of the\r\n   following ways:\r\n\r\n   o  The \"revision-date\" substatement of an existing \"import\" statement \r\n      may get a changed argument.\r\n\r\n\r\n   o  An \"enumeration\" type may have new enums added, provided the old\r\n      enums's values do not change.  Note that inserting a new enum\r\n      before an existing enum or reordering existing enums will result\r\n      in new values for the existing enums, unless they have explicit\r\n      values assigned to them.",
    "notes": "In section 5.1.1 it is stated that a module may be republished with an updated \"import\" \r\nstatement. This is needed, otherwise a user of the revision-date statement (inside an import) would never be able to migrate to a newer version of the imported module.\r\n\r\nHowever in section 11.  Updating a Module   this change is not listed in the list of allowed updates, thus it is forbidden.",
    "submit_date": "2022-07-12",
    "submitter_name": "Balazs Lengyel",
    "verifier_id": 99,
    "verifier_name": null,
    "update_date": null
  }
]
