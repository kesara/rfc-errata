[
  {
    "errata_id": 152,
    "doc-id": "RFC4253",
    "errata_status_code": "Rejected",
    "errata_type_code": "Editorial",
    "section": 12,
    "orig_text": "    SSH_MSG_DISCONNECT             1\r\n    SSH_MSG_IGNORE                 2\r\n    SSH_MSG_UNIMPLEMENTED          3\r\n    SSH_MSG_DEBUG                  4\r\n    SSH_MSG_SERVICE_REQUEST        5\r\n    SSH_MSG_SERVICE_ACCEPT         6\r\n    SSH_MSG_KEXINIT                20\r\n    SSH_MSG_NEWKEYS                21\r\n",
    "correct_text": "    SSH_MSG_DISCONNECT             1\r\n    SSH_MSG_IGNORE                 2\r\n    SSH_MSG_UNIMPLEMENTED          3\r\n    SSH_MSG_DEBUG                  4\r\n    SSH_MSG_SERVICE_REQUEST        5\r\n    SSH_MSG_SERVICE_ACCEPT         6\r\n    SSH_MSG_KEXINIT                20\r\n    SSH_MSG_NEWKEYS                21\r\n    SSH_MSG_KEXDH_INIT             30\r\n    SSH_MSG_KEXDH_REPLY            3\r\n",
    "notes": "\n --VERIFIER NOTES-- \nErrata IDs 152 and 1408 are combined to 1486.",
    "submit_date": "2006-01-23",
    "submitter_name": "denis bider",
    "verifier_id": 111,
    "verifier_name": "Pasi Eronen",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 1408,
    "doc-id": "RFC4253",
    "errata_status_code": "Rejected",
    "errata_type_code": "Editorial",
    "section": 12,
    "orig_text": "    SSH_MSG_KEXDH_INIT             30\r\n    SSH_MSG_KEXDH_REPLY            3\r\n",
    "correct_text": "    SSH_MSG_KEXDH_INIT             30\r\n    SSH_MSG_KEXDH_REPLY            31\r\n",
    "notes": "This is a transcription error in the erratum dated 2006-01-23.  Section 12 says \"numbers 30-49 are used for kex packets\", so using 3 for SSH_MSG_KEXDH_REPLY is clearly wrong.  OpenSSH and python-paramiko both use 31, not 3.\n --VERIFIER NOTES-- \nErrata IDs 152 and 1408 are combined into 1486.",
    "submit_date": "2008-04-11",
    "submitter_name": "Dwayne Litzenberger",
    "verifier_id": 111,
    "verifier_name": "Pasi Eronen",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 1486,
    "doc-id": "RFC4253",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": 12,
    "orig_text": "         SSH_MSG_DISCONNECT             1\r\n         SSH_MSG_IGNORE                 2\r\n         SSH_MSG_UNIMPLEMENTED          3\r\n         SSH_MSG_DEBUG                  4\r\n         SSH_MSG_SERVICE_REQUEST        5\r\n         SSH_MSG_SERVICE_ACCEPT         6\r\n         SSH_MSG_KEXINIT                20\r\n         SSH_MSG_NEWKEYS                21\r\n",
    "correct_text": "         SSH_MSG_DISCONNECT             1\r\n         SSH_MSG_IGNORE                 2\r\n         SSH_MSG_UNIMPLEMENTED          3\r\n         SSH_MSG_DEBUG                  4\r\n         SSH_MSG_SERVICE_REQUEST        5\r\n         SSH_MSG_SERVICE_ACCEPT         6\r\n         SSH_MSG_KEXINIT                20\r\n         SSH_MSG_NEWKEYS                21\r\n         SSH_MSG_KEXDH_INIT             30\r\n         SSH_MSG_KEXDH_REPLY            31\r\n",
    "notes": "This errata combines the partial errata reported by Denis Bider (errata ID 152 on 2006-01-23) and Dwayne Litzenberger (errata ID 1408 on 2008-04-11).",
    "submit_date": "2008-08-08",
    "submitter_name": "Pasi Eronen",
    "verifier_id": 111,
    "verifier_name": "Pasi Eronen",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 4533,
    "doc-id": "RFC4253",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": 7.1,
    "orig_text": "[[ A paragraph is missing in this section to clarify implementation\r\n   requirements for the reserved field. This paragraph could suitably\r\n   be inserted after the description of first_kex_packet_follows. ]]",
    "correct_text": "      (reserved field)\r\n         Servers and clients may or may not be aware of a future\r\n         extension to this RFC that specifies a use for this field.\r\n\r\n         Servers and clients that are NOT aware of such an extension:\r\n         - MUST send this field with value zero;\r\n         - MUST NOT act on any value of this field when received,\r\n           whether the received value is zero or non-zero;\r\n         - in key exchange, MUST properly hash the actual received\r\n           value of this field.\r\n\r\n         This behavior is REQUIRED to allow use of this field in\r\n         future protocol extension.\r\n",
    "notes": "RFC 4253 defines the KEXINIT reserved field as follows:\r\n\r\nuint32       0 (reserved for future extension)\r\n\r\nThis has in practice not been sufficient for developers to understand the requirements for sending and handling this field.\r\n\r\nAt least one common implementation will currently fail key exchange if the field is non-zero, because it forgets to decode it, and just assumes it is always zero.\r\n\r\nAt least one other implementation will currently disconnect if the field is non-zero, because it takes the above definition to mean that the field must be zero when received.\r\n\r\nThe above paragraph clarifies the correct treatment of this field. This has been discussed during November 2015 with other implementers on the \"ietf-ssh@netbsd.org\" mailing list. There appears to be consensus that the above is the correct treatment.",
    "submit_date": "2015-11-13",
    "submitter_name": "denis bider",
    "verifier_id": 2,
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 4721,
    "doc-id": "RFC4253",
    "errata_status_code": "Reported",
    "errata_type_code": "Editorial",
    "section": 5.3,
    "orig_text": "   o  The minimum size of a TCP/IP header is 32 bytes.  Thus, the\r\n      increase is actually from 33 to 51 bytes (roughly).\r\n\r\n   o  The minimum size of the data field of an Ethernet packet is 46\r\n      bytes [RFC0894].  Thus, the increase is no more than 5 bytes.\r\n      When Ethernet headers are considered, the increase is less than 10\r\n      percent.",
    "correct_text": "   o  The minimum size of a TCP/IP header is 32 bytes.  Thus, the\r\n      increase is actually from 33 to 60 bytes (roughly).\r\n\r\n   o  The minimum size of the data field of an Ethernet packet is 46\r\n      bytes [RFC0894].  Thus, the increase is no more than 14 bytes.\r\n      When Ethernet headers are considered, the increase is less than 25\r\n      percent.\r\n",
    "notes": "As the minimum size of SSH message is 28, the minimum size of the TCP segment containing SSH message must be 32 + 28 == 60 bytes (as opposed to 32 + 1 in case of transmission of plain text over TCP).",
    "submit_date": "2016-06-27",
    "submitter_name": "Oleg Andriyanov",
    "verifier_id": 99,
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  }
]
