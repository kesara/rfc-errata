[
  {
    "errata_id": 513,
    "doc-id": "RFC2040",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": 8,
    "orig_text": "   This mode handles any length of plaintext and produces ciphertext \r\n   whose length matches the plaintext length.  ",
    "correct_text": "   This mode handles any length of plaintext longer than one\r\n   block and produces ciphertext whose length matches the\r\n   plaintext length.",
    "notes": "",
    "submit_date": "2004-03-22",
    "submitter_name": "Bob Baldwin",
    "verifier_id": 99,
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 514,
    "doc-id": "RFC2040",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": 8,
    "orig_text": "   1. Exclusive-or Pn-1 with the previous ciphertext\r\n      block, Cn-2, to create Xn-1.",
    "correct_text": "   1. Exclusive-or Pn-1 with the previous ciphertext\r\n      block, Cn-2, to create Xn-1.  For short messages where\r\n      Cn-2 does not exist, use IV.",
    "notes": "",
    "submit_date": "2004-03-26",
    "submitter_name": "Bob Baldwin",
    "verifier_id": 99,
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 587,
    "doc-id": "RFC2040",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": 8,
    "orig_text": "6. Decrypt En to create Pn-1.",
    "correct_text": "6. Decrypt En and exclusive-or with Cn-2 to create Pn-1.\r\n   For short messages where Cn-2 does not exist, use the IV.",
    "notes": "",
    "submit_date": "2004-03-22",
    "submitter_name": "Bob Baldwin",
    "verifier_id": 99,
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 6380,
    "doc-id": "RFC2040",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": 11,
    "orig_text": "  The values for the algorithm field are:\r\n\r\n  RC5_CBC  OBJECT IDENTIFIER ::=\r\n    { iso (1) member-body (2) US (840) rsadsi (113549)\r\n      encryptionAlgorithm (3) RC5CBC (8) }\r\n\r\n  RC5_CBC_Pad OBJECT IDENTIFIER ::=\r\n  { iso (1) member-body (2) US (840) rsadsi (113549)\r\n    encryptionAlgorithm (3) RC5CBCPAD (9) }\r\n\r\n   The structure of the parameters field for these algorithms is given\r\n   below.  NOTE: if the iv field is not included, then the\r\n   initialization vector defaults to a block of zeros whose size depends\r\n   on the blockSizeInBits field.\r\n\r\n  RC5_CBC_Parameters ::= SEQUENCE {\r\n    version           INTEGER (v1_0(16)),\r\n    rounds            INTEGER (8..127),\r\n    blockSizeInBits   INTEGER (64, 128),\r\n    iv                OCTET STRING OPTIONAL\r\n  }\r\n",
    "correct_text": "  The values for the algorithm field are:\r\n\r\n  rC5-CBC  OBJECT IDENTIFIER ::=\r\n    { iso (1) member-body (2) us (840) rsadsi (113549)\r\n      encryptionAlgorithm (3) rC5CBC (8) }\r\n\r\n  rC5-CBC-Pad OBJECT IDENTIFIER ::=\r\n  { iso (1) member-body (2) us (840) rsadsi (113549)\r\n    encryptionAlgorithm (3) rC5CBCPAD (9) }\r\n\r\n   The structure of the parameters field for these algorithms is given\r\n   below.  NOTE: if the iv field is not included, then the\r\n   initialization vector defaults to a block of zeros whose size depends\r\n   on the blockSizeInBits field.\r\n\r\n  RC5-CBC-Parameters ::= SEQUENCE {\r\n    version           INTEGER {v1-0(16)},\r\n    rounds            INTEGER (8..127),\r\n    blockSizeInBits   INTEGER (64 | 128),\r\n    iv                OCTET STRING OPTIONAL\r\n  }",
    "notes": "The underscore character cannot be used in the definitions; a hyphen is traditional.\r\n\r\nThe object identifiers need to begin with a lower case letter, and \"us\" is written with both letters lowercase.\r\n\r\nThe constraints on INTEGER values used incorrect syntax.",
    "submit_date": "2021-01-04",
    "submitter_name": "Russ Housley",
    "verifier_id": 159,
    "verifier_name": "Benjamin Kaduk",
    "update_date": "2021-01-11 20:26:22"
  }
]
