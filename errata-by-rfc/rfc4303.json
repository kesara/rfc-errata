[
  {
    "errata_id": 133,
    "doc-id": "RFC4303",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "3.3.4",
    "orig_text": "   NOTE: For IPv6 -- For bump-in-the-stack and bump-in-the-wire\r\n   implementations, it will be necessary to examine all the extension\r\n   headers to determine if there is a fragmentation header and hence\r\n   that the packet needs reassembling prior to IPsec processing.",
    "correct_text": "   NOTE: For IPv6 -- For bump-in-the-stack and bump-in-the-wire\r\n   implementations, it will be necessary to examine all the extension\r\n   headers to determine if there is a fragmentation header, and either\r\n   the More flag or the Fragment Offset is non-zero. If so that packet\r\n   needs reassembling prior to IPsec processing.\r\n",
    "notes": "",
    "submit_date": "2006-01-12",
    "submitter_name": "Vishwas Manral",
    "verifier_id": 99,
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 721,
    "doc-id": "RFC4303",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": 99,
    "orig_text": "(1)\r\n\r\nSection 2.1 of RFC 4303 re-states a lot of material from the\r\nIPsec Architecture document, RFC 4301, without being able to\r\npresent all the details.  SPI selection has become a quite\r\ncomplicated procedure with subtle details, which all can be\r\nfound in RFC 4301.\r\n\r\nIMHO, it would have been very much preferrable to replace most\r\nof the text in section 2.1 by a short referral to RFC 4301.\r\nAny replication of specification entails the danger of\r\ninconsistencies and raises the question of \"truth weight\"\r\nfor the concurring specifications; it is better to avoid\r\nsuch \"races\" from the beginning.\r\n\r\nThis same issue applies to section 2.4 of RFC 2402. (By accident,\r\nI have forgotten to mention it in my comments on that document.)\r\n\r\nMore concretely, I would have preferred the replacement of the\r\nsecond up to the second-to-last paragraph of section 2.1 of RFC 4303,\r\non pages 10/11,\r\n\r\n  For a unicast SA, the SPI can be used by itself to specify an SA, or\r\n  it may be used in conjunction with the IPsec protocol type (in this\r\n  ...\r\n\r\n  ...\r\n  ...\r\n  ...\r\n\r\n  ...\r\n  multicast address, and source address.  An Any-Source Multicast group\r\n  SA requires only an SPI and a destination multicast address as an\r\n  identifier.\r\n\r\nby a short note, e.g.\r\n\r\n  All implementations of ESP MUST support the Security Association\r\n  Database (SAD) as specified in the IPsec Archtecture document\r\n  [Ken-Arch] and the SA lookup procedures for unicast traffic\r\n  specified therein.  ESP implementations SHOULD support extensions\r\n  to the SAD and the SA lookup procedures specified in documents\r\n  amending [Ken-Arch], e.g. for multicast traffic or mobility support,\r\n  if they intend to provide ESP support for such scenarios.\r\n\r\nA similar change would be applicable to RFC 4302, section 2.4,\r\npages 6/7.\r\n\r\n\r\n(2)\r\n\r\nIn section 3.4.3, on the lower half of page 29, RFC 4303 says:\r\n\r\n                                                    [...].  In either\r\n   case, if the integrity check fails, the receiver MUST discard the\r\n   received IP datagram as invalid; this is an auditable event.  The\r\n   audit log entry for this event SHOULD include the SPI value,\r\n   [...]\r\n\r\nBecause the audit log details are in a separate sentence, the logical\r\nhierarchy implied by using one semicolon and one full stop is brocken.\r\nIt would have been better to say:\r\n                                                    [...].  In either\r\n   case, if the integrity check fails, the receiver MUST discard the\r\n|  received IP datagram as invalid.  This is an auditable event.  The\r\n   audit log entry for this event SHOULD include the SPI value,\r\n   [...]\r\n\r\nSimilar punctuation already is used in many places of the RFC.\r\n\r\n\r\n(3)\r\n\r\nAs mentioned in section 7, section 3.4 has been reorganized from\r\nRFC 2406.\r\nDuring that process, the perhaps most important part of ESP inbound\r\npacket processing has disappeared from the section headlines:\r\ndecryption !\r\n\r\nTo cover what's inside, and to make that locatable in the ToC,\r\nperhaps the section headline,\r\n\r\n 3.4.4.  Integrity Check Value Verification\r\n\r\non page 30, and in the ToC, should be modified to read:\r\n\r\n 3.4.4.  Integrity Check Value Verification and Payload Decryption\r\n\r\nI would like to recommend that you submit an RFC Errata Note to\r\ncatch this issue.\r\n\r\n\r\n(4)\r\n\r\nIn section 3.4.4.2, the same issue as (2) above also applies to\r\nthe item numbered \"2.\" on page 32.\r\n\r\n\r\n(5)  References\r\n\r\nRFC 4306 repeatedly refers to its predecessor, RFC 2406, but it omits\r\ngiving a formal (Informative) Reference to that document in Section\r\n10.2 on page 37.\r\n\r\nPerhaps it would also have been worth noting that a *full* version\r\nof the research paper [Kra01] can be found on IACR ePrint, document\r\n2001/040.\r\n\r\n\r\n(6)  Appendix A\r\n\r\nAs mentioned in my comments on RFC 4302, this appendix is the more\r\ncomplete and hence preferrable text compared to App. B of RFC 4302.\r\nThere is one exception:\r\nThe formatting of tha last part of A2.1 ia less pleasant.\r\nTo enhance readability, it is always preferrable not to break\r\nsimple expressions apart by line breaks, whenever possible.  In\r\nthis case, simple relational expressions are broken into 2 lines.\r\n\r\nRFC 4303, on page 40, says:\r\n\r\n   In checking for replayed packets,\r\n\r\n      + Under Case A: If Seql >= Bl (where Bl = Tl - W + 1) AND Seql <=\r\n        Tl, then check the corresponding bit in the window to see if\r\n        this Seql has already been seen.  If yes, reject the packet.  If\r\n        no, perform integrity check (see Appendix A2.2. below for\r\n        determination of Seqh).\r\n\r\n      + Under Case B: If Seql >= Bl (where Bl = Tl - W + 1) OR Seql <=\r\n        Tl, then check the corresponding bit in the window to see if\r\n        this Seql has already been seen.  If yes, reject the packet.  If\r\n        no, perform integrity check (see Appendix A2.2. below for\r\n        determination of Seqh).\r\n\r\nThe formatting in RFC 4302 of the same text (with the already\r\nmentioned typo there corrected, and the Appendix name adapted),\r\nis better:\r\n\r\n   In checking for replayed packets,\r\n\r\n      + Under Case A: If Seql >= Bl (where Bl = Tl - W + 1) AND\r\n        Seql <= Tl, then check the corresponding bit in the window to\r\n        see if this Seql has already been seen.  If yes, reject the\r\n        packet.  If no, perform integrity check (see Appendix A2.2\r\n        below for determination of Seqh).\r\n\r\n      + Under Case B: If Seql >= Bl (where Bl = Tl - W + 1) OR\r\n        Seql <= Tl, then check the corresponding bit in the window to\r\n        see if this Seql has already been seen.  If yes, reject the\r\n        packet.  If no, perform integrity check (see Appendix A2.2\r\n        below for determination of Seqh).\r\n\r\nBut I would even have preferred this formatting:\r\n\r\n   In checking for replayed packets,\r\n\r\n      + Under Case A:\r\n        If Seql >= Bl (where Bl = Tl - W + 1) AND Seql <= Tl,\r\n        then check the corresponding bit in the window to see if this\r\n        Seql has already been seen.  If yes, reject the packet.\r\n        If no, perform integrity check (see Appendix A2.2 below for\r\n        determination of Seqh).\r\n\r\n      + Under Case B:\r\n        If Seql >= Bl (where Bl = Tl - W + 1) OR Seql <= Tl,\r\n        then check the corresponding bit in the window to see if this\r\n        Seql has already been seen.  If yes, reject the packet.\r\n        If no, perform integrity check (see Appendix A2.2 below for\r\n        determination of Seqh).",
    "correct_text": "[see above]",
    "notes": "from pending",
    "submit_date": "2006-03-01",
    "submitter_name": "Alfred Hoenes",
    "verifier_id": 111,
    "verifier_name": "Pasi Eronen",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 859,
    "doc-id": "RFC4303",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": 99,
    "orig_text": "The 'version numbering' issue (as reported as item (6) for RFC 4302)\r\n\r\nI would have appreciated the introduction of an explicit version\r\nnumbering for ESP, e.g. rename:\r\n      ESP as per RFC 1827  to  ESPv1,\r\n      ESP as per RFC 2406  to  ESPv2  or  ESPv2.0,   and\r\n      ESP as per RFC 4303  to  ESPv3  or  ESPv2.1\r\n(or similar).\r\n\r\nThis would make it easier to specify / identify versions and/or\r\nversion specific behaviour in implementations, without having\r\nto refer to the RFC numbers explicitely. (Similar numbering has\r\nproven very useful with protocols like BGP, SNMP, IMAP, POP, etc.)",
    "correct_text": "",
    "notes": "from pending",
    "submit_date": "2006-03-01",
    "submitter_name": "Alfred Hoenes",
    "verifier_id": 111,
    "verifier_name": "Pasi Eronen",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 1654,
    "doc-id": "RFC4303",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "3.4.4.1",
    "orig_text": "Implementation Note:\r\n\r\n            Implementations can use any set of steps that results in the\r\n            same result as the following set of steps.  Begin by\r\n            removing and saving the ICV field.  Next check the overall\r\n            length of the ESP packet minus the ICV field.  If implicit\r\n            padding is required, based on the block size of the\r\n            integrity algorithm, append zero-filled bytes to the end of\r\n            the ESP packet directly after the Next Header field, or\r\n            after the high-order 32 bits of the sequence number if ESN\r\n            is selected.  Perform the ICV computation and compare the\r\n            result with the saved value, using the comparison rules\r\n            defined by the algorithm specification.\r\n",
    "correct_text": "Implementation Note:\r\n\r\n            Implementations can use any set of steps that results in the\r\n            same result as the following set of steps.  Begin by\r\n            removing and saving the ICV field.  Next check the overall\r\n            length of the ESP packet minus the ICV field.  If implicit\r\n            padding is required, based on the block size of the\r\n            integrity algorithm, append padding bytes (according integrity \r\n            algorithm specification, see Section 3.3.2.1) to the end of\r\n            the ESP packet directly after the Next Header field, or\r\n            after the high-order 32 bits of the sequence number if ESN\r\n            is selected.  Perform the ICV computation and compare the\r\n            result with the saved value, using the comparison rules\r\n            defined by the algorithm specification.\r\n",
    "notes": "(confirmed by Stephen Kent)",
    "submit_date": "2009-01-16",
    "submitter_name": "Nikolai Malykh",
    "verifier_id": 111,
    "verifier_name": "Pasi Eronen",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 3876,
    "doc-id": "RFC4303",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "Introduction",
    "orig_text": "Using encryption-only for confidentiality is allowed by ESP. However, it\r\nshould be noted that in general, this will provide defense only against\r\npassive attackers.  Using encryption without a strong integrity\r\nmechanism on top of it (either in ESP or separately via AH) may render\r\nthe confidentiality service insecure against some forms of active\r\nattacks [Bel96, Kra01].  Moreover, an underlying integrity service, such\r\nas AH, applied before encryption does not necessarily protect the\r\nencryption-only confidentiality against active attackers [Kra01]. ESP\r\nallows encryption-only SAs because this may offer considerably better\r\nperformance and still provide adequate security, e.g., when higher-layer\r\nauthentication/integrity protection is offered independently. However,\r\nthis standard does not require ESP implementations to offer an\r\nencryption-only service.",
    "correct_text": "Using encryption-only for confidentiality is allowed by ESP.\r\nHowever, it should be noted that in general, this will provide defense\r\nonly against passive attackers.  Using encryption without a strong\r\nintegrity mechanism on top of it (either in ESP or separately via AH)\r\nmay render the confidentiality service insecure against some forms of\r\nactive attacks [Bel96, Kra01, DP07].  Moreover, applying AH\r\nbefore encryption does not protect the encryption-only\r\nconfidentiality against active attackers [DP10]. ESP\r\nallows encryption-only SAs primarily for compatibility with older\r\nimplementations, and because this may offer better performance.\r\nIt is noted (and has been demonstrated, e.g. in [DP07]) that\r\nESP in this mode does not provide adequate security even when\r\nhigher-layer authentication/integrity protection is offered\r\nindependently. This standard does not require ESP implementations to\r\noffer an encryption-only service.\r\n\r\n[DP07] Jean Paul Degabriele and Kenneth G. Paterson, Attacking the\r\nIPsec Standards in Encryption-only Configurations, IACR 2007/125.\r\n\r\n[DP10] Jean Paul Degabriele and Kenneth G. Paterson: On the\r\n(in)security of IPsec in MAC-then-encrypt configurations.\r\nACM Conference on Computer and Communications Security 2010:\r\n493-504. ",
    "notes": "The existing text asserts that ESP in encryption-only mode can in some cases provide \"adequate security\", even though the sense of the paragraph is in general against it. A series of papers published subsequently to the RFC demonstrate that this assertion is incorrect: active attackers can defeat the confidentiality guarantees, and such attacks are practical.",
    "submit_date": "2014-01-31",
    "submitter_name": "Yaron Sheffer",
    "verifier_id": 128,
    "verifier_name": "Stephen Farrell",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 4798,
    "doc-id": "RFC4303",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": 2,
    "orig_text": "         * If tunnel mode is being used, then the IPsec implementation\r\n           can add Traffic Flow Confidentiality (TFC) padding (see\r\n           Section 2.4)  after the Payload Data and before the Padding\r\n           (0-255 bytes) field.",
    "correct_text": "         * If tunnel mode is being used, then the IPsec implementation\r\n           can add Traffic Flow Confidentiality (TFC) padding (see\r\n           Section 2.7)  after the Payload Data and before the Padding\r\n           (0-255 bytes) field.",
    "notes": "Section 2.4 refers to padding for Encryption. It is section 2.7 which refers to Traffic Flow Confidentiality (TFC) Padding",
    "submit_date": "2016-09-09",
    "submitter_name": "Antonios Atlasis",
    "verifier_id": 173,
    "verifier_name": "Paul Wouters",
    "update_date": "2022-04-10 17:00:03"
  },
  {
    "errata_id": 4799,
    "doc-id": "RFC4303",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": 2.6,
    "orig_text": "   To facilitate the rapid generation and discarding of the padding\r\n   traffic in support of traffic flow confidentiality (see Section 2.4),\r\n   the protocol value 59 (which means \"no next header\") MUST be used to\r\n   designate a \"dummy\" packet.",
    "correct_text": "   To facilitate the rapid generation and discarding of the padding\r\n   traffic in support of traffic flow confidentiality (see Section 2.7),\r\n   the protocol value 59 (which means \"no next header\") MUST be used to\r\n   designate a \"dummy\" packet.",
    "notes": "Section 2.4 refers to padding for Encryption. It is section 2.7 which refers to Traffic Flow Confidentiality (TFC) Padding.",
    "submit_date": "2016-09-09",
    "submitter_name": "Antonios Atlasis",
    "verifier_id": 173,
    "verifier_name": "Paul Wouters",
    "update_date": "2022-04-10 17:32:07"
  },
  {
    "errata_id": 6559,
    "doc-id": "RFC4303",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "3.1.1",
    "orig_text": "                  AFTER APPLYING ESP\r\n             -------------------------------------------------\r\n       IPv4  |orig IP hdr  | ESP |     |      |   ESP   | ESP|\r\n             |(any options)| Hdr | TCP | Data | Trailer | ICV|\r\n             -------------------------------------------------",
    "correct_text": "                  AFTER APPLYING ESP\r\n             ----------------------------------------------------\r\n       IPv4  |updated IP hdr  | ESP |     |      |   ESP   | ESP|\r\n             |(any options)   | Hdr | TCP | Data | Trailer | ICV|\r\n             ----------------------------------------------------",
    "notes": "\"orig\" implies that the IP header is left as-is, while in fact the \"protocol\" field and the \"total length\" and the checksum must be updated. There IS appropriate text explaining this in RFC 3948 \"The Total Length, Protocol, and Header Checksum (for IPv4) fields in the IP header are edited to match the resulting IP packet.\" but this text is missing here.\r\n\r\nWe have encountered an implementation that does not update the \"total length\" and the implementer claims that this is mandated by RFC 4303.\r\n\r\nPaul / Tero:\r\n\r\nThis is updating the figure in RFC4303 (ESP) and should use \"updated IP hdr\" instead of \"orig IP header\", as the specification does in fact modify the protocol, total length and checksum fields.\r\n\r\nIn any potential future document update, text should be added that explains which fields are updated similar to what is done in the RFC3948:\r\n\r\n       The Total Length, Protocol, and Header Checksum (for IPv4) fields\r\n       in the IP header are edited to match the resulting IP packet.\r\n\r\nAs ESP is still used the IPsecME WG might want to make a RFC4303bis at some point and this fix should then be included. Perhaps the WG should think about moving it from proposed standard to internet standard at one point.\r\n",
    "submit_date": "2021-04-25",
    "submitter_name": "Yaakov Stein",
    "verifier_id": 173,
    "verifier_name": "Paul Wouters",
    "update_date": "2022-04-10 16:59:04"
  }
]
