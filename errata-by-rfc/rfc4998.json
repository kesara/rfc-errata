[
  {
    "errata_id": "7411",
    "doc-id": "RFC4998",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "5.2.",
    "orig_text": "   4.  Concatenate each h(i) with ha(i) and generate hash values\r\n       h(i)' = H (h(i)+ ha(i)).  For multi-document groups, this is:\r\n       h(i_a)' = H (h(i_a)+ ha(i))\r\n       h(i_b)' = H (h(i_b)+ ha(i)), etc.",
    "correct_text": "   4.  Concatenate each h(i) with ha(i) in binary ascending order and generate hash values\r\n       h(i)' = H (h(i)+ ha(i)).  For multi-document groups, this is:\r\n       h(i_a)' = H (h(i_a)+ ha(i))\r\n       h(i_b)' = H (h(i_b)+ ha(i)), etc.",
    "notes": "In RFC 4998 HashTree-Renewal is specified in an ambiguous manner.\r\n\r\nSkipping sorting before concatenating is a deviation from all other steps in RFC 4998 where hashes are concatenated.\r\n\r\nThis conclusion is supported by RFC 4998 \"Figure 4\" that illustrates the steps above and the explanation that follows. The relevant part is this:\r\n\r\nh2a' = H( binary sorted and concatenated (h2a, ha(2)))\r\n\r\n      ...\r\n\r\nh2c' = H( binary sorted and concatenated (h2c, ha(2)))\r\n\r\nSo the illustration and its explanation clearly states the sorting before concatenation.",
    "submit_date": "2023-03-31",
    "submitter_name": "Florian Fischer",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": null
  }
]
