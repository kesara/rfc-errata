[
  {
    "errata_id": 4476,
    "doc-id": "RFC5080",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "Section 2",
    "orig_text": "Section 2.1.1. page 6:\r\nAny Access-Request packet that performs authorization checks,\r\nincluding Call Check, SHOULD contain a Message-Authenticator\r\nattribute.\r\n\r\nsection 2.2.2 page 11:\r\nHowever, Access-Request packets not containing a Message-\r\nAuthenticator attribute always affect the cache, even though they may\r\nbe trivially forged.  To avoid this issue, server implementations may\r\nbe configured to require the presence of a Message-Authenticator\r\nattribute in Access-Request packets.  Requests not containing a\r\nMessage-Authenticator attribute MAY then be silently discarded.\r\n\r\nClient implementations SHOULD include a Message-Authenticator\r\nattribute in every Access-Request to further help mitigate this\r\nissue.",
    "correct_text": "Section 2.1.1. page 6:\r\nAny Access-Request packet that performs authorization checks,\r\nincluding Call Check, Must contain a Message-Authenticator\r\nattribute.\r\n\r\nsection 2.2.2 page 11:\r\nHowever, Access-Request packets not containing a Message-\r\nAuthenticator attribute always affect the cache, in some case \r\nsuch forgery is not trivial.  To avoid this issue, server \r\nimplementations MUST be configured to require the presence of \r\na Message-Authenticator attribute in Access-Request packets.  \r\nRequests not containing a Message-Authenticator attribute \r\nMAY then be silently discarded.\r\n\r\nClient implementations MUST include a Message-Authenticator\r\nattribute in every Access-Request to further help mitigate this\r\nissue.\r\n",
    "notes": "Message-Authenticator attribute defined in [RFC3579] is mandatory attribute for IEEE802.1x EAP User and optional attribute for other type of users. In RFC5080, the message-authenticator is used as an optional attribute. However in practice, Radius Implementation without Message-Authenticator attribute for Integrity check protection has become serious issue.\r\nThe attacker can take advantage of Access-Request packets not containing a Message-Authenticator attribute to perform authentication successfully. \r\nAlternatively,the attacker can capture the packet and delete message-authenticatorattribute.\r\nIf the server do not check the message-authenticator attribute, the attacker can pass the authentication as well.\n --VERIFIER NOTES-- \n This suggested errata would result in a normative change to the RFC, which requires consensus.  The conversation has been moved to the RADext list to see if an update to the RFC is appropriate or not.",
    "submit_date": "2015-09-17",
    "submitter_name": "Michael Wang",
    "verifier_id": 141,
    "verifier_name": "Kathleen Moriarty",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 4623,
    "doc-id": "RFC5080",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "2.2.1",
    "orig_text": "   For Accounting-Request packets, the default values for MRC, MRD, and\r\n   MRT SHOULD be zero.  These settings will enable a RADIUS client to\r\n   continue sending accounting requests to a RADIUS server until the\r\n   request is acknowledged.  If any of MRC, MRD, or MRT are non-zero,\r\n   then the accounting information could potentially be discarded\r\n   without being recorded.\r\n",
    "correct_text": "   For Accounting-Request packets, the default values for MRC, MRD, and\r\n   MRT SHOULD be zero.  These settings will enable a RADIUS client to\r\n   continue sending accounting requests to a RADIUS server until the\r\n   request is acknowledged.  If any of MRC, MRD, or MRT are non-zero,\r\n   then the accounting information could potentially be discarded\r\n   without being recorded.\r\n\r\n  This retransmission behavior can be modified for Accounting-Request \r\n  packets containing Acct-Status-Type of Interim-Update.  A \r\n  \"retransmission\" MAY include updated statistics, but will otherwise be\r\n  treated as a retransmission of the original packet, with timers as \r\n  described above.  Such an updated packet MUST set Acct-Delay-Time \r\n  (if present) to zero, and Event-Timestamp (if present) to the current\r\n  time.  These changes indicate that the statistics contained in the \r\n  packet are new, and were not previously sent.\r\n\r\n  When the NAS sends periodic Accounting-Request packets containing \r\n  Acct-Status-Type of Interim-Update, the NAS SHOULD NOT continue to\r\n  retransmit an old Accounting-Request packet when it is time to send a\r\n  new one.  The old packet SHOULD be discarded, and the new one sent\r\n  in its place.\r\n\r\n  The alternative is for a NAS to send a new Accounting-Request\r\n  packet while it still is trying to send an old one.  This situation\r\n  could lead to the NAS sending multiple Accounting-Request packets\r\n  simultaneously for the same session, leading to congestive collapse\r\n  of the network.\r\n",
    "notes": "- if we're retransmitting an Accounting-Request packet, it should be acceptable\r\n to update the statistics in it.\r\n\r\n- i.e. there should not be a requirement that the content remain the same.  The \r\nAcct-Delay-Time attribute is changing, so why not other things, too?\r\n\r\n- And MRT of zero for Accounting-Request packet SHOULD NOT mean that the \r\nNAS starts a new retransmission timer every 5 minutes.\r\n\r\n- e.g. if the server is down for 20 minutes, the NAS should have *one* \r\nAccounting-Status packet in it's retransmit queue.  Not 4.",
    "submit_date": "2016-02-22",
    "submitter_name": "Alan DeKok",
    "verifier_id": 132,
    "verifier_name": "Benoit Claise",
    "update_date": "2019-09-10 09:09:03"
  }
]
