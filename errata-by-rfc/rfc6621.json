[
  {
    "errata_id": 3499,
    "doc-id": "RFC6621",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "B.4.",
    "orig_text": "  1.  Initialize the set \"MPR\" to empty.\r\n\r\n   2.  Initialize the set \"N1\" to include all 1-hop neighbors of \"n0\".\r\n\r\n   3.  Initialize the set \"N2\" to include all 2-hop neighbors, excluding\r\n       \"n0\" and any routers in \"N1\".  Nodes that are only reachable via\r\n       \"N1\" routers with router priority values of NEVER are also\r\n       excluded.\r\n\r\n   4.  For each interface \"y\" in \"N1\", initialize a set \"N2(y)\" to\r\n       include any interfaces in \"N2\" that are 1-hop neighbors of \"y\".\r\n\r\n   5.  For each interface \"x\" in \"N1\" with a router priority value of\r\n       \"ALWAYS\" (or using the CF relay algorithm), select \"x\" as an MPR:\r\n\r\n       A.  Add \"x\" to the set \"MPR\" and remove \"x\" from \"N1\".\r\n\r\n       B.  For each interface \"z\" in \"N2(x)\", remove \"z\" from \"N2\".\r\n\r\n       C.  For each interface \"y\" in \"N1\", remove any interfaces in\r\n           \"N2(x)\" from \"N2(y)\".\r\n\r\n   6.  For each interface \"z\" in \"N2\", initialize the set \"N1(z)\" to\r\n       include any interfaces in \"N1\" that are 1-hop neighbors of \"z\".\r\n\r\n   7.  For each interface \"x\" in \"N2\" where \"N1(x)\" has only one member,\r\n       select \"x\" as an MPR:\r\n\r\n       A.  Add \"x\" to the set \"MPR\" and remove \"x\" from \"N1\".\r\n\r\n       B.  For each interface \"z\" in \"N2(x)\", remove \"z\" from \"N2\" and\r\n           delete \"N1(z)\".\r\n\r\n       C.  For each interface \"y\" in \"N1\", remove any interfaces in\r\n           \"N2(x)\" from \"N2(y)\".\r\n\r\n   8.  While \"N2\" is not empty, select the interface \"x\" in \"N1\" with\r\n       the largest router priority that has the number of members in\r\n       \"N_2(x)\" as an MPR:\r\n\r\n       A.  Add \"x\" to the set \"MPR\" and remove \"x\" from \"N1\".\r\n\r\n       B.  For each interface \"z\" in \"N2(x)\", remove \"z\" from \"N2\".\r\n\r\n       C.  For each interface \"y\" in \"N1\", remove any interfaces in\r\n           \"N2(x)\" from \"N2(y)\".\r\n\r\n\r\n\r\n",
    "correct_text": "  1.  Initialize the set \"MPR\" to empty.\r\n\r\n   2.  Initialize the set \"N1\" to include all 1-hop neighbors of \"n0\".\r\n\r\n   3.  Initialize the set \"N2\" to include all 2-hop neighbors, excluding\r\n       \"n0\" and any routers in \"N1\".  Nodes that are only reachable via\r\n       \"N1\" routers with router priority values of NEVER are also\r\n       excluded.\r\n\r\n   4.  For each interface \"y\" in \"N1\", initialize a set \"N2(y)\" to\r\n       include any interfaces in \"N2\" that are 1-hop neighbors of \"y\".\r\n\r\n   5.  For each interface \"x\" in \"N1\" with a router priority value of\r\n       \"ALWAYS\" (or using the CF relay algorithm), select \"x\" as an MPR:\r\n\r\n       A.  Add \"x\" to the set \"MPR\" and remove \"x\" from \"N1\".\r\n\r\n       B.  For each interface \"z\" in \"N2(x)\", remove \"z\" from \"N2\".\r\n\r\n       C.  For each interface \"y\" in \"N1\", remove any interfaces in\r\n           \"N2(x)\" from \"N2(y)\".\r\n\r\n   6.  For each interface \"z\" in \"N2\", initialize the set \"N1(z)\" to\r\n       include any interfaces in \"N1\" that are 1-hop neighbors of \"z\".\r\n\r\n   7.  For each interface \"w\" in \"N2\" where \"N1(w)\" has only one member, \"x\",\r\n       select \"x\" as an MPR:\r\n\r\n       A.  Add \"x\" to the set \"MPR\" and remove \"x\" from \"N1\".\r\n\r\n       B.  For each interface \"z\" in \"N2(x)\", remove \"z\" from \"N2\".\r\n\r\n       C.  For each interface \"y\" in \"N1\", remove any interfaces in\r\n           \"N2(x)\" from \"N2(y)\".\r\n\r\n   8.  While \"N2\" is not empty, select the interface \"x\" in \"N1\" with\r\n       the highest router priority [break ties in favor of the node with the \r\n       largest number of members in \"N_2(x)\"] as an MPR:\r\n\r\n       A.  Add \"x\" to the set \"MPR\" and remove \"x\" from \"N1\".\r\n\r\n       B.  For each interface \"z\" in \"N2(x)\", remove \"z\" from \"N2\".\r\n\r\n       C.  For each interface \"y\" in \"N1\", remove any interfaces in\r\n           \"N2(x)\" from \"N2(y)\".\r\n\r\n\r\n\r\n",
    "notes": "There are three changes:\r\n\r\nOn line 7, the first and second occurrences of x are replaced by w, and then x is given as the name of the sole member of N1(w).\r\n\r\nOn line 7B, the phrase 'delete \"N1(z)\" is dropped to be consistent with the rest of the algorithm.\r\n\r\nOn line 8 some rewording is done for clarification.\r\n\r\nThis errata prepared in consultation with Justin Dean and Gus Macker.",
    "submit_date": "2013-02-26",
    "submitter_name": "Errol Lloyd",
    "verifier_id": 119,
    "verifier_name": "Adrian Farrel",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 3640,
    "doc-id": "RFC6621",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "A.4",
    "orig_text": "  4.  If \"RtrPri(n0)\" is greater than that of all tuples in the union\r\n      of \"N1\" and \"N2\", then \"n0\" selects itself as a relay, and no\r\n      further steps are taken.",
    "correct_text": "  4.  If \"RtrPri(n0)\" is greater than that of all tuples in\r\n      \"N1\", then \"n0\" selects itself as a relay, and no\r\n      further steps are taken.",
    "notes": "The initial verbal description of the E-CDS algorithm in first paragraph A.1 pg 40 is correct..as follows\r\n\r\n  1.  If an SMF router has a higher ordinal (Router Priority, Router\r\n      ID) than all of its symmetric neighbors, it elects itself to act\r\n      as a forwarder for all received multicast packets.\r\n\r\nBut LATER in A.4 pseudocode Step 4 contains a bug. N2 (2 hop neighbors are included in this step).  This pseudocode bug can cause incorrect behavior to occur.",
    "submit_date": "2013-06-06",
    "submitter_name": "Joseph Macker",
    "verifier_id": 119,
    "verifier_name": "Adrian Farrel",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 4098,
    "doc-id": "RFC6621",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": "Appendix B",
    "orig_text": "This distributed relay set selection technique has been shown to \r\napproximate a minimal connected dominating set (MCDS) in [JLMV02].",
    "correct_text": "This distributed relay set selection technique has been shown to \r\napproximate a minimum connected dominating set (MCDS) in [JLMV02].",
    "notes": "Minimum connected dominating set [1] is the established terminology and \r\nminimal was an editorial error.\r\n\r\n[1] Sampathkumar, E.; Walikar, HB (1979), \r\n\"The connected domination number of a graph\", J. Math. Phys. Sci 13 (6): 607â€“613.",
    "submit_date": "2014-09-04",
    "submitter_name": "Joe Macker",
    "verifier_id": 119,
    "verifier_name": "Adrian Farrel",
    "update_date": "2019-09-10 09:09:03"
  }
]
