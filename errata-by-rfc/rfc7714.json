[
  {
    "errata_id": "4938",
    "doc-id": "RFC7714",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "11",
    "orig_text": "A Key Derivation Function (KDF) is used to derive all of the required\r\nencryption and authentication keys from a secret value shared by the\r\nendpoints.  The AEAD_AES_128_GCM algorithm MUST use the (128-bit)\r\nAES_CM PRF KDF described in [RFC3711].  AEAD_AES_256_GCM MUST use the\r\nAES_256_CM_PRF KDF described in [RFC6188].",
    "correct_text": "A Key Derivation Function (KDF) is used to derive all of the required\r\nencryption and authentication keys from a secret value shared by the\r\nendpoints.  The AEAD_AES_128_GCM algorithm MUST use the (128-bit)\r\nAES_CM PRF KDF described in [RFC3711].  AEAD_AES_256_GCM MUST use the\r\nAES_256_CM_PRF KDF described in [RFC6188].  Since the KDF functions in\r\nthose RFCs assume as input a 112-bit master salt, the 96-bit master\r\nsalt specified in this document must be multiplied by 2^16 to form the\r\n112-bit salt used as the master salt in those key derivation functions.",
    "notes": "The salt specified in RFC 7714 is 96 bits in length, but intended for use in KDF functions defined in RFC 3711.  This led to different interpretations when implementing this RFC.  A more complete description was presented on the avtcore mailing list (https://mailarchive.ietf.org/arch/msg/avt/IRfLuNKglD3qhqwSz3v3t0CG6fA) and, after some dialog, there seemed to be agreement to adopt the approach most widely implemented (https://mailarchive.ietf.org/arch/msg/avt/-C1cIWQXpyzS2KfBjGR6B2kK92w).  This suggested text is intended to reflect that agreement.  In effect, 16 zero bits are padded to the right of the salt value  defined in RFC 7714 (creating a 112 bit salt value) before it is used as described in the KDF functions defined in RFC 3711 that require a 112 bit salt value.",
    "submit_date": "2017-02-16",
    "submitter_name": "Paul E. Jones",
    "verifier_id": "164",
    "verifier_name": "Murray Kucherawy",
    "update_date": "2023-11-08 00:41:29"
  }
]
