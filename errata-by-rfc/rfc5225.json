[
  {
    "errata_id": "1421",
    "doc-id": "RFC5225",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "6.6.6, p.28",
    "orig_text": "|  The inferred_ip_v4_length encoding method compresses the IPv4 header\r\n|  checksum down to a size of zero bits, i.e., no bits are transmitted\r\n   in compressed headers for this field.  [...]",
    "correct_text": "|  The inferred_ip_v4_length encoding method compresses the IPv4 Total\r\n|  Length field down to a size of zero bits, i.e., no bits are\r\n   transmitted in compressed headers for this field.  [...]",
    "notes": "Apparently, a copyedit flaw (text copied from 6.6.4 insufficiently\r\nmodified).",
    "submit_date": "2008-05-13",
    "submitter_name": "Alfred Hoenes",
    "verifier_id": "114",
    "verifier_name": "Magnus Westerlund",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "2703",
    "doc-id": "RFC5225",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "6.6.11",
    "orig_text": "o  ip_id_behavior, one octet for each IP header in the compressible\r\n   header chain starting from the outermost header.  Each octet\r\n   consists of 2 bits padded with 6 MSBs of zeroes.",
    "correct_text": "o  ip_id_behavior_outer, one octet for each IPv4 header except the\r\n   innermost in the compressible header chain starting from the outermost \r\n   header. Each octet consists of 2 bits padded with 6 MSBs of zeroes.\r\n\r\no  ip_id_behavior_innermost, one octet if the innermost header is an \r\n   IPv4 header. The octet consists of 2 bits padded with 6 MSBs of zeroes.",
    "notes": "There is no control field called ip_id_behavior in the document. There are two control fields related to IP-ID behavior, ip_id_behavior_innermost and ip_id_behavior_outer. For IPv6, only the ip_id_behavior_innermost field exists and its value is always IP_ID_BEHAVIOR_RANDOM according to the FN. This makes it impossible to include ip_id_behavior_outer when calculating the crc for IPv6 headers. Furthermore, since the ip_id_behavior_innermost is constant it makes no sense to include it in the crc calculation.\r\n\r\nThis errata has been verified based on discussion on the ROHC mailing list involving the authors in February, 2011.",
    "submit_date": "2011-02-03",
    "submitter_name": "Carl Knutsson",
    "verifier_id": "129",
    "verifier_name": "Wesley Eddy",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "3185",
    "doc-id": "RFC5225",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "page 64",
    "orig_text": "rtp(profile_value, ts_stride_value, time_stride_value,\r\n    reorder_ratio_value)\r\n{\r\n  UNCOMPRESSED {\r\n    ENFORCE((profile_value == PROFILE_RTP_0101) ||\r\n            (profile_value == PROFILE_RTP_0107));\r\n    rtp_version =:= uncompressed_value(2, 0) [  2 ];\r\n",
    "correct_text": "rtp(profile_value, ts_stride_value, time_stride_value,\r\n    reorder_ratio_value)\r\n{\r\n  UNCOMPRESSED {\r\n    ENFORCE((profile_value == PROFILE_RTP_0101) ||\r\n            (profile_value == PROFILE_RTP_0107));\r\n    rtp_version =:= uncompressed_value(2, 2) [  2 ];\r\n",
    "notes": "rtp_version is set to 2, not to zero.\r\n\r\nSee RTP Header Fields page 115 :\r\n\r\nVersion\r\n\r\n      This field is expected to have the value two and the field is\r\n      therefore classified as STATIC-KNOWN.",
    "submit_date": "2012-04-11",
    "submitter_name": "FWX",
    "verifier_id": "129",
    "verifier_name": "Wes Eddy",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "3248",
    "doc-id": "RFC5225",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "6.8.2.4",
    "orig_text": "page 67:\r\n\r\n  COMPRESSED udp_lite_endpoint_dynamic {\r\n    ENFORCE(profile_value == PROFILE_UDPLITE_0108);\r\n    reserved =:= compressed_value(4, 0)                      [  4 ];\r\n    coverage_behavior =:= irregular(2)                       [  2 ];\r\n    reorder_ratio     =:= irregular(2)                       [  2 ];\r\n    checksum_coverage =:=\r\n      checksum_coverage_dynchain(coverage_behavior.UVALUE)   [ 16 ];\r\n    checksum          =:= irregular(16)                      [ 16 ];\r\n    msn               =:= irregular(16)                      [ 16 ];\r\n  }\r\n\r\npage 68:\r\n\r\n  COMPRESSED udp_lite_regular_dynamic {\r\n    ENFORCE(profile_value == PROFILE_RTP_0107);\r\n    coverage_behavior =:= irregular(2)                       [  2 ];\r\n    reserved =:= compressed_value(6, 0)                      [  6 ];\r\n    checksum_coverage =:=\r\n        checksum_coverage_dynchain(coverage_behavior.UVALUE) [ 16 ];\r\n    checksum =:= irregular(16)                               [ 16 ];\r\n  }\r\n",
    "correct_text": "page 67:\r\n\r\n  COMPRESSED udp_lite_endpoint_dynamic {\r\n    ENFORCE(profile_value == PROFILE_UDPLITE_0108);\r\n    reserved =:= compressed_value(4, 0)                      [  4 ];\r\n    coverage_behavior =:= irregular(2)                       [  2 ];\r\n    reorder_ratio     =:= irregular(2)                       [  2 ];\r\n    checksum_coverage =:=\r\n      checksum_coverage_dynchain(coverage_behavior.UVALUE)   [ 0, 16 ];  <===\r\n    checksum          =:= irregular(16)                      [ 16 ];\r\n    msn               =:= irregular(16)                      [ 16 ];\r\n  }\r\n\r\npage 68:\r\n\r\n  COMPRESSED udp_lite_regular_dynamic {\r\n    ENFORCE(profile_value == PROFILE_RTP_0107);\r\n    coverage_behavior =:= irregular(2)                       [  2 ];\r\n    reserved =:= compressed_value(6, 0)                      [  6 ];\r\n    checksum_coverage =:=\r\n        checksum_coverage_dynchain(coverage_behavior.UVALUE) [ 0, 16 ];  <====\r\n    checksum =:= irregular(16)                               [ 16 ];\r\n  }\r\n",
    "notes": "checksum_coverage_dynchain(behavior) compression method (page 66) may compress the checksum_coverage field to 0 bits if behavior is set to UDP_LITE_COVERAGE_INFERRED.",
    "submit_date": "2012-06-07",
    "submitter_name": "FWX",
    "verifier_id": "129",
    "verifier_name": "Wesley Eddy",
    "update_date": "2019-09-10 09:09:03"
  }
]
