[
  {
    "errata_id": 3059,
    "doc-id": "RFC6145",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": 5.1,
    "orig_text": "<Removed from RFC 2765 where it had existed after Destination Address \r\nfield description> ",
    "correct_text": "   If any of an IPv6 Hop-by-Hop Options header, Destination Options \r\n   header, or Routing header with the Segments Left field equal to zero \r\n   are present in the IPv6 packet, those IPv6 extension headers MUST be \r\n   ignored (i.e., there is no attempt to translate the extension headers) \r\n   and the packet translated normally.  However, the Total Length field \r\n   and the Protocol field are adjusted to \"skip\" these extension headers.",
    "notes": "Since the extension headers shall be removed from the packet while translating to IPv4 the translator should deduct from IPv4 Total Length the length of all the extension headers present in the original IPv6 packet except ESP header (in transport mode). AH is not supposed to be translated. RFC 2765 had explicitly stated this and RFC 6145 also should continue to have this stated. Copied the correction text from RFC 2765.\r\n\r\n\r\nA BEHAVE WG chair said on 1/19/2012:\r\n  I believe the filer is correct.  Although the intent might be clear from Section 4:\r\n  \" As with [RFC2765], the translating function specified in this\r\n     document does not translate any IPv4 options, and it does not\r\n     translate IPv6 extension headers except the Fragment Header.\"\r\n\r\n  Although the Length portion of the omitted paragraph is actually covered by\r\n  errata ID 3060 above (and we don't need 2 technical errata for the same thing)\r\n  the omitted paragraph does contain a statement about how to fill in the \r\n  Protocol field when IPv6 extension headers were present, which is nowhere \r\n  else in the doc and might not be obvious to an implementer from the \r\n  section 4 text.\r\n",
    "submit_date": "2011-12-23",
    "submitter_name": "Gandhar Gokhale",
    "verifier_id": 2,
    "verifier_name": "Wesley Eddy",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 3060,
    "doc-id": "RFC6145",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "5.1.1",
    "orig_text": "   Total Length:  Payload length value from IPv6 header, minus 8 for the\r\n      Fragment Header, plus the size of the IPv4 header.",
    "correct_text": "   Total Length: If the Next Header field of the Fragment Header is not \r\n      an extension header (except ESP) then Total Length MUST be set to \r\n      Payload Length value from IPv6 header, minus length of extension \r\n      headers up to Fragmentation Header, minus 8 for the Fragment \r\n      Header, plus the size of the IPv4 header. If the Next Header \r\n      field of the Fragment Header is an extension header (except ESP) \r\n      then the packet SHOULD be dropped and logged.\r\n",
    "notes": "If the fragmentable part (as described in RFC 2460) of the original unfragmented IPv6 packet had extension headers then the translator can not calculate the total length of the IPv4 fragment for non-initial fragments. In case of initial fragment also, only if all the extension headers of the fragmentable part are contained within the initial fragment itself then translator can know of how much length to deduct from the total length.\r\n\r\n\r\nA BEHAVE WG chair said on 1/19/2012:\r\n  I believe the filer is correct.  The RFC does not contain the right statement with\r\n  respect to handling of IPv6 extension headers.   It says they're skipped when \r\n  filling in the payload but it doesn't say they're skipped when filling in the\r\n  length field.\r\n",
    "submit_date": "2011-12-23",
    "submitter_name": "Gandhar Gokhale",
    "verifier_id": 2,
    "verifier_name": "Wesley Eddy",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 3061,
    "doc-id": "RFC6145",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "5.1.1",
    "orig_text": "   Fragment Offset:  Copied from the Fragment Offset field of the IPv6\r\n      Fragment Header.",
    "correct_text": "   Fragment Offset:  If the Next Header field of the Fragment Header is \r\n      not an extension header (except ESP) then Fragment Offset MUST be \r\n      copied from the Fragment Offset field of the IPv6 Fragment Header. \r\n      If the Next Header field of the Fragment Header is an extension \r\n      header (except ESP) then the packet SHOULD be dropped and logged.",
    "notes": "If the fragmentable part (as described in RFC 2460) of the original unfragmented IPv6 packet had extension headers then the translator can not calculate the offset of the IPv4 fragment for non-initial fragments. If extension headers are present in the fragmentable part then the fragment offset value of the IPv6 header includes length of the extension headers also. Since translator strips of the IPv6 extension headers the fragment offset value set by the sender of IPv6 fragments can not match that received by the IPv4 receiver and the reassembly will fail. For non-initial fragments the translator does not have the knowledge of this delta when there is no state maintained.\r\n\r\nThe legth issue stated in erratum 2 is not in itself sufficient to advocate packet drop. However, the offset issue is sufficient to advocate packet drop as the reassembly is bound to fail. Therefore I'm putting a SHOULD in both cases.",
    "submit_date": "2011-12-23",
    "submitter_name": "Gandhar Gokhale",
    "verifier_id": 2,
    "verifier_name": "Wesley Eddy",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 4090,
    "doc-id": "RFC6145",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": 6,
    "orig_text": "   1.  In the IPv4-to-IPv6 direction: if the MTU value of ICMPv4 Packet\r\n       Too Big (PTB) messages is less than 1280, change it to 1280.\r\n       This is intended to cause the IPv6 host and IPv6 firewall to\r\n       process the ICMP PTB message and generate subsequent packets to\r\n       this destination with an IPv6 Fragment Header.",
    "correct_text": "   1.  In the IPv4-to-IPv6 direction: if the MTU value of ICMPv4 Packet\r\n       Too Big (PTB) messages is less than 1280, change it to 1280.\r\n       This is intended to cause the IPv6 host and IPv6 firewall to\r\n       process the ICMP PTB message.",
    "notes": "An ICMPv6 PTB message reporting an MTU equal to 1280 does not trigger IPv6 atomic fragments. Only ICMPv6 PTB < 1280 do.\r\n\r\nAD Comment (Magnus Westerlund): As RFC 6145 has been superseeded by  RFC 7915. In that document the above text is gone. So I consider this issue handled and not necessary to determine if it is verified or not. ",
    "submit_date": "2014-08-20",
    "submitter_name": "Fernando Gont",
    "verifier_id": 114,
    "verifier_name": "Magnus Westerlund",
    "update_date": "2020-06-02 07:18:47"
  }
]
