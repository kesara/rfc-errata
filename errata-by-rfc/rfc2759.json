[
  {
    "errata_id": "1924",
    "doc-id": "RFC2759",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "8.3",
    "orig_text": "   NtPasswordHash(\r\n   IN  0-to-256-unicode-char Password,\r\n   OUT 16-octet              PasswordHash )\r\n   {\r\n      /*\r\n       * Use the MD4 algorithm [5] to irreversibly hash Password\r\n       * into PasswordHash.  Only the password is hashed without\r\n       * including any terminating 0.\r\n       */\r\n   }",
    "correct_text": "   NtPasswordHash(\r\n   IN  0-to-256-unicode-char Password,\r\n   OUT 16-octet              PasswordHash )\r\n   {\r\n      /*\r\n       * Use the MD4 algorithm [5] to irreversibly hash Password\r\n       * encoded in UTF-16-LE into PasswordHash.\r\n       * Only the password is hashed without\r\n       * including any terminating 0.\r\n       */\r\n   }",
    "notes": "Section 8.3 is silent on Unicode encoding used for passwords.\r\nSection 9.2 seem to imply that the Unicode encoding used in UTF-16-LE.",
    "submit_date": "2009-10-22",
    "submitter_name": "Alexey Melnikov",
    "verifier_id": "131",
    "verifier_name": "Brian Haberman",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "391",
    "doc-id": "RFC2759",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "9.3",
    "orig_text": "  0-to-256-unicode-char Password:\n  4D 79 50 77\n\n  16-octet PasswordHash:\n  FC 15 6A F7 ED CD 6C 0E DD E3 33 7D 42 7F 4E AC",
    "correct_text": "  0-to-256-char Password:\n  4D 79 50 77\n\n  0-to-256-unicode-char NtPassword:\n  4D 00 79 00 50 00 77 00\n\n  16-octet NtPasswordHash:\n  FC 15 6A F7 ED CD 6C 0E DD E3 33 7D 42 7F 4E AC\n",
    "notes": "",
    "submit_date": "2002-08-26",
    "submitter_name": "Andrew Roughan",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "6429",
    "doc-id": "RFC2759",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "9.1.2.",
    "orig_text": "Authenticator authentication failure\r\n\r\n                         <- Authenticator Challenge\r\n       Peer Response/Challenge ->\r\n                         <- Success/Authenticator Response\r\n\r\n   (Authenticator Response verification fails, peer disconnects)",
    "correct_text": "Authenticator authentication failure\r\n\r\n                         <- Authenticator Challenge\r\n       Peer Response/Challenge ->\r\n                         <- Failure/Authenticator Response\r\n\r\n   (Authenticator Response verification fails, peer disconnects)",
    "notes": "According to section 6. Failure Packet is identical in format to the standard CHAP Failure packet, but there are different codes for success and for failure so in case of failure the returned code must be 4 thus in section 9.1.2. the line \"<- Success/Authenticator Response\"  the response logic should be Failure, not Succsess.\n --VERIFIER NOTES-- \n   The example is when the authenticator fails authenticate itself to the peer (i.e., it is a rogue authenticator). MS-CHAPv2 is doing piggy-backed mutual authentication.",
    "submit_date": "2021-02-14",
    "submitter_name": "Valentin Atanasov",
    "verifier_id": "161",
    "verifier_name": "Eric Vyncke",
    "update_date": "2023-08-03 06:13:03"
  }
]
