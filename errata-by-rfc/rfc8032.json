[
  {
    "errata_id": 5519,
    "doc-id": "RFC8032",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": "5.1.7",
    "orig_text": "Decode the first half as a point R, and the second half as an integer S,\r\nin the range 0 <= s < L.\r\n",
    "correct_text": "Decode the first half as a point R, and the second half as an integer S,\r\nin the range 0 <= S < L.\r\n",
    "notes": "original document expression is ' 0 <= s < L', but it must be '0 <= S < L'. upper/lower case problem.",
    "submit_date": "2018-10-10",
    "submitter_name": "Susumu Endoh",
    "verifier_id": 163,
    "verifier_name": "Colin Perkins",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 5757,
    "doc-id": "RFC8032",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": 0.1,
    "orig_text": "An element (x,y) of E is encoded as a b-bit string called ENC(x,y),\r\n which is the (b-1)-bit encoding of y concatenated with one bit that\r\n is 1 if x is negative and 0 if x is not negative.",
    "correct_text": "An element (x,y) of E is encoded as a b-bit string called ENC(x,y),\r\n which is the (b-1)-bit encoding of y concatenated \r\nwith the least significant bit of x.",
    "notes": "Section 3.1 is not coherent with encodings described for Ed25519 (5.1.2) and Ed448 (5.2.2)\n --VERIFIER NOTES-- \nThe original text was correct (verified by Nick Sullivan).",
    "submit_date": "2019-06-21",
    "submitter_name": "Franck Rondepierre",
    "verifier_id": 168,
    "verifier_name": "Stanislav Smyshlyaev",
    "update_date": "2021-10-25 22:43:13"
  },
  {
    "errata_id": 5758,
    "doc-id": "RFC8032",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "5.1.",
    "orig_text": "                          (p+3)/8      3        (p-5)/8\r\n                 x = (u/v)        = u v  (u v^7)         (mod p)",
    "correct_text": "                          (p+3)/8          (p-5)/8\r\n                 x = (u/v)        = u (u v)         (mod p)",
    "notes": " --VERIFIER NOTES-- \r\nThe original text was correct (verified by Nick Sullivan).\r\n01/28/2022: RFC Editor changed status to Reported per discussion with Stanislav V. Smyshlyaev.",
    "submit_date": "2019-06-21",
    "submitter_name": "Franck Rondepierre",
    "verifier_id": 2,
    "verifier_name": "Stanislav Smyshlyaev",
    "update_date": "2022-01-28 15:09:22"
  },
  {
    "errata_id": 5759,
    "doc-id": "RFC8032",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "5.2.",
    "orig_text": "                          (p+1)/4    3            (p-3)/4\r\n                 x = (u/v)        = u  v (u^5 v^3)         (mod p)",
    "correct_text": "                          (p+1)/4            (p-3)/4\r\n                 x = (u/v)        =  u (u v)         (mod p)",
    "notes": " --VERIFIER NOTES-- \r\nThe original text was correct (verified by Nick Sullivan).\r\n01/28/2022: RFC Editor changed status to Reported per discussion with Stanislav V. Smyshlyaev.",
    "submit_date": "2019-06-21",
    "submitter_name": "Franck Rondepierre",
    "verifier_id": 2,
    "verifier_name": "Stanislav Smyshlyaev",
    "update_date": "2022-01-28 15:10:24"
  },
  {
    "errata_id": 5930,
    "doc-id": "RFC8032",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": 6,
    "orig_text": "def verify(public, msg, signature):\r\n    if len(public) != 32:\r\n        raise Exception(\"Bad public key length\")\r\n    if len(signature) != 64:\r\n        Exception(\"Bad signature length\")",
    "correct_text": "def verify(public, msg, signature):\r\n    if len(public) != 32:\r\n        raise Exception(\"Bad public key length\")\r\n    if len(signature) != 64:\r\n        raise Exception(\"Bad signature length\")",
    "notes": "Missing raise before Exception",
    "submit_date": "2019-12-06",
    "submitter_name": "Daniel Bleichenbacher",
    "verifier_id": 163,
    "verifier_name": "Colin Perkins",
    "update_date": "2021-05-24 04:25:10"
  },
  {
    "errata_id": 5968,
    "doc-id": "RFC8032",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": 3.1,
    "orig_text": "3.1.  Encoding\r\n\r\n   An integer 0 < S < L - 1 is encoded in little-endian form as a b-bit\r\n   string ENC(S).",
    "correct_text": "3.1.  Encoding\r\n\r\n   An integer 0 <= S <= L - 1 is encoded in little-endian form as a b-bit\r\n   string ENC(S).",
    "notes": "The range of the scalar should include the end-points: 0 and L-1.",
    "submit_date": "2020-01-28",
    "submitter_name": "Valeria Nikolaenko",
    "verifier_id": 99,
    "verifier_name": null,
    "update_date": null
  },
  {
    "errata_id": 6306,
    "doc-id": "RFC8032",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "5.1.7",
    "orig_text": "       Decode the first half as a\r\n       point R, and the second half as an integer S, in the range\r\n       0 <= s < L.  Decode the public key A as point A'.  If any of the\r\n       decodings fail (including S being out of range), the signature is\r\n       invalid.\r\n\r\n   2.  Compute SHA512(dom2(F, C) || R || A || PH(M)), and interpret the\r\n       64-octet digest as a little-endian integer k.\r\n\r\n   3.  Check the group equation [8][S]B = [8]R + [8][k]A'.  It's\r\n       sufficient, but not required, to instead check [S]B = R + [k]A'.",
    "correct_text": "       Decode the first half R as a\r\n       point R', and the second half as an integer S, in the range\r\n       0 <= S < L.  Decode the public key A as point A'.  If any of the\r\n       decodings fail (including S being out of range), the signature is\r\n       invalid.\r\n\r\n   2.  Compute SHA512(dom2(F, C) || R || A || PH(M)), and interpret the\r\n       64-octet digest as a little-endian integer k.\r\n\r\n   3.  Check the group equation [8][S]B = [8]R' + [8][k]A'.  It's\r\n       sufficient, but not required, to instead check [S]B = R' + [k]A'.",
    "notes": "1)  public key R' and its encoding R are confused\r\n2)  s changed to S (this errata has been reported already)",
    "submit_date": "2020-10-15",
    "submitter_name": "Dmitry Khovratovich",
    "verifier_id": 99,
    "verifier_name": null,
    "update_date": null
  },
  {
    "errata_id": 6348,
    "doc-id": "RFC8032",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": 3.4,
    "orig_text": "Compute h = H(ENC(R) || ENC(A) || M), and check the group\r\nequation [2^c * S] B = 2^c * R + [2^c * h] A in E.",
    "correct_text": "Compute h = H(ENC(R) || ENC(A) || M), and check the group\r\nequation [2^c * S] B = [2^c] R + [2^c * h] A in E.",
    "notes": "Section 2 uses a separate notation, [n]X, for point multiplication, so this operation should use the brackets.",
    "submit_date": "2020-12-02",
    "submitter_name": "David Benjamin",
    "verifier_id": 99,
    "verifier_name": null,
    "update_date": null
  }
]
