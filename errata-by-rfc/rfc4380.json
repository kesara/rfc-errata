[
  {
    "errata_id": 107,
    "doc-id": "RFC4380",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": 99,
    "orig_text": "(1)  Inconsistency on cryptographic algorithm (MAC) requirements\r\n\r\nWithin section 5.2.2, on the upper half of page 21, RFC 4380 states:\r\n\r\n   To maximize interoperability, this specification defines a default\r\n   algorithm in which the authentication value is computed according the\r\n|  HMAC specification [RFC2104] and the SHA1 function [FIPS-180].\r\n   Clients and servers may agree to use HMAC combined with a different\r\n   function, or to use a different algorithm altogether, such as for\r\n   example AES-XCBC-MAC-96 [RFC3566].\r\n\r\n   The default authentication algorithm is based on the HMAC algorithm\r\n   according to the following specifications:\r\n\r\n|  - the hash function shall be the SHA1 function [FIPS-180].\r\n   - the secret value shall be the shared secret with which the client\r\n     was configured.\r\n\r\nContrary to that, within Section 7.2.1, in the paragraph extending\r\nfrom page 39 to page 40, the same RFC says:\r\n\r\n   If the shared secret contains sufficient entropy, the attacker would\r\n   have to defeat the one-way function used to compute the\r\n   authentication value.  This specification suggests a default\r\n<<page break>>\r\n|  algorithm combining HMAC and MD5.  If the protection afforded by MD5\r\n   was not deemed sufficient, clients and servers can agree to use a\r\n   different algorithm, e.g., SHA1.\r\n\r\nI have been educated repeatedly that Security Considerations in RFCs\r\ncontain normative content when describing protocol behaviour.\r\nTherefore, it should not happen that text in Security Considerations\r\ncontradicts normative content of other sections of an RFC.\r\n\r\nRegarding the well known security issues that make MD5 appear much\r\nweaker than SHA-1, according to contemporary comprehension by the\r\ncryptographic community, the former specification (Section 5.2.2)\r\nseems to be the better choice.\r\nI therefore strongly recommend to publish an Author's Errata Note\r\nfor RFC 4380 correcting Section 7.2.1, replacing the snippit above\r\nby text conforming to the rules specified in Section 5.2.2, e.g.:\r\n\r\n   If the shared secret contains sufficient entropy, the attacker would\r\n   have to defeat the one-way function used to compute the\r\n|  authentication value.  This specification defines a default algorithm\r\n|  combining HMAC and SHA-1.  Clients and servers can agree to use a\r\n|  different message authentication algorithm, e.g. AES-XCBC-MAC-96.\r\n|  See Section 5.2.2 for details.\r\n\r\n\r\n(2)  Incomplete IANA Considerations\r\n\r\nSection 9 of RFC 4380, on page 50, says:\r\n\r\n   This memo documents a request to IANA to allocate a 32-bit Teredo\r\n   IPv6 service prefix, as specified in Section 2.6, and a Teredo IPv4\r\n   multicast address, as specified in Section 2.17.\r\n\r\nIt should say:\r\n\r\n|  On requests documented in this memo, IANA has allocated a 32-bit\r\n|  Teredo IPv6 service prefix, as specified in Section 2.6, a Teredo\r\n|  IPv4 multicast address, as specified in Section 2.17, and a Teredo\r\n|  UDP Port number, as specified in Section 2.7.\r\n\r\nRationale:\r\nAs per publication of the RFC, these assignments *have been* performed\r\nby the IANA; I propose modified wording reflecting this fact.\r\nApparently, an IANA assignment also has been performed on behalf of the\r\nTeredo proposal as documented in Section 2.7; for completeness, this\r\nassignment should be mentioned in the IANA Considerations section as\r\nwell.  This will also serve as an easy-to-find \"pointer\" for readers\r\nlooking for the purpose of the assignment found in the IANA registry.\r\n\r\n\r\n(3)  Various typos\r\n\r\nI have found a couple of apparent typos in RFC 4380.  The sub-items\r\n below are pre-formatted for easy inclusion into an RFC errata note.\r\n\r\n\r\n(3.1) Section 5.2.2, page 21\r\n\r\nThe first paragraph on page 21 contains the sentence:\r\n\r\n                                           [...].  Before transmission,\r\n   the authentication value is computed according to the specified\r\n   algorithm; on reception, the same algorithm is used to compute a\r\n   target value from the content of the receive packet.  [...]\r\n\r\nIt should say:\r\n\r\n                                           [...].  Before transmission,\r\n   the authentication value is computed according to the specified\r\n   algorithm; on reception, the same algorithm is used to compute a\r\n|  target value from the content of the received packet.  [...]\r\n                                               ^\r\n\r\n(3.2) Section 5.2.3, page 23\r\n\r\nThe second paragraph on page 23 [numbered list item 4)] says:\r\n\r\n      [...].  The client SHOULD reply with a unicast Teredo bubble, sent\r\n   to the source IPv4 address and source port of the local discovery\r\n   bubble; the IPv6 source address of the bubble will be set to local\r\n   Teredo IPv6 address; [...]\r\n\r\nIt should say:\r\n\r\n      [...].  The client SHOULD reply with a unicast Teredo bubble, sent\r\n   to the source IPv4 address and source port of the local discovery\r\n|  bubble; the IPv6 source address of the bubble will be set to the local\r\n   Teredo IPv6 address; [...]\r\n                                                                ^^^^\r\n\r\n(3.3) Section 5.2.7, page 27\r\n\r\nThe long paragraph in the middle of page 27 says:\r\n\r\n                                              [...].  If the secondary\r\n   qualification fails, the interval determination procedure will not be\r\n   used, and the interval value will remain to the default value, 30\r\n   seconds.  [...]\r\n\r\nIt should say:\r\n\r\n                                              [...].  If the secondary\r\n   qualification fails, the interval determination procedure will not be\r\n|  used, and the interval value will remain at the default value, 30\r\n   seconds.  [...]\r\n                                           ^^^^\r\n\r\n(3.4) Section 5.2.9, page 30\r\n\r\nThe last paragraph of Section 5.2.9 says:\r\n\r\n            [...]  The nonce value and the date at which the packet was\r\n   sent will be documented in a provisional peer entry for the IPV6\r\n   destination.  The ICMPv6 packet will then be sent [...]\r\n\r\nIt should say:\r\n\r\n            [...]  The nonce value and the date at which the packet was\r\n|  sent will be documented in a provisional peer entry for the IPv6\r\n   destination.  The ICMPv6 packet will then be sent [...]\r\n                                                               ^^^^\r\n\r\n(3.5) Section 7.2, page 39\r\n\r\nThe last sentence of Section 7.2 says:\r\n\r\n      [...]  The attacker may have one of two objectives: it may try to\r\n   deny service to the Teredo client by providing it with an address\r\n   that is in fact unreachable, or it may try to insert itself as a\r\n   relay for all client communications, effectively enabling a variety\r\n   of \"man-in-the-middle\" attack.\r\n\r\nIt should say:\r\n\r\n      [...]  The attacker may have one of two objectives: it may try to\r\n   deny service to the Teredo client by providing it with an address\r\n   that is in fact unreachable, or it may try to insert itself as a\r\n   relay for all client communications, effectively enabling a variety\r\n|  of \"man-in-the-middle\" attacks.\r\n                                ^\r\n\r\n\r\n(4)  Formatting issue\r\n\r\nRFC 4380 contains a striking number of spurious blank lines inserted\r\nin the middle of running text, interrupting proper paragraph formating.\r\n\r\nBrowsing through RFC 4380, I have found such spurious blank lines on\r\npages 23, 30, 33, 35, 41, 44, and 46.",
    "correct_text": "",
    "notes": "from pending",
    "submit_date": "2006-03-16",
    "submitter_name": "Alfred Hoenes",
    "verifier_id": 129,
    "verifier_name": "Wes Eddy",
    "update_date": "2019-09-10 09:09:03"
  }
]
