[
  {
    "errata_id": 1543,
    "doc-id": "RFC5321",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": 3.8,
    "orig_text": "   SMTP clients that experience a connection close, reset, or other\r\n   communications failure due to circumstances not under their control\r\n   (in violation of the intent of this specification but sometimes\r\n   unavoidable) SHOULD, to maintain the robustness of the mail system,\r\n   treat the mail transaction as if a 451 response had been received and\r\n   act accordingly.",
    "correct_text": "   SMTP clients that experience a connection close, reset, or other\r\n   communications failure due to circumstances not under their control\r\n   (in violation of the intent of this specification but sometimes\r\n   unavoidable) SHOULD, to maintain the robustness of the mail system,\r\n   treat the mail transaction as if a 421 response had been received and\r\n   act accordingly.",
    "notes": "SMTP clients are told to act as though a 451 response (\"Requested action aborted: local error in processing\") had been received when context clearly indicates that a 421 response (\"Service not available, closing transmission channel\") was intended.",
    "submit_date": "2008-10-08",
    "submitter_name": "Brett Watson",
    "verifier_id": 127,
    "verifier_name": "Pete Resnick",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 1683,
    "doc-id": "RFC5321",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": 4.4,
    "orig_text": "Additional-Registered-Clauses  = CFWS Atom FWS String",
    "correct_text": "Additional-Registered-Clauses  = 1*(CFWS Atom FWS String)",
    "notes": "1. The rule Additional-Registered-Clauses is used by the rule Opt-info (also in section 4.4, page 59) as:\r\n\r\nOpt-info       = [Via] [With] [ID] [For] [Additional-Registered-Clauses]\r\n\r\n2. The ABNF comment for Additional-Registered-Clauses states that \"Additional standard clauses may be added in this location by future standards and registration with IANA.\"\r\n\r\n3. Each sequence (CFWS Atom FWS String) represents a single clause.",
    "submit_date": "2009-02-15",
    "submitter_name": "Roberto Javier Godoy",
    "verifier_id": 116,
    "verifier_name": "Alexey Melnikov",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 1820,
    "doc-id": "RFC5321",
    "errata_status_code": "Rejected",
    "errata_type_code": "Editorial",
    "section": "3.9.2",
    "orig_text": "   A mailing list may be said to operate by \"redistribution\" rather than\r\n   by \"forwarding\".     [...]     Note that\r\n   the key difference between handling aliases (Section 3.9.1) and\r\n   forwarding (this subsection) is the change to the backward-pointing\r\n   address in this case.  [...]\r\n\r\n",
    "correct_text": "   A mailing list may be said to operate by \"redistribution\" rather than\r\n   by \"forwarding\".     [...]     Note that\r\n   the key difference between handling aliases (Section 3.9.1) and\r\n   lists (this subsection) is the change to the backward-pointing\r\n   address in this case.     [...]\r\n",
    "notes": "The change replaces the second occurrence of \"forwarding\" with \"lists\" in the first paragraph of section 3.9.2.\r\n\r\nThe term \"forwarding\" is generally used as a synonym of transmitting as opposed to delivering locally. The beginning of this section attempts to introduce the term \"redistribution\" for the specific type of transmission described therein. The phrase where the change is necessary, in its original wording, contradicts both the first phrase in its own paragraph, and the last phrase of the preceding section about aliases, which says that handling aliases may result in forwarding.\n --VERIFIER NOTES-- \n   This should be taken up with the group revising SMTP.  The language chosen was intentional, so a fix is not as simple as an errata.",
    "submit_date": "2009-07-30",
    "submitter_name": "Alessandro Vesely",
    "verifier_id": 101,
    "verifier_name": "Lisa Dusseault",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 1851,
    "doc-id": "RFC5321",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "4.1.1.5.",
    "orig_text": "There are circumstances, contrary to the intent of this\r\nspecification, in which an SMTP server may receive an indication that\r\nthe underlying TCP connection has been closed or reset.  To preserve\r\nthe robustness of the mail system, SMTP servers SHOULD be prepared\r\nfor this condition and SHOULD treat it as if a QUIT had been received\r\nbefore the connection disappeared.",
    "correct_text": null,
    "notes": "That text seems inappropriate in the RESET (RSET) section. It should presumably be moved to section 4.1.1.10. QUIT (QUIT), or, better yet, to section 3.8. Terminating Sessions and Connections.",
    "submit_date": "2009-09-08",
    "submitter_name": "Alessandro Vesely",
    "verifier_id": 127,
    "verifier_name": "Pete Resnick",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 2467,
    "doc-id": "RFC5321",
    "errata_status_code": "Rejected",
    "errata_type_code": "Editorial",
    "section": "4.1.3",
    "orig_text": "   IPv6-comp      = [IPv6-hex *5(\":\" IPv6-hex)] \"::\"\r\n                  [IPv6-hex *5(\":\" IPv6-hex)]\r\n                  ; The \"::\" represents at least 2 16-bit groups of\r\n                  ; zeros.  No more than 6 groups in addition to the\r\n                  ; \"::\" may be present.\r\n\r\n   IPv6v4-full    = IPv6-hex 5(\":\" IPv6-hex) \":\" IPv4-address-literal\r\n\r\n   IPv6v4-comp    = [IPv6-hex *3(\":\" IPv6-hex)] \"::\"\r\n                  [IPv6-hex *3(\":\" IPv6-hex) \":\"]\r\n                  IPv4-address-literal\r\n                  ; The \"::\" represents at least 2 16-bit groups of\r\n                  ; zeros.  No more than 4 groups in addition to the\r\n                  ; \"::\" and IPv4-address-literal may be present.",
    "correct_text": "   IPv6-comp      = [IPv6-hex *6(\":\" IPv6-hex)] \"::\"\r\n                  [IPv6-hex *6(\":\" IPv6-hex)]\r\n                  ; The \"::\" represents at least 1 16-bit groups of\r\n                  ; zeros.  No more than 7 groups in addition to the\r\n                  ; \"::\" may be present.\r\n\r\n   IPv6v4-full    = IPv6-hex 5(\":\" IPv6-hex) \":\" IPv4-address-literal\r\n\r\n   IPv6v4-comp    = [IPv6-hex *4(\":\" IPv6-hex)] \"::\"\r\n                  [IPv6-hex *4(\":\" IPv6-hex) \":\"]\r\n                  IPv4-address-literal\r\n                  ; The \"::\" represents at least 1 16-bit groups of\r\n                  ; zeros.  No more than 5 groups in addition to the\r\n                  ; \"::\" and IPv4-address-literal may be present.",
    "notes": "As per RFC 4291 and RFC 3986, \"::\" can represent a single 16-bit group of zeroes.\n --VERIFIER NOTES-- \nAs per RFC 5952:\r\n\r\n4.2.2.  Handling One 16-Bit 0 Field\r\n\r\n   The symbol \"::\" MUST NOT be used to shorten just one 16-bit 0 field.\r\n   For example, the representation 2001:db8:0:1:1:1:1:1 is correct, but\r\n   2001:db8::1:1:1:1:1 is not correct.",
    "submit_date": "2010-08-16",
    "submitter_name": "Michael Rushton",
    "verifier_id": 127,
    "verifier_name": "Pete Resnick",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 2578,
    "doc-id": "RFC5321",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": "4.1.2",
    "orig_text": "   Terminals not defined in\r\n   this document, such as ALPHA, DIGIT, SP, CR, LF, CRLF, are as defined\r\n   in the \"core\" syntax in Section 6 of RFC 5234 [7] or in the message\r\n   format syntax in RFC 5322 [4].",
    "correct_text": "   Terminals not defined in\r\n   this document, such as ALPHA, DIGIT, SP, CR, LF, CRLF, are as defined\r\n   in the \"core\" syntax in Appendix B of RFC 5234 [7] or in the message\r\n   format syntax in RFC 5322 [4].",
    "notes": "The core syntax of ABNF is defined in Appendix B \"Core ABNF of ABNF\" of RFC 5234, not Section 6, which lists the document's references.",
    "submit_date": "2010-10-18",
    "submitter_name": "Dominic Sayers",
    "verifier_id": 121,
    "verifier_name": "Peter Saint-Andre",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 3447,
    "doc-id": "RFC5321",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": 4.4,
    "orig_text": "When the delivery SMTP server makes the \"final delivery\" of a\r\n   message, it inserts a return-path line at the beginning of the mail\r\n   data.  This use of return-path is required; mail systems MUST support\r\n   it.\r\n\r\n...\r\n\r\nSMTP servers performing\r\n   a relay function MUST NOT inspect the message data\r\n\r\n...\r\n\r\nFor this to be unambiguous, exactly one return path\r\n   SHOULD be present when the message is delivered.",
    "correct_text": "When the delivery SMTP server makes the \"final delivery\" of a\r\n   message, it MUST insert a return-path line at the beginning of the mail\r\n   data. \r\n\r\n\r\nFor this to be unambiguous, exactly one return path\r\n   MUST be present when the message is delivered. ",
    "notes": "There are contradictory and ambiguous statements in this section.  Return-path is classified in 5322 as optional.  It's not 100% clear in the original text whether the server MUST prepend the return-path header or not.\r\n\r\nDo we really want to prohibit inspection by relays in this section?  I would imagine this MUST level requirement is routinely ignored anyway.\r\n\r\nAlternatively, we decide that Return-path is truly optional and change the first sentence to make that clear instead of the strongly implied MUST.\r\n\r\n--- VERIFIER NOTES ---\r\nThis erratum would normally meet the criteria for \"Rejected\", but\r\nit points out that as it currently stands, RFC 5321 is in need of\r\nsome work, perhaps in the process of advancing it on the Standards\r\nTrack to Internet Standard.  The erratum raises some issues, which\r\nI'll note here:\r\n\r\n1. RFC 5321 uses the capitalized key words from RFC 2119 only sparingly,\r\nand much of the normative language in the document is written in plain\r\nEnglish (\"the server does this\", rather than \"the server MUST do this\").\r\nThis is by intent, and is certainly not an error in the document, but\r\nsome people find it less clear.\r\n\r\n2. While RFC 5321 and RFC 5322 go hand in hand for most of us most of\r\nthe time, they are quite separable.  RFC 5321 can be used to transfer\r\ndata that does not conform to the format in RFC 5322, and message stores\r\ncan contain messages in RFC 5322 format that were not put there via\r\nSMTP (RFC 5321).  As a result, there are sometimes things that seem\r\ncontradictory between the two documents, if one is not aware of this\r\nsituation.\r\n\r\n3. RFC 5321 specifies a protocol that we know is not fully followed\r\neverywhere.  That there are known variants does not mean that we should\r\ndefine the protocol any less rigorously, and the claim that a requirement\r\nof the protocol is \"routinely ignored\" may well be true, but is not\r\nrelevant to how the protocol is defined.\r\n\r\nAll that said, the points need to be considered when a revision of\r\nRFC 5321 is taken on, and I'm marking this as \"Held for Document Update\"\r\nso that it will be staring us in the face is and when that happens.",
    "submit_date": "2013-01-07",
    "submitter_name": "Adrien de Croy",
    "verifier_id": 130,
    "verifier_name": "Barry Leiba",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 4055,
    "doc-id": "RFC5321",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "3.6.2",
    "orig_text": "   This specification does not deal with the verification of return\r\n   paths for use in delivery notifications.  Recent work, such as that\r\n   on SPF [29] and DKIM [30] [31], has been done to provide ways to\r\n   ascertain that an address is valid or belongs to the person who\r\n   actually sent the message.",
    "correct_text": "   This specification does not deal with the verification of return\r\n   paths for use in delivery notifications.  ",
    "notes": "Neither SPF nor DKIM determine \"validity\" of an address.  SPF determines whether an IP Address is 'authorized' to send mail with a particular domain name in the return address, but that does not validate the entire address, nevermind validating any destination or author addresses.  DKIM has nothing at all to do with any existing address or domain name elsewhere in the message.\r\n\r\nSo I suggest merely dropping the problematic sentence.\n --VERIFIER NOTES-- \nThis is a change request, not an errata report.",
    "submit_date": "2014-07-19",
    "submitter_name": "Dave Crocker",
    "verifier_id": 130,
    "verifier_name": "Barry Leiba",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 4079,
    "doc-id": "RFC5321",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "4.3.2.",
    "orig_text": "      DATA\r\n\r\n         I: 354 -> data -> S: 250\r\n\r\n                           E: 552, 554, 451, 452\r\n\r\n                           E: 450, 550 (rejections for policy reasons)\r\n\r\n         E: 503, 554\r\n",
    "correct_text": "      DATA\r\n\r\n         I: 354 -> data -> S: 250\r\n\r\n                           E: 552, 554, 451, 452\r\n\r\n                           E: 450, 550 (rejections for policy reasons)\r\n\r\n         E: 451, 503, 554\r\n",
    "notes": "\"E: 451\" after DATA exists in section 4.3.2 of RFC 2821:\r\n\r\n   DATA\r\n      I: 354 -> data -> S: 250\r\n                        E: 552, 554, 451, 452\r\n      E: 451, 554, 503\n --VERIFIER NOTES-- \nAs discussed with the reporter: As far as we can tell, it was the intention to remove 451 in the transition from 2821 to 5321. This is not an error in the document. Error codes can be used by extensions without an update to 5321.",
    "submit_date": "2014-08-12",
    "submitter_name": "Sergey Afonin",
    "verifier_id": 127,
    "verifier_name": "Pete Resnick",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 4198,
    "doc-id": "RFC5321",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": 4.2,
    "orig_text": "Whenever possible, a receiver-\r\nSMTP SHOULD test the first digit (severity indication) of the reply\r\ncode.\r\n",
    "correct_text": "Whenever possible, a sender-\r\nSMTP SHOULD test the first digit (severity indication) of a reply\r\ncode it receives.",
    "notes": "The \"sender\" is the entity that issues commands and receives response codes (from the \"receiver\").",
    "submit_date": "2014-12-09",
    "submitter_name": "Jasen Betts",
    "verifier_id": 130,
    "verifier_name": "Barry Leiba",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 4265,
    "doc-id": "RFC5321",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "F.2",
    "orig_text": "SMTP servers MUST continue to accept source route syntax as specified\r\nin the main body of this document and in RFC 1123.  They MAY, if\r\nnecessary, ignore the routes and utilize only the target domain in the\r\naddress.",
    "correct_text": "SMTP servers MUST continue to accept source route syntax within RFC\r\n5322 headers as specified in the main body of this document and in RFC\r\n1123.  They SHOULD ignore source routes specified in envelope addresses\r\nand utilize only the target domain, or MAY decline to accept envelope\r\naddresses that specify source routes.",
    "notes": "The current wording of Section F.2 appears to contradict Sections 3.3 and 3.6.1.\r\n\r\nSection 3.3 states: \"Servers MUST be prepared to encounter a list of source routes in the forward-path, but they SHOULD ignore the routes or MAY decline to support the relaying they imply.\"\r\n\r\nSection 3.6.1 states: \"SMTP servers MAY decline to act as mail relays or to accept addresses that specify source routes.\"\r\n\r\nRFC 1123 contains *two* separate relevant requirements: Section 5.2.6 states \"A receiver-SMTP MUST accept the explicit source route syntax in the envelope...\" and Section 5.2.19 states \"Internet host software SHOULD NOT create an RFC-822 header containing an address with an explicit source route, but MUST accept such headers for compatibility with earlier systems.\"\r\n\r\nIt appears that Sections 3.3 and 3.6.1 are intended to remove the requirement to accept source route syntax within envelope addresses, but the current wording of Section F.2 contradicts this.  If the intent of Section F.2 is only to continue the requirement to accept source route syntax within message headers, this should be made clear.  The proposed text is written with this assumption in mind.  If the intent of RFC 5321 is to remove both requirements, the proposed wording for Section F.2 requires further revision.\r\n\r\nAlso, if the intent of Sections 3.3 and 3.6.1 is to treat source routing differently for a <forward-path> and <reverse-path>, this should be clarified in all three sections.  The proposed text assumes the requirements for both are the same.\n --VERIFIER NOTES-- \nThe text as it is, is what was intended.  Moreover, this is another step along the way toward the deprecation of source routes, a path we started on a good many years ago.  John Klensin is taking input for his working copy of a 5321bis, if specific text changes are suggested.",
    "submit_date": "2015-02-07",
    "submitter_name": "Vance Kochenderfer",
    "verifier_id": 130,
    "verifier_name": "Barry Leiba",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 4315,
    "doc-id": "RFC5321",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "4.1.3",
    "orig_text": "   IPv6-full      = IPv6-hex 7(\":\" IPv6-hex)\r\n\r\n   IPv6-comp      = [IPv6-hex *5(\":\" IPv6-hex)] \"::\"\r\n                  [IPv6-hex *5(\":\" IPv6-hex)]\r\n                  ; The \"::\" represents at least 2 16-bit groups of\r\n                  ; zeros.  No more than 6 groups in addition to the\r\n                  ; \"::\" may be present.\r\n\r\n   IPv6v4-full    = IPv6-hex 5(\":\" IPv6-hex) \":\" IPv4-address-literal\r\n\r\n   IPv6v4-comp    = [IPv6-hex *3(\":\" IPv6-hex)] \"::\"\r\n                  [IPv6-hex *3(\":\" IPv6-hex) \":\"]\r\n                  IPv4-address-literal\r\n                  ; The \"::\" represents at least 2 16-bit groups of\r\n                  ; zeros.  No more than 4 groups in addition to the\r\n                  ; \"::\" and IPv4-address-literal may be present.",
    "correct_text": "   IPv6-full      = IPv6-hex 7(\":\" IPv6-hex)\r\n\r\n   IPv6-comp      = \"::\" [IPv6-hex *6(\":\" IPv6-hex)]\r\n                  | IPv6-hex \"::\" [IPv6-hex *5(\":\" IPv6-hex)]\r\n                  | IPv6-hex 1(\":\" IPv6-hex) \"::\"\r\n                  [IPv6-hex *4(\":\" IPv6-hex)]\r\n                  | IPv6-hex 2(\":\" IPv6-hex) \"::\"\r\n                  [IPv6-hex *3(\":\" IPv6-hex)]\r\n                  | IPv6-hex 3(\":\" IPv6-hex) \"::\"\r\n                  [IPv6-hex *2(\":\" IPv6-hex)]\r\n                  | IPv6-hex 4(\":\" IPv6-hex) \"::\"\r\n                  [IPv6-hex *1(\":\" IPv6-hex)]\r\n                  | IPv6-hex 5(\":\" IPv6-hex) \"::\" [IPv6-hex]\r\n                  | IPv6-hex 6(\":\" IPv6-hex) \"::\"\r\n                  ; The \"::\" represents at least one 16-bit groups of\r\n                  ; zeros.  No more than 7 groups in addition to the\r\n                  ; \"::\" may be present.\r\n\r\n   IPv6v4-full    = IPv6-hex 5(\":\" IPv6-hex) \":\" IPv4-address-literal\r\n\r\n   IPv6v4-comp    = (\"::\" [IPv6-hex *4(\":\" IPv6-hex) \":\"] \r\n                  | IPv6-hex \"::\" [IPv6-hex *3(\":\" IPv6-hex) \":\"]\r\n                  | IPv6-hex 1(\":\" IPv6-hex) \"::\"\r\n                  [IPv6-hex *2(\":\" IPv6-hex) \":\"]\r\n                  | IPv6-hex 2(\":\" IPv6-hex) \"::\"\r\n                  [IPv6-hex *1(\":\" IPv6-hex) \":\"]\r\n                  | IPv6-hex 3(\":\" IPv6-hex) \"::\" [IPv6-hex \":\"]\r\n                  | IPv6-hex 4(\":\" IPv6-hex) \"::\")\r\n                  IPv4-address-literal\r\n                  ; The \"::\" represents at least one 16-bit groups of\r\n                  ; zeros.  No more than 5 groups in addition to the\r\n                  ; \"::\" and IPv4-address-literal may be present.",
    "notes": "I had the same impression that Michael Rushton (Errata 2467).\r\n\r\nSearching about what says the others RFCs ([RFC 3986] , [RFC 4291] , [RFC 5952]), I believe that Michael Rushton's affirmative may be right.\r\n\r\n\r\nCase 1 - Section 3.2.2 of [RFC 3986] says:\r\n\r\n\"(...) A sequence of one or more consecutive zero-valued 16-bit pieces within the address may be elided, omitting all their digits and leaving exactly two consecutive colons in their place to mark the elision.\" (sic).\r\n\r\n\r\nTranscription of Section 3.2.2 of [RFC 3986]\r\n\r\n\"(...)\r\n\r\nA 128-bit IPv6 address is divided into eight 16-bit pieces.  Each piece is represented numerically in case-insensitive hexadecimal, using one to four hexadecimal digits (leading zeroes are permitted). The eight encoded pieces are given most-significant first, separated by colon characters.  Optionally, the least-significant two pieces may instead be represented in IPv4 address textual format.  A sequence of one or more consecutive zero-valued 16-bit pieces within the address may be elided, omitting all their digits and leaving exactly two consecutive colons in their place to mark the elision.\r\n\r\n(...)\"\r\n\r\n\r\n\r\nCase 2 - Section 2.2 of [RFC 4291] says:\r\n\r\n\"(...) The use of \"::\" indicates one or more groups of 16 bits of zeros. (...)\" (sic).\r\n\r\n\r\nTranscription of Item 2, Section 2.2 of [RFC 4291]\r\n\r\n\"2. Due to some methods of allocating certain styles of IPv6 addresses, it will be common for addresses to contain long strings of zero bits.  In order to make writing addresses containing zero bits easier, a special syntax is available to compress the zeros. The use of \"::\" indicates one or more groups of 16 bits of zeros. The \"::\" can only appear once in an address.  The \"::\" can also be used to compress leading or trailing zeros in an address.\r\n\r\n(...)\"\r\n\r\n\r\n\r\nCase 3 - Recommendations of [RFC 5952]\r\n\r\nIn reply to the question of Errata 2467, was quoted the words of Section 4.2.2 of [RFC 5952], that recommends:\r\n\r\n\"The symbol \"::\" MUST NOT be used to shorten just one 16-bit 0 field. For example, the representation 2001:db8:0:1:1:1:1:1 is correct, but 2001:db8::1:1:1:1:1 is not correct.\" (sic).\r\n\r\n\r\nBut the Section 4 of the same RFC, says:\r\n\r\n\"(...) The recommendation in this section SHOULD be followed by systems when generating an address to be represented as text, but all implementations MUST accept and be able to handle any legitimate [RFC4291] format.\"\r\n\r\n\r\nTranscription of Section 4 and 4.2.2 of [RFC 5952]\r\n\r\n\"4.  A Recommendation for IPv6 Text Representation\r\n\r\nA recommendation for a canonical text representation format of IPv6 addresses is presented in this section.  The recommendation in this document is one that complies fully with [RFC4291], is implemented by various operating systems, and is human friendly.  The recommendation in this section SHOULD be followed by systems when generating an address to be represented as text, but all implementations MUST accept and be able to handle any legitimate [RFC4291] format.  It is advised that humans also follow these recommendations when spelling an address.\r\n\r\n(...)\r\n   \r\n4.2.2.  Handling One 16-Bit 0 Field\r\n\r\nThe symbol \"::\" MUST NOT be used to shorten just one 16-bit 0 field. For example, the representation 2001:db8:0:1:1:1:1:1 is correct, but 2001:db8::1:1:1:1:1 is not correct.\r\n\r\n(...)\"\r\n\r\n\r\n\r\nTherefore, it is clear that the intent of what was said in Section 4.2.2 only serves to standardize the generation and not to interpretation of a IPv6 representation.\r\n\r\n\r\n\r\nFor more explanations see:\r\n\r\nRFC 4291 - Errata 2702, 2735 and 2466\r\nhttp://www.rfc-editor.org/errata_search.php?rfc=4291\r\n\r\nRFC 4291 - Errata 2735 discussion\r\nhttp://www.ietf.org/mail-archive/web/v6ops/current/msg07722.html\r\n\t\r\n\r\n\t\r\n[RFC 3986] Berners-Lee, T., Fielding, R., and L. Masinter, \"Uniform Resource Identifier (URI): Generic Syntax\", STD 66, RFC 3986, January 2005.\r\n\r\n[RFC 4291] Hinden, R. and S. Deering, \"IP Version 6 Addressing Architecture\", RFC 4291, February 2006.\r\n\r\n[RFC 5952] Kawamura, S. and M. Kawashima, \"A Recommendation for IPv6 Address Text Representation\", RFC 5952, August 2010.\r\n\r\n===== Verifier notes =====\r\nThe text in 5321 was correct at the time of publication, according to advice from the IPv6 folks.  This was, of course, well before 5952 came out.  This report has been noted in the notes for a future 5321bis document.",
    "submit_date": "2015-03-27",
    "submitter_name": "Rodrigo Speller",
    "verifier_id": 130,
    "verifier_name": "Barry Leiba",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 5414,
    "doc-id": "RFC5321",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "4.1.2",
    "orig_text": "Quoted-string  = DQUOTE *QcontentSMTP DQUOTE",
    "correct_text": "Quoted-string  = DQUOTE 1*QcontentSMTP DQUOTE",
    "notes": "As written, this allows for an email envelope recipient (Forward-path) with a NULL value for the local part of their address. This is a functional departure from similar wording in the preceding RFC 821, which defines quoted-string in such a way as to require at least one character that is not one of the surrounding quotation marks.",
    "submit_date": "2018-06-29",
    "submitter_name": "David Romerstein",
    "verifier_id": 130,
    "verifier_name": "Barry Leiba",
    "update_date": "2019-11-13 12:49:30"
  },
  {
    "errata_id": 5711,
    "doc-id": "RFC5321",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "D.3",
    "orig_text": "      C: Bill:\r\n      C: The next meeting of the board of directors will be\r\n      C: on Tuesday.\r\n      C: John.",
    "correct_text": "      C: Bill:\r\n      C: The next meeting of the board of directors will be\r\n      C: on Tuesday.\r\n      C:                         John.",
    "notes": "Since step 1 and step 2 are transmitting the same message, the relay host should not change its body.\r\n\r\nThe previous version of this document, RFC 2821, had the \"John.\" signature centered by padding spaces before it on both steps, not just step 2.",
    "submit_date": "2019-04-29",
    "submitter_name": "Guillaume Fortin-Debigaré",
    "verifier_id": 130,
    "verifier_name": "Barry Leiba",
    "update_date": "2019-11-13 12:48:58"
  },
  {
    "errata_id": 6561,
    "doc-id": "RFC5321",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "4.1.2.",
    "orig_text": "Domain         = sub-domain *(\".\" sub-domain)",
    "correct_text": "Domain         = sub-domain *(\".\" sub-domain)[.]\r\n",
    "notes": "RFC-1034 section 3.1 say \" Since a complete domain name ends with the root label, this leads to a printed form which ends in a dot.\" and also say 'a character string which represents a complete domain name (often called \"absolute\"). For example, \"poneria.ISI.EDU.\" '.\r\n It is necessary to allow a dot at the end of the domain name.",
    "submit_date": "2021-04-27",
    "submitter_name": "Seiichi Hamada",
    "verifier_id": 99,
    "verifier_name": null,
    "update_date": null
  }
]
