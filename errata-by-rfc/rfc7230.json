[
  {
    "errata_id": "4050",
    "doc-id": "RFC7230",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": "3.2.4",
    "orig_text": "A server MUST reject any received request message that contains\r\nwhitespace between a header field-name and colon with a response code\r\nof 400 (Bad Request).",
    "correct_text": "A server MUST reject any received request message that contains\r\nwhitespace between a header field-name and colon with a status code\r\nof 400 (Bad Request).",
    "notes": "Basically HTTP RFCs seem to prefer \"status code\" over \"response code\". RFC 7231 Section 6 uses status code or \"Response Status Code\", but rarely uses the term \"response code\" (though it uses it, once). Some technical books actually refer those codes as \"response codes\". I tend to be confused with the mixture of those two terms.",
    "submit_date": "2014-07-11",
    "submitter_name": "Daisuke Miyakawa",
    "verifier_id": "130",
    "verifier_name": "Barry Leiba",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "4136",
    "doc-id": "RFC7230",
    "errata_status_code": "Rejected",
    "errata_type_code": "Editorial",
    "section": "A.2.",
    "orig_text": "Bogus Content-Length header fields are now required to be handled as\r\nerrors by recipients.  (Section 3.3.2)\r\n",
    "correct_text": "Bogus Content-Length header fields are now required to be handled as\r\nerrors by recipients.  (Section 3.3.3)\r\n",
    "notes": "The mentioned requirement appears in 3.3.3 (5), not in 3.3.2\n --VERIFIER NOTES-- \nThe text in 3.3.3 is not what this item is referring to: it really is referring to Section 3.3.2 as a whole.",
    "submit_date": "2014-10-20",
    "submitter_name": "Frank Gevaerts",
    "verifier_id": "130",
    "verifier_name": "Barry Leiba",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "4169",
    "doc-id": "RFC7230",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "7",
    "orig_text": "     #element => [ ( \",\" / element ) *( OWS \",\" [ OWS element ] ) ]\r\n\r\n     1#element => *( \",\" OWS ) element *( OWS \",\" [ OWS element ] )\r\n\r\n   Empty elements do not contribute to the count of elements present.\r\n   For example, given these ABNF productions:\r\n\r\n     example-list      = 1#example-list-elmt\r\n     example-list-elmt = token ; see Section 3.2.6\r\n\r\n   Then the following are valid values for example-list (not including\r\n   the double quotes, which are present for delimitation only):\r\n\r\n     \"foo,bar\"\r\n     \"foo ,bar,\"\r\n     \"foo , ,bar,charlie   \"",
    "correct_text": "     #element => [ ( \",\" / element ) *( OWS \",\" [ OWS element ] ) ]\r\n\r\n     1#element => *( \",\" OWS ) element *( OWS \",\" [ OWS element ] )\r\n\r\n   Empty elements do not contribute to the count of elements present.\r\n   For example, given these ABNF productions:\r\n\r\n     example-list      = 1#example-list-elmt\r\n     example-list-elmt = token ; see Section 3.2.6\r\n\r\n   Then the following are valid values for example-list (not including\r\n   the double quotes, which are present for delimitation only):\r\n\r\n     \"foo,bar\"\r\n     \"foo ,bar,\"\r\n     \"foo , ,bar,charlie\"",
    "notes": "\"foo , ,bar,charlie   \" cannot be derived from 1#token (legacy list rule)\r\n\"foo , ,bar,charlie\" can be derived from 1#token (legacy list rule)",
    "submit_date": "2014-11-09",
    "submitter_name": "Simon Schueppel",
    "verifier_id": "130",
    "verifier_name": "Barry Leiba",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "4189",
    "doc-id": "RFC7230",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "3.2",
    "orig_text": "     field-name     = token\r\n     field-value    = *( field-content / obs-fold )\r\n     field-content  = field-vchar [ 1*( SP / HTAB ) field-vchar ]\r\n     field-vchar    = VCHAR / obs-text\r\n\r\n     obs-fold       = CRLF 1*( SP / HTAB )\r\n                    ; obsolete line folding\r\n                    ; see Section 3.2.4",
    "correct_text": "     field-name     = token\r\n     field-value    = *( field-content / obs-fold )\r\n     field-content  = field-vchar [ 1*( SP / HTAB / field-vchar )\r\n                      field-vchar ]\r\n     field-vchar    = VCHAR / obs-text\r\n\r\n     obs-fold       = OWS CRLF 1*( SP / HTAB )\r\n                    ; obsolete line folding\r\n                    ; see Section 3.2.4",
    "notes": "the field-value rule given in Section 3.2 will not recognize several strings recognized by specific header rules.\r\n\r\nExamples:\r\n    - \", , ,\" recognized by legacy list rule\r\n    - \"abrowser/0.001 (C O M M E N T)\" recognized by User-Agent rule\r\n    - \"gzip , chunked\" recognized by Transfer-Encoding rule\r\n    - etc.\r\n\r\nGeneral Problem:\r\n    the specified field-value rule does not allow single field-vchar surrounded by whitespace anywhere\r\n\r\nFurther Notes:\r\n    -what the authors propably wanted to say:\r\n        a string of octets is a field-value if, and only if:\r\n            -it is *( field-vchar / SP / HTAB / obs-fold )\r\n            -if it is not empty, it starts and ends with field-vchar\r\n\r\n    -the suggested correction was designed according to these criteria\r\n\r\n--------------------- Notes from verifier ---------------------\r\nThis has been edited from the original report after discussion, but even this is not right.  There's more here than can be reasonably fixed in an errata report, and the proper fix needs to be done in a revision of the document -- hence, \"Held for Document Update\".  Note that this *is* a valid report, and that a fix is needed.  The one above is the best approach for now, and a better fix will be developed in 7230bis.",
    "submit_date": "2014-11-26",
    "submitter_name": "Simon Schueppel",
    "verifier_id": "130",
    "verifier_name": "Barry Leiba",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "4205",
    "doc-id": "RFC7230",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": "6.3",
    "orig_text": "   o  If the received protocol is HTTP/1.0, the \"keep-alive\" connection\r\n      option is present, the recipient is not a proxy, and the recipient\r\n      wishes to honor the HTTP/1.0 \"keep-alive\" mechanism, the\r\n      connection will persist after the current response; otherwise,",
    "correct_text": "  o  If the received protocol is HTTP/1.0, the \"keep-alive\" connection\r\n     option is present in a message that is not a request to a proxy,\r\n     and the recipient wishes to honor the HTTP/1.0 \"keep-alive\"\r\n     mechanism, the connection will persist after the current response;\r\n     otherwise,",
    "notes": "The correction makes it clearer that the reference is meant to be client-to-proxy and not proxy-to-server.",
    "submit_date": "2014-12-23",
    "submitter_name": "Semyon Kholodnov",
    "verifier_id": "130",
    "verifier_name": "Barry Leiba",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "4251",
    "doc-id": "RFC7230",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "2.7.1",
    "orig_text": "     http-URI = \"http:\" \"//\" authority path-abempty [ \"?\" query ]\r\n                [ \"#\" fragment ]\r\n",
    "correct_text": "     http-URI = \"http:\" \"//\" authority path-abempty [ \"?\" query ]\r\n",
    "notes": "Per http://tools.ietf.org/html/rfc3986#section-4.3 \"URI scheme specifications must define their own syntax so that all strings matching their scheme-specific syntax will also match the <absolute-URI> grammar.\" See the discussion around http://mailarchive.ietf.org/arch/msg/apps-discuss/gZVRtgOUFyzOk68FgL1jHTzWG2s",
    "submit_date": "2015-02-01",
    "submitter_name": "Bjoern Hoehrmann",
    "verifier_id": "130",
    "verifier_name": "Barry Leiba",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "4252",
    "doc-id": "RFC7230",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "2.7.2.",
    "orig_text": "     https-URI = \"https:\" \"//\" authority path-abempty [ \"?\" query ]\r\n                 [ \"#\" fragment ]\r\n",
    "correct_text": "     https-URI = \"https:\" \"//\" authority path-abempty [ \"?\" query ]\r\n",
    "notes": "See erratum 4251 on the same document.",
    "submit_date": "2015-02-01",
    "submitter_name": "Bjoern Hoehrmann",
    "verifier_id": "130",
    "verifier_name": "Barry Leiba",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "4281",
    "doc-id": "RFC7230",
    "errata_status_code": "Rejected",
    "errata_type_code": "Editorial",
    "section": "3.3.2",
    "orig_text": "For messages that do not include a payload body, the Content-Length\r\nindicates the size of the selected representation (Section 3 of\r\n[RFC7231]).",
    "correct_text": "For outbound messages that do not include a payload body, the\r\nContent-Length indicates the size of the selected representation\r\n(Section 3 of [RFC7231]).",
    "notes": "Assuming my interpretation is correct, this phrase as-is is a little confusing given the next paragraphs states:\r\n\r\n\"A user agent SHOULD NOT send a Content-Length header field when the request message does not contain a payload body and the method semantics do not anticipate such a body.\"\r\n\r\nThe former is ambiguous, the latter explicit.\n --VERIFIER NOTES-- \nThe sentence in question has to be taken in context with the entire paragraph, with the rest of the section, and with the understand that it's only a summary.  The details are provided in the rest of the section and in Section 3.3.3.",
    "submit_date": "2015-02-26",
    "submitter_name": "Demian Brecht",
    "verifier_id": "130",
    "verifier_name": "Barry Leiba",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "4412",
    "doc-id": "RFC7230",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "3.3.3",
    "orig_text": "If a Transfer-Encoding header field is present in a response and\r\nthe chunked transfer coding is not the final encoding, the\r\nmessage body length is determined by reading the connection until\r\nit is closed by the server.  If a Transfer-Encoding header field\r\nis present in a request and the chunked transfer coding is not\r\nthe final encoding, the message body length cannot be determined\r\nreliably; the server MUST respond with the 400 (Bad Request)\r\nstatus code and then close the connection.",
    "correct_text": "Either:\r\n\r\nIf a Transfer-Encoding header field is present in a response and\r\nthe chunked transfer coding is not the final encoding, the\r\nmessage body length is determined by reading the connection until\r\nit is closed by the server.\r\n\r\nOr:\r\n\r\nIf a Transfer-Encoding header field is present in a request and \r\nthe chunked transfer coding is not the final encoding, the \r\nmessage body length cannot be determined \r\nreliably; the server MUST respond with the 400 (Bad Request) \r\nstatus code and then close the connection.\r\n",
    "notes": "The paragraph has two apparently contradictory rules.  It is unclear which is the correct behaviour.\n --VERIFIER NOTES-- \nThey're not contradictory: the first is for responses and the second is for requests, which are different situations.",
    "submit_date": "2015-07-09",
    "submitter_name": "Rick Taylor",
    "verifier_id": "130",
    "verifier_name": "Barry Leiba",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "4667",
    "doc-id": "RFC7230",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "4.1.1",
    "orig_text": "chunk-ext      = *( \";\" chunk-ext-name [ \"=\" chunk-ext-val ] )\r\n",
    "correct_text": "chunk-ext      = *( BWS  \";\" BWS chunk-ext-name\r\n                    [ BWS  \"=\" BWS chunk-ext-val ] )\r\n",
    "notes": "The infamous \"implicit *LWS\" syntax rule in RFC 2616 allowed whitespace between\r\n\";\" and chunk-ext-name in chunk-ext. Some HTTP agents generate that whitespace.\r\nIn my experience, HTTP agents that can parse chunk extensions usually can handle\r\nthat whitespace. Moreover, ICAP, which generally relies on HTTP/1 for its message\r\nsyntax, uses that whitespace when defining the \"ieof\" chunk extension in RFC 3507\r\nSection 4.5:\r\n\r\n\\r\\n\r\n0; ieof\\r\\n\\r\\n\r\n\r\nIMHO, RFC 7230 should either allow BWS before chunk-ext-name or at the very least\r\nexplicitly document the HTTP/1 syntax change and its effect on parsers used for both\r\nICAP and HTTP/1 messages (a very common case for ICAP-supporting HTTP\r\nintermediaries and ICAP services).\r\n\r\nI also recommend adding BWS around \"=\", for consistency and RFC 2616 backward\r\ncompatibility reasons. HTTPbis RFCs already do that for transfer-parameter and\r\nauth-param that have similar syntax.\r\n\r\nPlease also consider adding BWS _before_ \";\" for consistency and RFC 2616 backward\r\ncompatibility reasons. HTTPbis RFCs already do that for transfer-extension,\r\naccept-ext, t-ranking, and other constructs with similar syntax.",
    "submit_date": "2016-04-13",
    "submitter_name": "Alex Rousskov",
    "verifier_id": "116",
    "verifier_name": "Alexey Melnikov",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "4683",
    "doc-id": "RFC7230",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "4",
    "orig_text": null,
    "correct_text": "The name part of a transfer-parameter is case insensitive and MUST not\r\nbe \"q\" (as this would be ambiguous when used as part of the TE header).",
    "notes": "Nothing is said about how to handle transfer-parameters.\r\nNotably, nothing is said about the case sensitivity of the parameter key.\r\n\r\nThis results in a conflict with the TE header: if you see a \"q\" token,\r\nyou cannot know if it is a transfer-parameter vs a t-ranking.\r\n\r\nIt *is* noted that the \"q\" token is case insensitive in section 4.3.\r\n> When multiple transfer codings are acceptable, the client MAY rank\r\n> the codings by preference using a case-insensitive \"q\" parameter\r\n\r\n\r\nAlexey: as per Mark, this should be discussed in the HTTPBis WG.\r\n",
    "submit_date": "2016-05-04",
    "submitter_name": "Daurnimator",
    "verifier_id": "116",
    "verifier_name": "Alexey Melnikov",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "4779",
    "doc-id": "RFC7230",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "A.2.",
    "orig_text": "   [...] Non-US-ASCII content in header fields and the reason\r\n   phrase has been obsoleted and made opaque (the TEXT rule was\r\n   removed).  (Section 3.2.6)",
    "correct_text": "   [...] Non-US-ASCII content in header field values and the reason\r\n   phrase has been obsoleted and made opaque (the TEXT rule was\r\n   removed).  (Section 3.2.6)",
    "notes": "Section 3.2 plainly states header field names are token \r\n(VCHARs less separators) as defined in 3.2.6. \r\n\r\nThe \"header fields\" identified in this footnote are neither \r\nclear nor correct.\r\n\r\nAlexey: While this is a clarification, the whole section is likely to be deleted when the document is revised.",
    "submit_date": "2016-08-18",
    "submitter_name": "William A. Rowe Jr.",
    "verifier_id": "116",
    "verifier_name": "Alexey Melnikov",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "4825",
    "doc-id": "RFC7230",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "Appendix B",
    "orig_text": "chunk-ext      = *( \";\" chunk-ext-name [ \"=\" chunk-ext-val ] )\r\n",
    "correct_text": "chunk-ext      = *( BWS  \";\" BWS chunk-ext-name\r\n                    [ BWS  \"=\" BWS chunk-ext-val ] )",
    "notes": "The infamous \"implicit *LWS\" syntax rule in RFC 2616 allowed whitespace between\r\n\";\" and chunk-ext-name in chunk-ext. Some HTTP agents generate that whitespace.\r\nIn my experience, HTTP agents that can parse chunk extensions usually can handle\r\nthat whitespace. Moreover, ICAP, which generally relies on HTTP/1 for its message\r\nsyntax, uses that whitespace when defining the \"ieof\" chunk extension in RFC 3507\r\nSection 4.5:\r\n\r\n      \\r\\n\r\n      0; ieof\\r\\n\\r\\n\r\n\r\nIMHO, RFC 7230 should either allow BWS before chunk-ext-name or at the very least\r\nexplicitly document the HTTP/1 syntax change and its effect on parsers used for both\r\nICAP and HTTP/1 messages (a very common case for ICAP-supporting HTTP\r\nintermediaries and ICAP services).\r\n\r\nI also recommend adding BWS around \"=\", for consistency and RFC 2616 backward\r\ncompatibility reasons. HTTPbis RFCs already do that for transfer-parameter and\r\nauth-param that have similar syntax.\r\n\r\nPlease also consider adding BWS _before_ \";\" for consistency and RFC 2616 backward\r\ncompatibility reasons. HTTPbis RFCs already do that for transfer-extension,\r\naccept-ext,  t-ranking, and other constructs with similar syntax.\r\n",
    "submit_date": "2016-04-13",
    "submitter_name": "Alex Rousskov",
    "verifier_id": "116",
    "verifier_name": "Alexey Melnikov",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "4838",
    "doc-id": "RFC7230",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "4",
    "orig_text": "   Parameters are in the form of a name or name=value pair.\r\n\r\n     transfer-parameter = token BWS \"=\" BWS ( token / quoted-string )",
    "correct_text": "   Parameters are in the form of a name or name=value pair.\r\n\r\n     transfer-parameter = token \r\n                        / token BWS \"=\" BWS ( token / quoted-string )",
    "notes": "The form of a name cannot be represented with the original ABNF.\n --VERIFIER NOTES-- \nRejected as per the mailing list discussion:\r\n\r\n<https://www.w3.org/Search/Mail/Public/search?type-index=ietf-http-wg&index-type=t&keywords=4838&search=Search>",
    "submit_date": "2016-10-22",
    "submitter_name": "Etan Kissling",
    "verifier_id": "116",
    "verifier_name": "Alexey Melnikov",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "4839",
    "doc-id": "RFC7230",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "4",
    "orig_text": "   Parameters are in the form of a name or name=value pair.\r\n\r\n     transfer-parameter = token BWS \"=\" BWS ( token / quoted-string )",
    "correct_text": "   Parameters are in the form of a name=value pair.\r\n\r\n     transfer-parameter = token BWS \"=\" BWS ( token / quoted-string )",
    "notes": "The ABNF does not allow the form of a name.",
    "submit_date": "2016-10-23",
    "submitter_name": "Etan Kissling",
    "verifier_id": "116",
    "verifier_name": "Alexey Melnikov",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "4891",
    "doc-id": "RFC7230",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "3.2.6",
    "orig_text": "qdtext         = HTAB / SP /%x21 / %x23-5B / %x5D-7E / obs-text",
    "correct_text": "qdtext         = HTAB / SP / %x21 / %x23-5B / %x5D-7E / obs-text",
    "notes": "Lack of space between the slash and the alternative makes it unclear that the slash isn't part of the next alternative.\r\n\r\nMark Nottingham: Not a bug, but certainly an improvement.",
    "submit_date": "2016-12-16",
    "submitter_name": "Mike Bishop",
    "verifier_id": "116",
    "verifier_name": "Alexey Melnikov",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "5163",
    "doc-id": "RFC7230",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "3.2.4",
    "orig_text": "A field value might be preceded and/or followed by optional\r\nwhitespace (OWS); a single SP preceding the field-value is preferred\r\nfor consistent readability by humans.  The field value does not\r\ninclude any leading or trailing whitespace: OWS occurring before the\r\nfirst non-whitespace octet of the field value or after the last\r\nnon-whitespace octet of the field value ought to be excluded by\r\nparsers when extracting the field value from a header field.\r\n",
    "correct_text": "A field value might be preceded and/or followed by optional\r\nwhitespace (OWS); a single SP preceding the field-value is preferred\r\nfor consistent readability by humans.  The field value does not\r\ninclude any leading or trailing whitespace: OWS occurring before the\r\nfirst non-whitespace octet of the field value or after the last\r\nnon-whitespace octet of the field value ought to be excluded by\r\nparsers when extracting the field value from a header field.\r\n\r\nAll optional whitespace between tokens in field-content has the same\r\nsemantics as SP. Any sequence of SP / HTAB that occurs between tokens\r\nin field-content MAY be replaced with a single SP before interpreting\r\nthe field value or forwarding the message downstream.",
    "notes": "RFC 2616, section 2.2, contained the following text:\r\n\r\nAll linear white space, including folding, has the same semantics as SP. A recipient MAY replace any linear white space with a single SP before interpreting the field value or forwarding the message downstream.\r\n\r\nSimilarly, RFC 2616 section 4.2 contained the following text:\r\nAny LWS that occurs between field-content MAY be replaced with a single SP before interpreting the field value or forwarding the message downstream.\r\n\r\nIn section A.2. Changes from RFC 2616, the document does not list any intended change for how space and tab are handled, but the current text does appear to constitute a change. I suspect the change is accidental due to rewording the document when line folding was made deprecated.\r\n\r\nNote that in RFC 2616, LWS is defined as follows:\r\nLWS            = [CRLF] 1*( SP | HT )\r\n\r\nIn particular, the leading CRLF was optional.\r\n\r\nThus, the wording in RFC 2616 covered two cases:\r\n1. LWS that includes line folding.\r\n2. LWS that does not include line folding.\r\n\r\nThe current text does cover how to handle case #1 - former LWS that began with a CRLF; later in section 3.2.4 it requires rejecting or replacing with SP. (The old \"MAY\" language has effectively become a \"MUST\" for the leading CRLF case.)\r\n\r\nHowever, the current text does not appear to address case #2 - former LWS that does not begin with a CRLF - in other words, SP and HTAB occurring between field-content. I suspect the intention is still that a recipient should treat such whitespace as insignificant, and may replace any sequence of SP and HTAB with a single SP before interpreting the field content, but I believe the text of the current RFC no longer provides this behavior.\r\n\r\n(I have not read all of the specifications in full, so please accept my apologies if I have misread or missed a relevant portion elsewhere.)",
    "submit_date": "2017-10-20",
    "submitter_name": "David Matson",
    "verifier_id": "170",
    "verifier_name": "Francesca Palombini",
    "update_date": "2021-08-23 09:30:46"
  },
  {
    "errata_id": "5216",
    "doc-id": "RFC7230",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "5.4.",
    "orig_text": "A client MUST send a Host header field in all HTTP/1.1 request\r\nmessages.  If the target URI includes an authority component, then a\r\nclient MUST send a field-value for Host that is identical to that\r\nauthority component, excluding any userinfo subcomponent and its \"@\"\r\ndelimiter (Section 2.7.1).  If the authority component is missing or\r\nundefined for the target URI, then a client MUST send a Host header\r\nfield with an empty field-value.",
    "correct_text": "A client MUST send a Host header field in all HTTP/1.1 request\r\nmessages.  If the target URI includes an authority component, then a\r\nclient MUST send a field-value for Host that is identical to that\r\nauthority component, excluding any userinfo subcomponent and its \"@\"\r\ndelimiter (Section 2.7.1).  If the authority component is missing or\r\nundefined for the target URI, then a recipient MUST reject this\r\nrequest.",
    "notes": "First, \r\n\r\n   If the target URI includes an authority component, then a\r\n   client MUST send a field-value for Host that is identical to that\r\n   authority component.\r\n\r\nSecondly, section 2.7.1 said:\r\n\r\n   A sender MUST NOT generate an \"http\" URI with an empty host\r\n   identifier.  A recipient that processes such a URI reference MUST\r\n   reject it as invalid.\r\n\r\nSo a recipient MUST reject a request with empty authority.\n --VERIFIER NOTES-- \nAs per Roy T. Fielding: Reject. A target URI can be any URI scheme.",
    "submit_date": "2017-12-25",
    "submitter_name": "Jingcheng Zhang",
    "verifier_id": "116",
    "verifier_name": "Alexey Melnikov",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "5257",
    "doc-id": "RFC7230",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "7",
    "orig_text": "For compatibility with legacy list rules, a recipient MUST parse and\r\nignore a reasonable number of empty list elements: enough to handle\r\ncommon mistakes by senders that merge values, but not so much that\r\nthey could be used as a denial-of-service mechanism.  In other words,\r\na recipient MUST accept lists that satisfy the following syntax:\r\n\r\n  #element => [ ( \",\" / element ) *( OWS \",\" [ OWS element ] ) ]\r\n\r\n  1#element => *( \",\" OWS ) element *( OWS \",\" [ OWS element ] )",
    "correct_text": "For compatibility with legacy list rules, a recipient MUST parse and\r\nignore a reasonable number of empty list elements: enough to handle\r\ncommon mistakes by senders that merge values, but not so much that\r\nthey could be used as a denial-of-service mechanism.  In other words,\r\na recipient MUST accept lists that satisfy the following syntax:\r\n\r\n  #element => [ ( (\",\" OWS element) / element ) *( OWS \",\" [ OWS \r\n    element ] ) ]\r\n\r\n  1#element => *( \",\" OWS ) element *( OWS \",\" [ OWS element ] )",
    "notes": "With the current ABNF rule for #element, and using token as an element, the construction:\r\n\r\n    \",     foobar\" \r\n\r\ncannot be derived from #element, but can be derived from 1#element. (legacy list rule)\r\nSince #element is meant to be a superset of 1#element, lists derived from 1#element should satisfy the #element rule as well.",
    "submit_date": "2018-02-07",
    "submitter_name": "Erwin Pe",
    "verifier_id": "170",
    "verifier_name": "Francesca Palombini",
    "update_date": "2021-08-23 09:31:32"
  },
  {
    "errata_id": "5599",
    "doc-id": "RFC7230",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "GLOBAL",
    "orig_text": "2.3.  Intermediaries \r\n...\r\n   HTTP is defined as a stateless protocol, meaning that each request\r\n   message can be understood in isolation.  Many implementations depend\r\n   on HTTP's stateless design in order to reuse proxied connections or\r\n   dynamically load balance requests across multiple servers.  Hence, a\r\n   server MUST NOT assume that two requests on the same connection are\r\n   from the same user agent unless the connection is secured and\r\n   specific to that agent.\r\n\r\n2.5.  Conformance and Error Handling\r\n...\r\n   A recipient MUST interpret a received protocol element according to\r\n   the semantics defined for it by this specification, including\r\n   extensions to this specification, unless the recipient has determined\r\n   (through experience or configuration) that the sender incorrectly\r\n   implements what is implied by those semantics.  For example, an\r\n   origin server might disregard the contents of a received\r\n   Accept-Encoding header field if inspection of the User-Agent header\r\n   field indicates a specific implementation version that is known to\r\n   fail on receipt of certain content codings.\r\n...\r\n\r\n2.6.  Protocol Versioning\r\n...\r\n   A server MAY send an HTTP/1.0 response to a request if it is known or\r\n   suspected that the client incorrectly implements the HTTP\r\n   specification and is incapable of correctly processing later version\r\n   responses, such as when a client fails to parse the version number\r\n   correctly or when an intermediary is known to blindly forward the\r\n   HTTP-version even when it doesn't conform to the given minor version\r\n   of the protocol.  Such protocol downgrades SHOULD NOT be performed\r\n   unless triggered by specific client attributes, such as when one or\r\n   more of the request header fields (e.g., User-Agent) uniquely match\r\n   the values sent by a client known to be in error.\r\n...",
    "correct_text": "2.3.  Intermediaries \r\n...\r\n   HTTP is defined as a stateless protocol, meaning that each request\r\n   message can be understood in isolation.  Many implementations depend\r\n   on HTTP's stateless design in order to reuse proxied connections or\r\n   dynamically load balance requests across multiple servers.  Hence, a\r\n   server MUST NOT assume that two requests on the same connection are\r\n   from the same user agent unless the connection is secured and\r\n   specific to that agent. User agents MUST include a User-Agent\r\n   request-header field with CONNECT and individual query requests that\r\n   uniquely identify the product making the request thru an\r\n   intermediary.\r\n\r\n2.5.  Conformance and Error Handling\r\n...\r\n   A recipient MUST interpret a received protocol element according to\r\n   the semantics defined for it by this specification, including\r\n   extensions to this specification, unless the recipient has determined\r\n   (through experience or configuration) that the sender incorrectly\r\n   implements what is implied by those semantics.  For example, an\r\n   origin server might disregard the contents of a received\r\n   Accept-Encoding header field if inspection of the User-Agent header\r\n   field indicates a specific implementation version that is known to\r\n   fail on receipt of certain content codings. User agents MUST \r\n   include a User-Agent request-header field with CONNECT and \r\n   individual query requests that uniquely identify the product\r\n   making the request.\r\n...\r\n\r\n2.6.  Protocol Versioning\r\n...\r\n   A server MAY send an HTTP/1.0 response to a request if it is known or\r\n   suspected that the client incorrectly implements the HTTP\r\n   specification and is incapable of correctly processing later version\r\n   responses, such as when a client fails to parse the version number\r\n   correctly or when an intermediary is known to blindly forward the\r\n   HTTP-version even when it doesn't conform to the given minor version\r\n   of the protocol.  Such protocol downgrades SHOULD NOT be performed\r\n   unless triggered by specific client attributes, such as when one or\r\n   more of the request header fields (e.g., User-Agent) uniquely match\r\n   the values sent by a client known to be in error. User agents \r\n   MUST include a User-Agent request-header field with CONNECT and \r\n   individual query requests that uniquely identify the product making\r\n   the request.\r\n...",
    "notes": "User agents MUST include a User-Agent \r\n   request-header field with CONNECT and individual query requests that \r\n   uniquely identify the product making the request thru an intermediary.\r\n\r\nRFC 2616 Sec 14.43 specified made the \"User-Agent\" request-header as optional \"User agents SHOULD include this field with requests.\" But RFC7230 drops most mentions of the User-Agent request-header field. Without this field intermediaries are left guessing. \r\n\r\n\r\nMost of the complaints against including the User-Agent header is the monstrosity they have become an the spoofing. Even if the field only contains a SHA-256 hash of the binary making the request, this would differentiate between processes. But having it is still better from a security and interoperability perceptive.\n --VERIFIER NOTES-- \n   See WG summary at <https://lists.w3.org/Archives/Public/ietf-http-wg/2019JanMar/0029.html>",
    "submit_date": "2019-01-13",
    "submitter_name": "Michael James",
    "verifier_id": "116",
    "verifier_name": "Alexey Melnikov",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "5623",
    "doc-id": "RFC7230",
    "errata_status_code": "Rejected",
    "errata_type_code": "Editorial",
    "section": "2.7",
    "orig_text": "absolute-URI  = <absolute-URI, see [RFC3986], Section 4.3>",
    "correct_text": null,
    "notes": "RFC3986 defines \"absolute-URI\" very openly, especially regarding to \"hier-part\":\r\n\r\n      absolute-URI  = scheme \":\" hier-part [ \"?\" query ]\r\n\r\n      hier-part   = \"//\" authority path-abempty\r\n                  / path-absolute\r\n                  / path-rootless\r\n                  / path-empty\r\n\r\nThe impact is reflected in RFC 7231 in the definition of the header fields Referer and Content-Location.\r\n\r\n      absolute-URI = <absolute-URI, see [RFC7230], Section 2.7>\r\n\r\nThus, following examples of header values are considered valid\r\n\r\nReferer: https:foo/bar\r\nReferer: https:/foo\r\nReferer: https:/\r\nReferer: foo:/\r\n\r\nI'd suggest to define \"hier-part\" (but also \"scheme\") more strictly.\n --VERIFIER NOTES-- \n   As per WG discussion: <https://lists.w3.org/Archives/Public/ietf-http-wg/2019JanMar/0130.html>",
    "submit_date": "2019-02-05",
    "submitter_name": "Armin Abfalterer",
    "verifier_id": "116",
    "verifier_name": "Alexey Melnikov",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "5964",
    "doc-id": "RFC7230",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "2.7.1",
    "orig_text": "   The URI generic syntax for authority also includes a deprecated\r\n   userinfo subcomponent ([RFC3986], Section 3.2.1) for including user\r\n   authentication information in the URI.  Some implementations make use\r\n   of the userinfo component for internal configuration of\r\n   authentication information, such as within command invocation\r\n   options, configuration files, or bookmark lists, even though such\r\n   usage might expose a user identifier or password.  A sender MUST NOT\r\n   generate the userinfo subcomponent (and its \"@\" delimiter) when an\r\n   \"http\" URI reference is generated within a message as a request\r\n   target or header field value.  Before making use of an \"http\" URI\r\n   reference received from an untrusted source, a recipient SHOULD parse\r\n   for userinfo and treat its presence as an error; it is likely being\r\n   used to obscure the authority for the sake of phishing attacks.\r\n",
    "correct_text": "   The URI generic syntax for authority also includes a\r\n   userinfo subcomponent in which the format \"user:password\" is deprecated\r\n   ([RFC3986], Section 3.2.1).  The user is permitted, but the password\r\n   is not.  Some implementations make use\r\n   of the userinfo component for internal configuration of\r\n   authentication information, such as within command invocation\r\n   options, configuration files, or bookmark lists, even though such\r\n   usage might expose a user identifier or password.  A sender MUST NOT\r\n   generate a colon in a userinfo subcomponent when an\r\n   \"http\" URI reference is generated within a message as a request\r\n   target or header field value, but it may prefix a user and an \"@\" delimiter\r\n   before the host name in an \"http\" URI.  Before making use of an \"http\" URI\r\n   reference received from an untrusted source, a recipient SHOULD parse\r\n   for userinfo and treat the presence of a colon in it as an error.\r\n",
    "notes": "RFC3986 does not forbid or even discourage the \"user\" in the userinfo subcomponent.  It only says\r\n\r\n   Use of the format \"user:password\" in the userinfo field is\r\n   deprecated.\r\n\r\nand continues to describe \":password\" handling.\r\n\r\nObscuring the authority for the purposes of phishing is not mitigated by parsing the userinfo; subdomains in DNS offer similar notational flexibility.  Parsing does help against misleading password popups.\r\n\r\nThe user is part of the authority section of the URI and its purpose is to zoom in on a scope for authoritative resource addressing.  This syntax has in the past been (ab)used for Basic/Digest authentication details, which only works if visitor and visited resource happen to be the same user; it is this (ab)use that is now deprecated.\r\n\r\n===========================\r\nVerifier notes:\r\nThis is not really an erratum, as the document says exactly what it was intended to say when it was written.  That said, the issue does need to be discussed as the document is updated, and an update is planned... so I'm marking it \"Held for Document Update\", rather than \"Rejected\".",
    "submit_date": "2020-01-23",
    "submitter_name": "Rick van Rein",
    "verifier_id": "130",
    "verifier_name": "Barry Leiba",
    "update_date": "2020-02-05 06:39:06"
  },
  {
    "errata_id": "6333",
    "doc-id": "RFC7230",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "3.2.6 (PDF)",
    "orig_text": "     tchar          = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"’\" / \"*\"\r\n                    / \"+\" / \"-\" / \".\" / \"^\" / \"_\" / \"‘\" / \"|\" / \"~\"",
    "correct_text": "     tchar          = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" / \"*\"\r\n                    / \"+\" / \"-\" / \".\" / \"^\" / \"_\" / \"`\" / \"|\" / \"~\"",
    "notes": "The generated PDF contains misleading right and left quotes (U+8217 and U+8216), which are not ASCII characters. The text and html versions of the RFC have the correct apostrophe and grave accent characters (' and `).\n --VERIFIER NOTES-- \n   Errata reports only apply to the canonical version of the published RFCs; in this case, that's the rfc7230.txt file, not the generated PDF.",
    "submit_date": "2020-11-13",
    "submitter_name": "Jeff Brower",
    "verifier_id": "130",
    "verifier_name": "Barry Leiba",
    "update_date": "2020-11-13 11:47:52"
  },
  {
    "errata_id": "6565",
    "doc-id": "RFC7230",
    "errata_status_code": "Rejected",
    "errata_type_code": "Editorial",
    "section": "section-6.3",
    "orig_text": "   o  If the received protocol is HTTP/1.0, the \"keep-alive\" connection\r\n      option is present, the recipient is not a proxy, and the recipient\r\n      wishes to honor the HTTP/1.0 \"keep-alive\" mechanism, the\r\n      connection will persist after the current response; otherwise,\r\n\r\n   o  The connection will close after the current response.",
    "correct_text": "   o  If the received protocol is HTTP/1.0, the \"keep-alive\" connection\r\n      option is present, the recipient is not a proxy, and the recipient\r\n      wishes to honor the HTTP/1.0 \"keep-alive\" mechanism, the\r\n      connection will persist after the current response; otherwise, the\r\n      connection will close after the current response.\r\n",
    "notes": "Error on breaking paragraph.\n --VERIFIER NOTES-- \n   This paragraph split into two bullets was meant to be as is in the document, for readability.",
    "submit_date": "2021-04-29",
    "submitter_name": "Alissa Tung",
    "verifier_id": "170",
    "verifier_name": "Francesca Palombini",
    "update_date": "2021-04-29 03:01:36"
  },
  {
    "errata_id": "7309",
    "doc-id": "RFC7230",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "0881036334606",
    "orig_text": "RFC 2119",
    "correct_text": "RFC 2119",
    "notes": "syntac",
    "submit_date": "2023-01-16",
    "submitter_name": "MOCHAMMAD FAUJAN",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": null
  }
]
