[
  {
    "errata_id": 410,
    "doc-id": "RFC2617",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": null,
    "orig_text": null,
    "correct_text": null,
    "notes": "All known errata for this HTTP RFC will be found at: \r\nhttp://purl.org/NET/http-errata and \r\nhttp://www.w3.org/Protocols/HTTP/1.1/rfc2616bis/issues/\r\n\r\n",
    "submit_date": "2001-01-05",
    "submitter_name": "Scott Lawrence",
    "verifier_id": 2,
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 606,
    "doc-id": "RFC2617",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": 3.6,
    "orig_text": "These headers are instances of the Proxy-Authenticate and\r\nProxy-Authorization headers specified in sections 10.33 and 10.34 of the\r\nHTTP/1.1 specification [2] ...",
    "correct_text": "These headers are instances of the Proxy-Authenticate and\r\nProxy-Authorization headers specified in sections 14.33 and 14.34 of the\r\nHTTP/1.1 specification [2] ...",
    "notes": "Wrong section references in RFC 2616.\r\n\r\nReported by Julian Reschke on an IETF mailing list.",
    "submit_date": "2007-10-17",
    "submitter_name": "St√©phane Bortzmeyer",
    "verifier_id": 116,
    "verifier_name": "Alexey Melnikov",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 1431,
    "doc-id": "RFC2617",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": "3.2.2.1",
    "orig_text": "   If the \"qop\" value is \"auth\" or \"auth-int\":\r\n\r\n      request-digest  = <\"> < KD ( H(A1),     unq(nonce-value)\r\n                                          \":\" nc-value\r\n                                          \":\" unq(cnonce-value)\r\n                                          \":\" unq(qop-value)\r\n                                          \":\" H(A2)\r\n                                  ) <\">",
    "correct_text": "   If the \"qop\" value is \"auth\" or \"auth-int\":\r\n\r\n      request-digest  = <\"> < KD ( H(A1),     unq(nonce-value)\r\n                                          \":\" nc-value\r\n                                          \":\" unq(cnonce-value)\r\n                                          \":\" unq(qop-value)\r\n                                          \":\" H(A2)\r\n                                  ) > <\">",
    "notes": "The \">\" bracket is missing in the final line, closing the \"<\" bracket of the first line in \"< KD ( H(A1)\"...",
    "submit_date": "2008-05-29",
    "submitter_name": "Stefan Santesson",
    "verifier_id": 116,
    "verifier_name": "Alexey Melnikov",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 1649,
    "doc-id": "RFC2617",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": 5,
    "orig_text": " /* calculate H(A1) as per spec */\r\n      void DigestCalcHA1(\r\n          IN char * pszAlg,\r\n          IN char * pszUserName,\r\n          IN char * pszRealm,\r\n          IN char * pszPassword,\r\n          IN char * pszNonce,\r\n          IN char * pszCNonce,\r\n          OUT HASHHEX SessionKey\r\n          )\r\n      {\r\n            MD5_CTX Md5Ctx;\r\n            HASH HA1;\r\n\r\n            MD5Init(&Md5Ctx);\r\n            MD5Update(&Md5Ctx, pszUserName, strlen(pszUserName));\r\n            MD5Update(&Md5Ctx, \":\", 1);\r\n            MD5Update(&Md5Ctx, pszRealm, strlen(pszRealm));\r\n            MD5Update(&Md5Ctx, \":\", 1);\r\n            MD5Update(&Md5Ctx, pszPassword, strlen(pszPassword));\r\n            MD5Final(HA1, &Md5Ctx);\r\n            if (stricmp(pszAlg, \"md5-sess\") == 0) {\r\n                  MD5Init(&Md5Ctx);\r\n|                 MD5Update(&Md5Ctx, HA1, HASHLEN);\r\n                  MD5Update(&Md5Ctx, \":\", 1);\r\n                  MD5Update(&Md5Ctx, pszNonce, strlen(pszNonce));\r\n                  MD5Update(&Md5Ctx, \":\", 1);\r\n                  MD5Update(&Md5Ctx, pszCNonce, strlen(pszCNonce));\r\n                  MD5Final(HA1, &Md5Ctx);\r\n            };\r\n            CvtHex(HA1, SessionKey);\r\n      };",
    "correct_text": " /* calculate H(A1) as per spec */\r\n      void DigestCalcHA1(\r\n          IN char * pszAlg,\r\n          IN char * pszUserName,\r\n          IN char * pszRealm,\r\n          IN char * pszPassword,\r\n          IN char * pszNonce,\r\n          IN char * pszCNonce,\r\n          OUT HASHHEX SessionKey\r\n          )\r\n      {\r\n            MD5_CTX Md5Ctx;\r\n            HASH HA1;\r\n|           HASHHEX HA1Hex;\r\n\r\n            MD5Init(&Md5Ctx);\r\n            MD5Update(&Md5Ctx, pszUserName, strlen(pszUserName));\r\n            MD5Update(&Md5Ctx, \":\", 1);\r\n            MD5Update(&Md5Ctx, pszRealm, strlen(pszRealm));\r\n            MD5Update(&Md5Ctx, \":\", 1);\r\n            MD5Update(&Md5Ctx, pszPassword, strlen(pszPassword));\r\n            MD5Final(HA1, &Md5Ctx);\r\n            if (stricmp(pszAlg, \"md5-sess\") == 0) {\r\n|                 CvtHex(HA1, HA1Hex);\r\n                  MD5Init(&Md5Ctx);\r\n|                 MD5Update(&Md5Ctx, HA1Hex, HASHHEXLEN);\r\n                  MD5Update(&Md5Ctx, \":\", 1);\r\n                  MD5Update(&Md5Ctx, pszNonce, strlen(pszNonce));\r\n                  MD5Update(&Md5Ctx, \":\", 1);\r\n                  MD5Update(&Md5Ctx, pszCNonce, strlen(pszCNonce));\r\n                  MD5Final(HA1, &Md5Ctx);\r\n            };\r\n            CvtHex(HA1, SessionKey);\r\n      };",
    "notes": "DigestCalcHA1 sample implemention has to be corrected.",
    "submit_date": "2009-01-08",
    "submitter_name": "Ganga Mahesh Siddem",
    "verifier_id": 121,
    "verifier_name": "Peter Saint-Andre",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 1796,
    "doc-id": "RFC2617",
    "errata_status_code": "Rejected",
    "errata_type_code": "Editorial",
    "section": "3.2.2.1",
    "orig_text": "3.2.2.1 Request-Digest\r\n\r\n   If the \"qop\" value is \"auth\" or \"auth-int\":\r\n\r\n      request-digest  = <\"> < KD ( H(A1),     unq(nonce-value)\r\n                                          \":\" nc-value\r\n                                          \":\" unq(cnonce-value)\r\n                                          \":\" unq(qop-value)\r\n                                          \":\" H(A2)\r\n                                  ) <\">\r\n\r\n   If the \"qop\" directive is not present (this construction is for\r\n   compatibility with RFC 2069):\r\n\r\n      request-digest  =\r\n                 <\"> < KD ( H(A1), unq(nonce-value) \":\" H(A2) ) >\r\n   <\">",
    "correct_text": "3.2.2.1 Request-Digest\r\n\r\n   If the \"qop\" value is \"auth\" or \"auth-int\":\r\n\r\n      request-digest  = <\"> < KD ( H(A1)  \":\" unq(nonce-value)\r\n                                          \":\" nc-value\r\n                                          \":\" unq(cnonce-value)\r\n                                          \":\" unq(qop-value)\r\n                                          \":\" H(A2)\r\n                                  ) <\">\r\n\r\n   If the \"qop\" directive is not present (this construction is for\r\n   compatibility with RFC 2069):\r\n\r\n      request-digest  =\r\n                 <\"> < KD ( H(A1) \":\" unq(nonce-value) \":\" H(A2) ) >\r\n   <\">",
    "notes": "The \",\" after H(A1) should be \":\" in two places.\n --VERIFIER NOTES-- \nKD is defined in the document as:\r\n\r\n  KD(secret, data) = H(concat(secret, \":\", data))\r\n\r\nSo KD takes 2 parameters and the text in the RFC is correct in this respect.\r\n",
    "submit_date": "2009-06-19",
    "submitter_name": "Jerry Conrad",
    "verifier_id": 116,
    "verifier_name": "Alexey Melnikov",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 1914,
    "doc-id": "RFC2617",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "3.2.2.1",
    "orig_text": "3.2.2.1 Request-Digest\r\n\r\n   If the \"qop\" value is \"auth\" or \"auth-int\":\r\n\r\n      request-digest  = <\"> < KD ( H(A1),     unq(nonce-value)\r\n                                          \":\" nc-value\r\n                                          \":\" unq(cnonce-value)\r\n                                          \":\" unq(qop-value)\r\n                                          \":\" H(A2)\r\n                                  ) <\">\r\n\r\n   If the \"qop\" directive is not present (this construction is for\r\n   compatibility with RFC 2069):\r\n\r\n      request-digest  =\r\n                 <\"> < KD ( H(A1), unq(nonce-value) \":\" H(A2) ) >\r\n   <\">\r\n\r\n",
    "correct_text": "3.2.2.1 Request-Digest\r\n\r\n   If the \"qop\" value is \"auth\" or \"auth-int\":\r\n\r\n      request-digest  = <\"> < KD ( H(A1)  \":\" unq(nonce-value)\r\n                                          \":\" nc-value\r\n                                          \":\" unq(cnonce-value)\r\n                                          \":\" unq(qop-value)\r\n                                          \":\" H(A2)\r\n                                  ) <\">\r\n\r\n   If the \"qop\" directive is not present (this construction is for\r\n   compatibility with RFC 2069):\r\n\r\n      request-digest  =\r\n                 <\"> < KD ( H(A1) \":\" unq(nonce-value) \":\" H(A2) ) >\r\n   <\">\r\n\r\n",
    "notes": "Errata 1796 addressing this issue and was rejected, perhaps for editorial or syntax reasons, when the section as it exists does not indicate the need for a \":\" between A1 and unq(nonce-value). The \":\" is most certainly required between these variables if the result of the hash is to be correct.\n --VERIFIER NOTES-- \n   The verifier notes on the rejected Erratum 1796 were as follows:\r\n\r\n   ###\r\n\r\n   KD is defined in the document as:\r\n\r\n   KD(secret, data) = H(concat(secret, \":\", data))\r\n\r\n   So KD takes 2 parameters and the text in the RFC is correct in this respect.\r\n\r\n   ###\r\n\r\n   If there is good reason to pursue this issue further, please do so outside\r\n   the errata process.",
    "submit_date": "2009-10-14",
    "submitter_name": "Larry Westrick",
    "verifier_id": 121,
    "verifier_name": "Peter Saint-Andre",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 1959,
    "doc-id": "RFC2617",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "1.2 p4",
    "orig_text": "       credentials = auth-scheme #auth-param",
    "correct_text": "       credentials = auth-scheme ( token | quoted-string | #auth-param )",
    "notes": "Alexey Melnikov (updated as per suggestion from Paul Leach):\r\n\r\nauth-param doesn't allow for parameters with no '=', so Basic is non conformant to the generic syntax.\r\n\r\nMultiple versions of token/quoted-string (with no attribute name) is not allowed, as none of the existing scheme not using auth-param supports that.\r\n\r\n(Note that RFC 2617 is using BNF from RFC 2616, which allows for implied LWS.)\r\n",
    "submit_date": "2009-12-10",
    "submitter_name": "Julian Reschke",
    "verifier_id": 116,
    "verifier_name": "Alexey Melnikov",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 2600,
    "doc-id": "RFC2617",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "3.2.2",
    "orig_text": "digest-uri       = \"uri\" \"=\" digest-uri-value\r\ndigest-uri-value = request-uri   ; As specified by HTTP/1.1",
    "correct_text": "digest-uri       = \"uri\" \"=\" <\"> digest-uri-value <\">\r\ndigest-uri-value = request-uri   ; As specified by HTTP/1.1",
    "notes": "This is an error here that the digest-uri-value is not enclosed in quotation marks; \r\nsee the correct example in Section 3.5:\r\n\r\nAuthorization: Digest username=\"Mufasa\",\r\n        realm=\"testrealm@host.com\",\r\n        nonce=\"dcd98b7102dd2f0e8b11d0f600bfb0c093\",\r\n        uri=\"/dir/index.html\",\r\n        . . .",
    "submit_date": "2010-11-02",
    "submitter_name": "Victor S. Osipov",
    "verifier_id": 121,
    "verifier_name": "Peter Saint-Andre",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 3720,
    "doc-id": "RFC2617",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "3.2.2.4",
    "orig_text": "username=\"Mufasa\", realm=myhost@testrealm.com\r\n",
    "correct_text": "username=\"Mufasa\", realm=\"myhost@testrealm.com\"\r\n",
    "notes": "The realm value within the Authorization header example is missing the quotes.",
    "submit_date": "2013-09-06",
    "submitter_name": "Brett Tate",
    "verifier_id": 130,
    "verifier_name": "Barry Leiba",
    "update_date": "2019-09-10 09:09:03"
  }
]
