[
  {
    "errata_id": "6826",
    "doc-id": "RFC9051",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "GLOBAL",
    "orig_text": "   18.  RFC822, RFC822.HEADER, and RFC822.TEXT FETCH data items were\r\n        deprecated.  Clients should use the corresponding BODY[]\r\n        variants instead.",
    "correct_text": "   18.  RFC822, RFC822.HEADER, and RFC822.TEXT FETCH data items were\r\n        removed. Clients should use the corresponding BODY[]\r\n        variants instead.",
    "notes": "Contrary to the original text, these data items are not deprecated but they were completely removed from the text of the RFC. As far as I see other deprecated items are not removed completely but moved to a '...obsolete...' token in the formal syntax.",
    "submit_date": "2022-02-02",
    "submitter_name": "Hontvári Levente",
    "verifier_id": "164",
    "verifier_name": "Murray Kucherawy",
    "update_date": "2023-07-27 17:05:20"
  },
  {
    "errata_id": "7246",
    "doc-id": "RFC9051",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "7.5.2.",
    "orig_text": "   BINARY[<section-binary>]<<number>>\r\n      An <nstring> or <literal8> expressing the content of the specified\r\n      section after removing any encoding specified in the corresponding\r\n      Content-Transfer-Encoding header field.  If <number> is present,\r\n      it refers to the offset within the DECODED section data.\r\n",
    "correct_text": "   BINARY[<section-binary>]\r\n      An <nstring> or <literal8> expressing the content of the specified\r\n      section after removing any encoding specified in the corresponding\r\n      Content-Transfer-Encoding header field.\r\n",
    "notes": "While a FETCH _request_ can be \"partial\" with <...> for both BODY[] and BINARY[], only a FETCH _response_  for BODY[] can have an optional offset. A FETCH _response_ for BINARY[] cannot have an optional offset. At least according to the ABNF, which I believe is leading.\r\nSee lines 6756 and 6757:  msg-att-static = \"BODY\" section [\"<\" number \">\"] SP nstring / \"BINARY\" section-binary SP (nstring / literal8)\r\nAnd line 6987: section-binary  = \"[\" [section-part] \"]\"\r\n\r\nRFC 3516, IMAP4 Binary Content Extension, from which the original text was probably copied, appears to have the same issue but no errata.",
    "submit_date": "2022-11-12",
    "submitter_name": "Mechiel Lukkien",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": null
  },
  {
    "errata_id": "7323",
    "doc-id": "RFC9051",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "6.4.4.4.",
    "orig_text": "        S: B283 NO [BADCHARSET UTF-8] KOI8-R is not supported\r\n",
    "correct_text": "        S: B283 NO [BADCHARSET (KOI8-R)] KOI8-R is not supported\r\n",
    "notes": "The BADCHARSET response code is described in 7.1 as \"Optionally followed by a parenthesized list of charsets\", and in the formal syntax as:\r\n\r\n   resp-text-code =/ \"BADCHARSET\" [SP \"(\" charset *(SP charset) \")\" ]\r\n\r\nAlthough a client's parser might use a generic resp-text-code (atom [SP 1*<any TEXT-CHAR except \"]\">]) as a fallback, the server should parenthesize even when only one charset is sent.",
    "submit_date": "2023-01-26",
    "submitter_name": "Nicholas Evans",
    "verifier_id": "164",
    "verifier_name": "Murray Kucherawy",
    "update_date": "2023-07-27 17:16:02"
  },
  {
    "errata_id": "7343",
    "doc-id": "RFC9051",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "9",
    "orig_text": "resp-cond-auth  = (\"OK\" / \"PREAUTH\") SP resp-text\r\n                    ; Authentication condition\r\n\r\nresp-cond-bye   = \"BYE\" SP resp-text\r\n\r\nresp-cond-state = (\"OK\" / \"NO\" / \"BAD\") SP resp-text\r\n                    ; Status condition\r\n\r\n...\r\n\r\nresp-text       = [\"[\" resp-text-code \"]\" SP] [text]\r\n\r\n",
    "correct_text": "resp-cond-auth  = (\"OK\" / \"PREAUTH\") [SP resp-text]\r\n                    ; Authentication condition\r\n                    ;\r\n                    ; Servers SHOULD send the trailing SP when resp-text\r\n                    ; is empty.\r\n                    \r\n\r\nresp-cond-bye   = \"BYE\" [SP resp-text]\r\n                    ; Servers SHOULD send the trailing SP when resp-text\r\n                    ; is empty.\r\n\r\nresp-cond-state = (\"OK\" / \"NO\" / \"BAD\") [SP resp-text]\r\n                    ; Status condition\r\n                    ;\r\n                    ; Servers SHOULD send the trailing SP when resp-text\r\n                    ; is empty.\r\n\r\n...\r\n\r\n\r\nresp-text       = \"[\" resp-text-code \"]\" [SP [text]] / [text]\r\n                    ; Servers SHOULD send then trailing SP when\r\n                    ; resp-text-code is present but text is empty.",
    "notes": "Appendix E, Changes from RFC 3501 / IMAP4rev1, item 23 states that \"resp-text ABNF non-terminal was updated to allow for empty text.\"\r\n\r\nIn the spirit of Appendix E. 23, resp-text should allow \"[\" resp-text-code \"]\" without a trailing SP.  Similarly, resp-cond-auth, resp-cond-bye, and resp-cond-state should also allow the trailing SP to be dropped when resp-text is empty.  In all of these cases, the missing SP does not change the semantics of the response, so clients should not require it to be present.  However, for compatibility with clients that strictly adhere to the formal syntax as-is, servers should conservatively send the trailing SP even when text or resp-text is empty.\r\n\r\nThis aligns with existing practice, as some existing IMAP4rev1 servers already fail to send these trailing spaces, and some liberal clients already allow them to be missing.",
    "submit_date": "2023-02-13",
    "submitter_name": "Nicholas Evans",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": null
  },
  {
    "errata_id": "7518",
    "doc-id": "RFC9051",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "4.1.1.",
    "orig_text": "   A set of messages can be referenced by a sequence set containing\r\n   either message sequence numbers or unique identifiers.  See Section 9\r\n   for details.  A sequence set can contain ranges of sequence numbers\r\n   (such as \"5:50\"), an enumeration of specific sequence numbers, or a\r\n   combination of the above.  A sequence set can use the special symbol\r\n   \"*\" to represent the maximum sequence number in the mailbox.  A\r\n   sequence set never contains unique identifiers.",
    "correct_text": "Why am I required to fix someone else's sloppy writing?",
    "notes": "The first and last sentences are in direct contradiction. Clarification is needed.",
    "submit_date": "2023-05-18",
    "submitter_name": "Joó Ádám",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": null
  },
  {
    "errata_id": "7593",
    "doc-id": "RFC9051",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "6.3.10",
    "orig_text": "  C: A001 NAMESPACE\r\n  S: * NAMESPACE ((\"\" \"/\")(\"#mh/\" \"/\" \"X-PARAM\"\r\n      (\"FLAG1\" \"FLAG2\"))) NIL NIL\r\n  S: A001 OK NAMESPACE command completed\r\n\r\n  C: A002 LIST (SPECIAL-USE) \"\" \"*\"\r\n  S: * LIST (\\NonExistent \\Archive) \"/\" Archives\r\n  S: * LIST (\\NonExistent \\Drafts) \"/\" Drafts\r\n  S: * LIST (\\NonExistent \\Junk) \"/\" Junk\r\n  S: * LIST (\\NonExistent \\Sent) \"/\" \"Sent Mail\"\r\n  S: * LIST (\\NonExistent \\Trash) \"/\" \"Deleted Items\"\r\n  S: A002 OK LIST Completed\r\n\r\n  C: A003 LIST (SPECIAL-USE) \"#mh/\" \"*\"\r\n  S: * LIST (\\NonExistent \\Archive) \"/\" \"#mh/Archives\"\r\n  S: * LIST (\\NonExistent \\Drafts) \"/\" \"#mh/Drafts\"\r\n  S: * LIST (\\NonExistent \\Junk) \"/\" \"#mh/Junk\"\r\n  S: * LIST (\\NonExistent \\Sent) \"/\" \"#mh/Sent Mail\"\r\n  S: * LIST (\\NonExistent \\Trash) \"/\" \"#mh/Deleted Items\"\r\n  S: A003 OK LIST Completed\r\n",
    "correct_text": "  C: A001 NAMESPACE\r\n  S: * NAMESPACE ((\"\" \"/\")(\"#mh/\" \"/\" \"X-PARAM\"\r\n      (\"FLAG1\" \"FLAG2\"))) NIL NIL\r\n  S: A001 OK NAMESPACE command completed\r\n\r\n  C: A002 LIST \"\" \"*\"\r\n  S: * LIST (\\NonExistent \\Archive) \"/\" Archives\r\n  S: * LIST (\\NonExistent \\Drafts) \"/\" Drafts\r\n  S: * LIST (\\NonExistent \\Junk) \"/\" Junk\r\n  S: * LIST (\\NonExistent \\Sent) \"/\" \"Sent Mail\"\r\n  S: * LIST (\\NonExistent \\Trash) \"/\" \"Deleted Items\"\r\n  S: A002 OK LIST Completed\r\n\r\n  C: A003 LIST \"#mh/\" \"*\"\r\n  S: * LIST (\\NonExistent \\Archive) \"/\" \"#mh/Archives\"\r\n  S: * LIST (\\NonExistent \\Drafts) \"/\" \"#mh/Drafts\"\r\n  S: * LIST (\\NonExistent \\Junk) \"/\" \"#mh/Junk\"\r\n  S: * LIST (\\NonExistent \\Sent) \"/\" \"#mh/Sent Mail\"\r\n  S: * LIST (\\NonExistent \\Trash) \"/\" \"#mh/Deleted Items\"\r\n  S: A003 OK LIST Completed\r\n",
    "notes": "The SPECIAL-USE LIST option is part of the IMAP4rev1 SPECIAL-USE extension, but has not been carried over in IMAP4rev2.",
    "submit_date": "2023-08-07",
    "submitter_name": "Simon Ser",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": null
  },
  {
    "errata_id": "8001",
    "doc-id": "RFC9051",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "Appendix E",
    "orig_text": "   1.   Support for 64-bit message and body part sizes.\r\n...\r\n   30.  Loosened requirements on servers when closing connections to be\r\n        more aligned with existing practices.",
    "correct_text": "   1.  Support for 64-bit message and body part sizes.\r\n...\r\n   30.  Loosened requirements on servers\r\n        when closing connections to be more aligned with existing practices.\r\n   31.  Response of the SUBSCRIBE command and the UNSUBSCRIBE command\r\n        is changed from tagged NO to tagged OK\r\n        if the mailbox is already subscribed/unsubscribed.",
    "notes": "RFC3501 6.3.6 says:\r\n\r\nThe SUBSCRIBE command adds the specified mailbox name to the server's set of \"active\" or \"subscribed\" mailboxes as returned by the LSUB command. This command returns a tagged OK response only if the subscription is successful.\r\n\r\nAccording to this, SUBSCRIBE command returns a tagged NO response if the mailbox is already subscribed.\r\nhowever, RFC 9501 6.3.7 says:\r\n\r\nThe SUBSCRIBE command adds the specified mailbox name to the server's set of \"active\" or \"subscribed\" mailboxes as returned by the LIST (SUBSCRIBED) command. This command returns a tagged OK response if the subscription is successful or if the mailbox is already subscribed.\r\n\r\nThis can be said that there are not compatible between IMAP4rev1 and IMAP4rev2.\r\nThis problem also occurs in UNSUBSCRIBE command.\r\nI think this should be written in Appendix E.",
    "submit_date": "2024-06-25",
    "submitter_name": "Yasumasa Shimizu",
    "verifier_id": "2",
    "verifier_name": null,
    "update_date": "2024-06-25 12:41:04"
  },
  {
    "errata_id": "8030",
    "doc-id": "RFC9051",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": "6.3.10",
    "orig_text": "The client is designed so that it keeps two 'Deleted Items' mailboxes,\r\none for each namespace\r\n\r\nC: A005 CREATE \"Delete Items\"\r\nS: A005 OK CREATE command completed\r\nC: A006 CREATE \"#mh/Deleted Items\"\r\nS: A006 OK CREATE command completed",
    "correct_text": "The client is designed so that it keeps two 'Deleted Items' mailboxes,\r\none for each namespace\r\n\r\nC: A005 CREATE \"Deleted Items\"\r\nS: A005 OK CREATE command completed\r\nC: A006 CREATE \"#mh/Deleted Items\"\r\nS: A006 OK CREATE command completed",
    "notes": "Simple typographic error in mailbox name. \"Delete Items\" should be \"Deleted Items\".",
    "submit_date": "2024-07-14",
    "submitter_name": "David Harris",
    "verifier_id": "2",
    "verifier_name": "RFC Editor",
    "update_date": "2024-07-15 10:26:36"
  }
]
