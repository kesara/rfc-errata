[
  {
    "errata_id": "3760",
    "doc-id": "RFC6655",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "3",
    "orig_text": "....is 8 octets.  Each value of the\r\n   nonce_explicit MUST be distinct for each distinct invocation of the\r\n   GCM encrypt function for any fixed key.  Failure to meet...",
    "correct_text": "....is 8 octets.  Each value of the\r\n   nonce_explicit MUST be distinct for each distinct invocation of the\r\n   CCM encrypt function for any fixed key.  Failure to meet...",
    "notes": "GCM should be corrected to CCM. The draft discusses the AES-CCM mode of operation.\r\n\r\nspt: Don't think implementers will be confused by this so HFDU.",
    "submit_date": "2013-10-22",
    "submitter_name": "Sandeep S. Kumar",
    "verifier_id": "124",
    "verifier_name": "Sean Turner",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "3761",
    "doc-id": "RFC6655",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": "3",
    "orig_text": "In DTLS, the 64-bit seq_num is the 16-bit epoch concatenated with the\r\n48-bit seq_num.",
    "correct_text": "In DTLS, the 64-bit sequence number is the 16-bit epoch concatenated \r\nwith the 48-bit sequence_number in the order they appear on the wire.",
    "notes": "In DTLS 1.2 (RFC 6347, Sec 4.3.1.), the 48 bit sequence number is indicated as sequence_number. There is no mention of seq_num in the DTLS RFC. \r\nThe additional ordering information is used to keep it consistent with MAC computation in DTLS RFC 6347, Sec 4.1.2.1.)",
    "submit_date": "2013-10-22",
    "submitter_name": "Sandeep S. Kumar",
    "verifier_id": "124",
    "verifier_name": "Sean Turner",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "3987",
    "doc-id": "RFC6655",
    "errata_status_code": "Reported",
    "errata_type_code": "Editorial",
    "section": "4",
    "orig_text": "             CipherSuite TLS_PSK_DHE_WITH_AES_128_CCM_8 = {0xC0,0xAA}\r\n             CipherSuite TLS_PSK_DHE_WITH_AES_256_CCM_8 = {0xC0,0xAB}",
    "correct_text": "             CipherSuite TLS_DHE_PSK_WITH_AES_128_CCM_8 = {0xC0,0xAA}\r\n             CipherSuite TLS_DHE_PSK_WITH_AES_256_CCM_8 = {0xC0,0xAB}",
    "notes": "Since these suites use the DHE_PSK key exchange, their name should start with TLS_DHE_PSK, not TLS_PSK_DHE, which is inconsistent with the general naming scheme of ciphersuites, and with the names of their CCM (as opposed to CCM_8) counterparts.",
    "submit_date": "2014-05-14",
    "submitter_name": "Manuel Pégourié-Gonnard",
    "verifier_id": "2",
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "3990",
    "doc-id": "RFC6655",
    "errata_status_code": "Reported",
    "errata_type_code": "Editorial",
    "section": "6.2",
    "orig_text": "   ... The input and output lengths are as for\r\n   AEAD_AES_128_CCM.  An AEAD_AES_128_CCM_8 ciphertext is exactly 8\r\n   octets longer than its corresponding plaintext.",
    "correct_text": "   ... The input and output lengths are as for\r\n   AEAD_AES_128_CCM.  An AEAD_AES_256_CCM_8 ciphertext is exactly 8\r\n   octets longer than its corresponding plaintext.",
    "notes": "This section is about AEAD_AES_256_CCM_8, so it should describe the length of a cihpertext with this cipher, not with An AEAD_AES_128_CCM_8 (which was the object of the prevous section).",
    "submit_date": "2014-05-16",
    "submitter_name": "Manuel Pégourié-Gonnard",
    "verifier_id": "2",
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  }
]
