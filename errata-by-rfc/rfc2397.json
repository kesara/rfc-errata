[
  {
    "errata_id": 2009,
    "doc-id": "RFC2397",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": 4,
    "orig_text": "data:text/plain;charset=iso-8859-7,%be%fg%be",
    "correct_text": "data:text/plain;charset=iso-8859-7,%be%d3%be",
    "notes": "The given hex encoding \"%fg\" is incorrect, because there is no hexadecimal digit \"g\" (\"f\" is last). A correct hex encoding of any character is permissible here.",
    "submit_date": "2010-01-18",
    "submitter_name": "Alexander Gebel",
    "verifier_id": 116,
    "verifier_name": "Alexey Melnikov",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 2045,
    "doc-id": "RFC2397",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": 3,
    "orig_text": "3. Syntax\r\n\r\n\r\n       dataurl    := \"data:\" [ mediatype ] [ \";base64\" ] \",\" data\r\n       mediatype  := [ type \"/\" subtype ] *( \";\" parameter )\r\n       data       := *urlchar\r\n       parameter  := attribute \"=\" value\r\n\r\n   where \"urlchar\" is imported from [RFC2396], and \"type\", \"subtype\",\r\n   \"attribute\" and \"value\" are the corresponding tokens from [RFC2045],\r\n   represented using URL escaped encoding of [RFC2396] as necessary.",
    "correct_text": "3. Syntax\r\n\r\n\r\n       dataurl    := \"data:\" [ mediatype ] [ \";base64\" ] \",\" data\r\n       mediatype  := [ type \"/\" subtype ] *( \";\" parameter )\r\n       data       := *uric\r\n       parameter  := attribute \"=\" value\r\n\r\n   where \"uric\" is imported from [RFC2396], and \"type\", \"subtype\",\r\n   \"attribute\" and \"value\" are the corresponding tokens from [RFC2045],\r\n   represented using URL escaped encoding of [RFC2396] as necessary.",
    "notes": "\"urlchar\" is not defined in RFC2396, but \"uric\" is (which I think is what was supposed to be used).",
    "submit_date": "2010-02-17",
    "submitter_name": "Julian Reschke",
    "verifier_id": 116,
    "verifier_name": "Alexey Melnikov",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 3214,
    "doc-id": "RFC2397",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": 3,
    "orig_text": "   Attribute values in [RFC2045] are allowed to be either represented as\r\n   tokens or as quoted strings. However, within a \"data\" URL, the\r\n   \"quoted-string\" representation would be awkward, since the quote mark\r\n   is itself not a valid urlchar. For this reason, parameter values\r\n   should use the URL Escaped encoding instead of quoted string if the\r\n   parameter values contain any \"tspecial\".",
    "correct_text": null,
    "notes": "This advice does not work when the character is a delimiter such as \";\".\r\n\r\nExample media type:\r\n\r\n  text/plain;foo=\"bar;charset=iso-8859-1\";charset=UTF-8\r\n\r\n...represented as-is in data uri:\r\n\r\n  data:text/plain;foo=%22bar;charset=iso-8859-1%22;charset=UTF-8,...\r\n\r\n...but following the advice from Section 3:\r\n\r\n  data:text/plain;foo=bar;charset=iso-8859-1;charset=UTF-8,...\r\n\r\nwhich makes the charset parameter ambiguous.\r\n\r\nProposal for document update:\r\n\r\n1) Keep the text pointing out double quotes will look awkward.\r\n\r\n2) Insist on them being handled as per RFC 2045, when present.\r\n\r\n3) Either remove the last sentence (after checking whether it's done in practice), or clarify which additional non-token characters are allowed here.",
    "submit_date": "2012-05-06",
    "submitter_name": "Julian Reschke",
    "verifier_id": 130,
    "verifier_name": "Barry Leiba",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 3360,
    "doc-id": "RFC2397",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "GLOBAL",
    "orig_text": "The \"data\" URL scheme",
    "correct_text": "The \"data\" URI scheme",
    "notes": "The text refers to \"URL\" throughout, but to be correct, these are actually URIs.\n --VERIFIER NOTES-- \n\"URI\"s are first documented in RFC 2396, which was developed at the same time as RFC 2397.  At the time the document that became 2397 was approved, \"URL\" was the correct term.  While it's correct that \"URI\" is the preferred term now, \"URL\" is also correct, and is the term that was in use when this document was written.  This is not an error in the document.",
    "submit_date": "2012-09-20",
    "submitter_name": "Lance E Sloan",
    "verifier_id": 130,
    "verifier_name": "Barry Leiba",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 4124,
    "doc-id": "RFC2397",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": 2,
    "orig_text": "   The <mediatype> is an Internet media type specification (with\r\n   optional parameters.)",
    "correct_text": "   The <mediatype> is an Internet media type specification (with\r\n   optional parameters).",
    "notes": "Periods go inside parentheses only if an entire sentence is inside the parentheses.",
    "submit_date": "2014-09-26",
    "submitter_name": "Xue Fuqiao",
    "verifier_id": 130,
    "verifier_name": "Barry Leiba",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 5923,
    "doc-id": "RFC2397",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": 3,
    "orig_text": "3. Syntax\r\n\r\n       dataurl    := \"data:\" [ mediatype ] [ \";base64\" ] \",\" data\r\n       mediatype  := [ type \"/\" subtype ] *( \";\" parameter )\r\n       data       := *uric\r\n       parameter  := attribute \"=\" value\r\n\r\n   where \"uric\" is imported from [RFC2396], and \"type\", \"subtype\",\r\n   \"attribute\" and \"value\" are the corresponding tokens from [RFC2045],\r\n   represented using URL escaped encoding of [RFC2396] as necessary.\r\n\r\n   Attribute values in [RFC2045] are allowed to be either represented as\r\n   tokens or as quoted strings. However, within a \"data\" URL, the\r\n   \"quoted-string\" representation would be awkward, since the quote mark\r\n   is itself not a valid urlchar. For this reason, parameter values\r\n   should use the URL Escaped encoding instead of quoted string if the\r\n   parameter values contain any \"tspecial\".",
    "correct_text": "3. Syntax\r\n\r\n       dataurl    := \"data:\" [ mediatype ] [ \";base64\" ] \",\" data\r\n       mediatype  := [ type \"/\" subtype ] *( \";\" parameter )\r\n       data       := *uric\r\n       parameter  := attribute \"=\" value\r\n       value      := token\r\n\r\n   where \"uric\" is imported from [RFC2396], and \"type\", \"subtype\",\r\n   \"attribute\" and \"token\" are the corresponding syntax from [RFC2045],\r\n   with values represented using %xx escaped encoding of [RFC2396] as\r\n   necessary.\r\n\r\n   Parameter values in [RFC2045] are allowed to be either represented as\r\n   tokens or as quoted strings. However, within a \"data\" URL, the\r\n   \"quoted-string\" representation would be awkward, since the quote mark\r\n   is itself not a valid urlchar. For this reason, parameter values are\r\n   required to be represented as tokens and %xx encoding MUST be used for\r\n   \"tspecials\" characters within them.",
    "notes": "Section 3 is not clear about excluding the \"quoted-string\" production completely as opposed to permitting it through percent-encoding, resulting in ambiguity for interpretation of URLs such as \"data:text/example;foo=%22bar%22,*baz*\". But Section 5 refers to accepted changes that 'eliminate \"quoted printable\" as an encoding since it would not easily yield valid URLs without additional %xx encoding, which itself is sufficient', so it seems that the intent is to *replace* quoted-string and always interpret percent-encoded characters as content (i.e., that my example corresponds with `Content-Type: text/example; foo=\"\\\"bar\\\"\"` rather than `Content-Type: text/example;foo=\"bar\").",
    "submit_date": "2019-11-29",
    "submitter_name": "Richard Gibson",
    "verifier_id": 99,
    "verifier_name": null,
    "update_date": null
  }
]
