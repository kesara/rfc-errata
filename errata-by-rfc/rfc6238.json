[
  {
    "errata_id": 2866,
    "doc-id": "RFC6238",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "99Appendix B says",
    "orig_text": "The test token shared secret uses the ASCII string value\r\n\"12345678901234567890\".",
    "correct_text": "The test token shared secrets use the following ASCII string values:\r\n- HMAC-SHA1: \"12345678901234567890\" (20 bytes)\r\n- HMAC-SHA256: \"12345678901234567890123456789012\" (32 bytes)\r\n- HMAC-SHA512:\r\n  \"1234567890123456789012345678901234567890123456789012345678901234\" (64 bytes)",
    "notes": "The secret values are different for different hash types. The example Java code respects this, but the test vector documentation does not.",
    "submit_date": "2011-07-20",
    "submitter_name": "Michal Altair Valasek",
    "verifier_id": 2,
    "verifier_name": "Sean Turner",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 3338,
    "doc-id": "RFC6238",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": 1.2,
    "orig_text": "Basically, the output of the HMAC-SHA-1 calculation is truncated to\r\nobtain user-friendly values:",
    "correct_text": "The output of the HMAC-SHA-1 calculation is truncated to\r\nobtain user-friendly values:",
    "notes": "Starting a sentence with `Basically' is often considered bad form.\r\nQualifiers such as basically add nothing to the sentence and should\r\ngenerally be avoided.",
    "submit_date": "2012-09-06",
    "submitter_name": "Samuel Whited",
    "verifier_id": 124,
    "verifier_name": "Sean Turner",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 3339,
    "doc-id": "RFC6238",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": 4.2,
    "orig_text": "Basically, we define TOTP as TOTP = HOTP(K, T), where T is an integer\r\nand represents the number of time steps between the initial counter\r\ntime T0 and the current Unix time.",
    "correct_text": "We define TOTP as TOTP = HOTP(K, T), where T is an integer\r\nand represents the number of time steps between the initial counter\r\ntime T0 and the current Unix time.",
    "notes": "As mentioned in a previous errata, starting a sentence with\r\n`Basically' is often considered bad form. Qualifiers such as\r\nbasically add nothing to the sentence and should generally be\r\navoided.",
    "submit_date": "2012-09-06",
    "submitter_name": "Samuel Whited",
    "verifier_id": 124,
    "verifier_name": "Sean Turner",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 4249,
    "doc-id": "RFC6238",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": 4.2,
    "orig_text": "The provisioning flow is out of scope of this document; refer to\r\n[RFC6030] for such provisioning container specifications.",
    "correct_text": null,
    "notes": "It's insufficient to simply refer to RFC6030 here. See RFC6030 §4.3.4 where it states that the precise semantics of fields such as the <Suite> element are defined according to the algorithm profile. It does provide in §10 the definitions for HOTP and PIN algorithms — but it doesn't give them for TOTP because the standardisation of TOTP came later.\r\n\r\nSo *someone* needs to tell us what strings to put in the <Suite> element to indicate SHA1/SHA256/SHA512 etc.  Either an update to RFC6030, or I would have thought it was better done with a section in RFC6238... which is missing.\r\n\r\nAm I missing something?",
    "submit_date": "2015-01-30",
    "submitter_name": "David Woodhouse",
    "verifier_id": 99,
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 4530,
    "doc-id": "RFC6238",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "Appendix A",
    "orig_text": " public static String generateTOTP(String key,\r\n             String time,\r\n             String returnDigits){\r\n         return generateTOTP(key, time, returnDigits, \"HmacSHA1\");\r\n     }",
    "correct_text": null,
    "notes": "Function will be recursive on his self. Maybe forget a second condition or statement?",
    "submit_date": "2015-11-11",
    "submitter_name": "Simone Campagna",
    "verifier_id": 2,
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 4678,
    "doc-id": "RFC6238",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "Appendix A",
    "orig_text": "* @return: a numeric String in base 10 that includes\r\n*              {@link truncationDigits} digits",
    "correct_text": "* @return: a numeric String in base 10 that includes\r\n*              {@link DIGITS_POWER} digits",
    "notes": "The JavaDoc for the functions refers to truncationDigits, which doesn't exist in the example code. I think the authors mean the DIGITS_POWER array.\r\n\r\nNote that this happens four times for the four different versions of the generateTOTP() method.",
    "submit_date": "2016-04-27",
    "submitter_name": "Osric Wilkinson",
    "verifier_id": 2,
    "verifier_name": "Stephen Farrell",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 4881,
    "doc-id": "RFC6238",
    "errata_status_code": "Reported",
    "errata_type_code": "Editorial",
    "section": 8.2,
    "orig_text": "   [CN]       Coron, J. and D. Naccache, \"An Accurate Evaluation of\r\n              Maurer's Universal Test\", LNCS 1556, February 1999,\r\n              <http://www.gemplus.com/smart/rd/publications/pdf/\r\n              CN99maur.pdf>.",
    "correct_text": "   [CN]       Coron, J. and D. Naccache, \"An Accurate Evaluation of\r\n              Maurer's Universal Test\", Selected Areas in Cryptography: \r\n              SAC 1998, Lecture Notes in Computer Science Vol. 1556, \r\n              pp. 57-71, DOI: 10.1007/3-540-48892-8_5, February 1999,\r\n              <http://www.jscoron.fr/publications/universal.pdf>.",
    "notes": "Gemplus (today Gemalto) no longer provide thie linked research paper.",
    "submit_date": "2016-12-07",
    "submitter_name": "Malte Simon",
    "verifier_id": 99,
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 5132,
    "doc-id": "RFC6238",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "Appendix B",
    "orig_text": "The test token shared secret uses the ASCII string value\r\n   \"12345678901234567890\"",
    "correct_text": "The test token used for each SHA mode is:\r\n// Seed for HMAC-SHA1 - 20 bytes\r\n         String seed = \"3132333435363738393031323334353637383930\";\r\n         // Seed for HMAC-SHA256 - 32 bytes\r\n         String seed32 = \"3132333435363738393031323334353637383930\" +\r\n         \"313233343536373839303132\";\r\n         // Seed for HMAC-SHA512 - 64 bytes\r\n         String seed64 = \"3132333435363738393031323334353637383930\" +\r\n         \"3132333435363738393031323334353637383930\" +\r\n         \"3132333435363738393031323334353637383930\" +\r\n         \"31323334\";",
    "notes": "The text suggests that the secret \"12345678901234567890\" is used, when in fact this value cannot be found in the reference implementation test generation code and leads to different values (as is expected). The actual secret used is called seed, seed32 and seed64 in the reference implementation test generation code.",
    "submit_date": "2017-09-28",
    "submitter_name": "Gerrit Jansen van Vuuren",
    "verifier_id": 99,
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  }
]
