[
  {
    "errata_id": "1958",
    "doc-id": "RFC3711",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "1",
    "orig_text": "   This document describes the Secure Real-time Transport Protocol\r\n   (SRTP), a profile of the Real-time Transport Protocol (RTP), which\r\n   can provide confidentiality, message authentication, and replay\r\n   protection to the RTP traffic and to the control traffic for RTP,\r\n   RTCP (the Real-time Transport Control Protocol) [RFC3350].\r\n",
    "correct_text": "   This document describes the Secure Real-time Transport Protocol\r\n   (SRTP), a profile of the Real-time Transport Protocol (RTP), which\r\n   can provide confidentiality, message authentication, and replay\r\n   protection to the RTP traffic and to the control traffic for RTP,\r\n   RTCP (the Real-time Transport Control Protocol) [RFC3550].\r\n",
    "notes": "Reference is made to the RFC pertaining RTP, which is 3550, not 3350.",
    "submit_date": "2009-12-10",
    "submitter_name": "Jaap Keuter",
    "verifier_id": "118",
    "verifier_name": "Robert Sparks",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "3420",
    "doc-id": "RFC3711",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "3.1.",
    "orig_text": "   The \"Encrypted Portion\" of an SRTP packet consists of the encryption\r\n   of the RTP payload (including RTP padding when present) of the\r\n   equivalent RTP packet.",
    "correct_text": "   The \"Encrypted Portion\" of an SRTP packet consists of the encryption\r\n   of the RTP payload (including RTP padding and RTP pad count when present)\r\n   of the equivalent RTP packet.  ",
    "notes": "In Figure 1 \"RTP padding\" and \"RTP pad count\" are different things. The text should use the same terminology in order to make clear that the padding count is encrypted.",
    "submit_date": "2012-11-28",
    "submitter_name": "Matthias Schertler",
    "verifier_id": "123",
    "verifier_name": "Gonzalo Camarillo",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "3712",
    "doc-id": "RFC3711",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "4.3.2",
    "orig_text": "Replace the SRTP index by the 32-bit quantity: 0 || SRTCP index\r\n (i.e., excluding the E-bit, replacing it with a fixed 0-bit), and use\r\n<label> = 0x03 for the SRTCP encryption key, <label> = 0x04 for the\r\nSRTCP authentication key, and, <label> = 0x05 for the SRTCP salting\r\nkey.",
    "correct_text": "Replace the SRTP index by the 48-bit quantity: 000...0 || 0 || SRTCP\r\nindex (i.e., excluding the E-bit, replacing it with a fixed 0-bit and\r\npadding the result so that it becomes 48 bits wide to match the size\r\nof the SRTP index). Since this quantity and the SRTP index are both\r\n48 bits wide, the labels are all located in the same octet in the IV.\r\nThe labels for the derivations of the SRTCP keys are as follows:   \r\n<label> = 0x03 for the SRTCP encryption key, <label> = 0x04 for the \r\nSRTCP authentication key, and, <label> = 0x05 for the SRTCP salting \r\nkey.\r\n",
    "notes": "Replacing with a 32-bit quantity means that the DIV operator will\r\nyield a 32-bit quantity.  Following the specification of key_id for SRTCP\r\nthe <label> will have 32 bits to its right when XOR'ing with master_salt.\r\n\r\nThe majority of implementations, including libsrtp, invokes this XOR with the\r\n<label> at the same position as for SRTP.  According to the specification\r\nthis should be done 16 bits to the right of this, when invoking for SRTCP.",
    "submit_date": "2013-08-27",
    "submitter_name": "Christian S Oien",
    "verifier_id": "136",
    "verifier_name": "Richard Barnes",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "4425",
    "doc-id": "RFC3711",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "3.4",
    "orig_text": "      0                   1                   2                   3\r\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\r\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+<+\r\n     |V=2|P|    RC   |   PT=SR or RR   |             length          | |\r\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ |\r\n",
    "correct_text": "      0                   1                   2                   3\r\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\r\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+<+\r\n     |V=2|P|    RC   |   PT=SR or RR |             length          | |\r\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ |\r\n",
    "notes": "The boundary between the \"PT=SR or RR\" and the \"length\" fields is wrong: The boundary is shown as being between bits 16 and 17; it should be between bits 15 and 16.  I.e., the \"PT=SR or RR\" field should be 8 bits long, not 9.\r\n\r\nThis is just a minor bug, because the equivalent diagram in RFC 3550 (the normative reference for RTCP) is correct.  Nonetheless, this bug should probably be added to the errata for RFC 3711",
    "submit_date": "2015-07-22",
    "submitter_name": "Ross Finlayson",
    "verifier_id": "147",
    "verifier_name": "Ben Campbell",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "4514",
    "doc-id": "RFC3711",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "3.1",
    "orig_text": "The format of an SRTP packet is illustrated in Figure 1.\r\n\r\n   0                   1                   2                   3\r\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\r\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+<+",
    "correct_text": "The format of an SRTP packet is illustrated in Figure 1.\r\n\r\n 0                   1                   2                   3\r\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\r\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+<+",
    "notes": "The bit index second decimal digit is shifted by two characters. These digits should align with the zeros in the second line.",
    "submit_date": "2015-10-29",
    "submitter_name": "Bernhard Kirchen",
    "verifier_id": "147",
    "verifier_name": "Ben Campbell",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "7606",
    "doc-id": "RFC3711",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "B.3",
    "orig_text": "   This section provides test data for the default key derivation\r\n   function, which uses AES-128 in Counter Mode.  In the following, we\r\n   walk through the initial key derivation for the AES-128 Counter Mode\r\n   cipher, which requires a 16 octet session encryption key and a 14\r\n   octet session salt, and an authentication function which requires a\r\n   94-octet session authentication key.\r\n\r\n(...)\r\n\r\n   Below, the auth key is shown on the left, while the corresponding AES\r\n   input blocks are shown on the right.\r\n\r\n   auth key                           AES input blocks\r\n   CEBE321F6FF7716B6FD4AB49AF256A15   0EC675AD498AFEEAB6960B3AABE60000\r\n   6D38BAA48F0A0ACF3C34E2359E6CDBCE   0EC675AD498AFEEAB6960B3AABE60001\r\n   E049646C43D9327AD175578EF7227098   0EC675AD498AFEEAB6960B3AABE60002\r\n   6371C10C9A369AC2F94A8C5FBCDDDC25   0EC675AD498AFEEAB6960B3AABE60003\r\n   6D6E919A48B610EF17C2041E47403576   0EC675AD498AFEEAB6960B3AABE60004\r\n   6B68642C59BBFC2F34DB60DBDFB2       0EC675AD498AFEEAB6960B3AABE60005",
    "correct_text": "   This section provides test data for the default key derivation\r\n   function, which uses AES-128 in Counter Mode.  In the following, we\r\n   walk through the initial key derivation for the AES-128 Counter Mode\r\n   cipher, which requires a 16 octet session encryption key and a 14\r\n   octet session salt, and an authentication function which requires a\r\n   20-octet session authentication key.\r\n\r\n(...)\r\n\r\n   Below, the auth key is shown on the left, while the corresponding AES\r\n   input blocks are shown on the right.\r\n\r\n   auth key blocks                    AES input blocks\r\n   CEBE321F6FF7716B6FD4AB49AF256A15   0EC675AD498AFEEAB6960B3AABE60000\r\n   6D38BAA4                           0EC675AD498AFEEAB6960B3AABE60001\r\n \r\n   auth key: CEBE321F6FF7716B6FD4AB49AF256A156D38BAA4",
    "notes": "The RFC specifies a 160 bit, 20-octet session authentication key throughout (section 5.2, Section 8.2, Section 9.2 and Section 9.5), but the vectors and derivation in section B.3 specifies the need for a 94-octet session key, and includes test vectors as such.",
    "submit_date": "2023-08-17",
    "submitter_name": "David Satterlee",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": null
  }
]
