[
  {
    "errata_id": 170,
    "doc-id": "RFC4187",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "4.2.5",
    "orig_text": "          |                            +------------------------------+\r\n          |                            | Server does not accept       |\r\n          |                            | The fast re-authentication   |\r\n          |                            | Identity                     |\r\n          |                            +------------------------------+\r\n          |                                                       |\r\n          :                                                       :\r\n          :                                                       :\r\n\r\n\r\n          :                                                       :\r\n          :                                                       :\r\n          |     EAP-Request/AKA-Identity                          |\r\n          |     (AT_FULLAUTH_ID_REQ)                              |\r\n          |<------------------------------------------------------|",
    "correct_text": "          |                            +------------------------------+\r\n          |                            | Server does not accept       |\r\n          |                            | The fast re-authentication   |\r\n          |                            | Identity                     |\r\n          |                            +------------------------------+\r\n          |                                                       |\r\n          |     EAP-Request/AKA-Identity                          |\r\n          |     (AT_FULLAUTH_ID_REQ)                              |\r\n          |<------------------------------------------------------|",
    "notes": "In Section 4.2.5, Figure 9 (on page 31) contains six lines that\r\nmight erroneously be misunderstod to indicate the omission of\r\nsome protocol steps (which is not the case).\r\nI suspect that this is an artifact from a draft version where\r\nFigure 9 was split over two pages; after joining the parts,\r\nthese continuation indicators have become ambiguous, and hence\r\nshould be deleted.\r\n\r\nfrom pending",
    "submit_date": "2006-11-26",
    "submitter_name": "Alfred Hoenes",
    "verifier_id": 105,
    "verifier_name": "ron bonica",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 959,
    "doc-id": "RFC4187",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": 99,
    "orig_text": "(1)  [misleading wording]\r\n\r\nIn Section 3, the RFC text at the bottom of page 13 says:\r\n\r\n            [...].  In certain circumstances, shown in Figure 4, it is\r\n   possible for the sequence numbers to get out of sequence.\r\n\r\nThis sentence is misleading. Figure 4 only shows the *discovery*\r\nof the de-synchronization; it does not show 'certain circumstances'\r\nthat might lead to this problem.\r\n\r\n\r\n(2)  [typo]\r\n\r\nOn page 18, the second paragraph of Section 4.1.1.7 says:\r\n\r\n                                                         [...].  It is\r\n   recommended that the EAP servers implement some centralized mechanism\r\n   to allow all EAP servers of the home operator to map pseudonyms\r\n|  generated by other severs to the permanent identity.  [...]\r\n                      ^^^^^^\r\nIt should say:\r\n                                                         [...].  It is\r\n   recommended that the EAP servers implement some centralized mechanism\r\n   to allow all EAP servers of the home operator to map pseudonyms\r\n|  generated by other servers to the permanent identity.  [...]\r\n                        ^\r\n\r\n(3)  [missing article]\r\n\r\nThe last paragraph of Section 4.1.1.8, on page 20, says:\r\n\r\n   If the peer does not receive a new pseudonym username in the\r\n   EAP-Request/AKA-Challenge message, the peer MAY use an old pseudonym\r\n   username instead of the permanent username on next full\r\n   authentication.  [...]\r\n\r\nIt should say:\r\n\r\n   If the peer does not receive a new pseudonym username in the\r\n   EAP-Request/AKA-Challenge message, the peer MAY use an old pseudonym\r\n|  username instead of the permanent username on the next full\r\n   authentication.  [...]\r\n                                                ^^^^^\r\n\r\n(4)  [grammar / misleading punctuation]\r\n\r\nThe last paragraph of Section 4.1.2.1, on page 22, says:\r\n\r\n   Please note that only the EAP-AKA peer and the EAP-AKA server process\r\n|  the AT_IDENTITY attribute and entities that pass through; EAP packets\r\n   do not process this attribute.  [...]\r\n                            ^                              ^^\r\nIt should say:\r\n\r\n   Please note that only the EAP-AKA peer and the EAP-AKA server process\r\n|  the AT_IDENTITY attribute, and entities that pass through EAP packets\r\n   do not process this attribute.  [...]\r\n                            ^^                              ^\r\n\r\n\r\n(5)  [missing article]\r\n\r\nThe first paragraph of Section 4.1.3, on top of page 23, says:\r\n\r\n|  If EAP-AKA peer is started upon receiving an EAP-Request/Identity\r\n   message, then the peer MAY use an EAP-AKA identity in the EAP-\r\n   Response/Identity packet.  [...]\r\n\r\nIt should say:\r\n\r\n|  If an EAP-AKA peer is started upon receiving an EAP-Request/Identity\r\n   message, then the peer MAY use an EAP-AKA identity in the EAP-\r\n   Response/Identity packet.  [...]\r\n\r\n\r\n(6)  [grammar]\r\n\r\nThe second paragraph of Section 4.1.4, on mid-page 23, says:\r\n\r\n   If the server chooses to not ignore the contents of\r\n|  EAP-Response/Identity, then the server may already receive an EAP-AKA\r\n|  identity in this packet.  However, if the EAP server has not received\r\n   any EAP-AKA peer identity (permanent identity, pseudonym identity, or\r\n   fast re-authentication identity) from the peer when sending the first\r\n   EAP-AKA request, or if the EAP server has received an\r\n   EAP-Response/Identity packet but the contents do not appear to be a\r\n   valid permanent identity, pseudonym identity, or a re-authentication\r\n   identity, then the server MUST request an identity from the peer\r\n   using one of the methods below.\r\n\r\nIt should say:\r\n\r\n   If the server chooses to not ignore the contents of\r\n|  EAP-Response/Identity, then the server may already have received an\r\n   EAP-AKA identity in this packet.  However, if the EAP server has not\r\n   received any EAP-AKA peer identity (permanent identity, pseudonym\r\n   identity, or fast re-authentication identity) from the peer when\r\n   sending the first EAP-AKA request, or if the EAP server has received\r\n   an EAP-Response/Identity packet but the contents do not appear to be\r\n   a valid permanent identity, pseudonym identity, or a\r\n   re-authentication identity, then the server MUST request an identity\r\n   from the peer using one of the methods below.\r\n\r\n\r\n(7)  [misleading wording]\r\n\r\nOn page 25, the first paragraph of Section 4.1.6 says:\r\n\r\n   The section above specifies two possible ways the peer can operate\r\n   upon receipt of AT_PERMANENT_ID_REQ because a received\r\n   AT_PERMANENT_ID_REQ does not necessarily originate from the valid\r\n|  network.  However, an active attacker may transmit an\r\n   EAP-Request/AKA-Identity packet with an AT_PERMANENT_ID_REQ attribute\r\n   to the peer, in an effort to find out the true identity of the user.\r\n   If the peer does not want to reveal its permanent identity, then the\r\n   peer sends the EAP-Response/AKA-Client-Error packet with the error\r\n   code \"unable to process packet\", and the authentication exchange\r\n   terminates.\r\n\r\nIt should say:\r\n\r\n   The section above specifies two possible ways the peer can operate\r\n   upon receipt of AT_PERMANENT_ID_REQ because a received\r\n   AT_PERMANENT_ID_REQ does not necessarily originate from the valid\r\n|  network.  In fact, an active attacker may transmit an\r\n   EAP-Request/AKA-Identity packet with an AT_PERMANENT_ID_REQ attribute\r\n   to the peer, in an effort to find out the true identity of the user.\r\n   If the peer does not want to reveal its permanent identity, then the\r\n   peer sends the EAP-Response/AKA-Client-Error packet with the error\r\n   code \"unable to process packet\", and the authentication exchange\r\n   terminates.\r\n\r\n\r\n(8)  [[posted separately.]]\r\n\r\n(9)  [missing article]\r\n\r\nThe 4th paragraph of Section 5.1, near the bottom of page 32, says:\r\n\r\n                                  [...].  For example, on the second\r\n|  fast re-authentication, counter value is two or greater, etc.  The\r\n   AT_COUNTER attribute is encrypted.\r\n\r\nIt should say:\r\n\r\n                                  [...].  For example, on the second\r\n|  fast re-authentication, the counter value is two or greater, etc.\r\n   The AT_COUNTER attribute is encrypted.\r\n\r\n\r\n(10)  [missing article]\r\n\r\nThe first paragraph of Section 5.3, near the bottom of page 33, says:\r\n\r\n                                                     [...].  If the EAP\r\n   server supports fast re-authentication, it MAY include the skippable\r\n|  AT_NEXT_REAUTH_ID attribute in the encrypted data of EAP- Request/-\r\n   AKA-Challenge message.  This attribute contains a new\r\n   re-authentication identity for the next fast re-authentication.  [..]\r\n\r\nIt should say:\r\n                                                     [...].  If the EAP\r\n   server supports fast re-authentication, it MAY include the skippable\r\n|  AT_NEXT_REAUTH_ID attribute in the encrypted data of the EAP-\r\n   Request/-AKA-Challenge message.  This attribute contains a new\r\n   re-authentication identity for the next fast re-authentication.  [..]\r\n\r\n(The spurious blank after \"EAP-\" disappears due to the new line break.)\r\n\r\n\r\n(11)  IMPORTANT -- [misleading continuation indicator, again]\r\n\r\nRepetition of the issue described in item (8) above:\r\n\r\nIn Section 5.4, in Figure 10 (on page 36), the 6 lines:\r\n\r\n       :                                                       :\r\n       :                                                       :\r\n\r\n\r\n       :                                                       :\r\n       :                                                       :\r\n\r\nshould be deleted, because these might erroneously be misunderstood\r\nas indicating the omission of some protocol steps.\r\n\r\n\r\n(12)  [missing article]\r\n\r\nThe last paragraph of Section 5.5, on page 38, says:\r\n\r\n   It should be noted that in this case, peer identity is only\r\n   transmitted in the AT_IDENTITY attribute at the beginning of the\r\n   whole EAP exchange.  The fast re-authentication identity used in this\r\n   AT_IDENTITY attribute will be used in key derivation (see Section 7).\r\n\r\nIt should say:\r\n\r\n|  It should be noted that in this case, the peer identity is only\r\n   transmitted in the AT_IDENTITY attribute at the beginning of the\r\n   whole EAP exchange.  The fast re-authentication identity used in this\r\n   AT_IDENTITY attribute will be used in key derivation (see Section 7).\r\n\r\n\r\n(13)  [missing article]\r\n\r\nWithin Section 6.1, the 3rd paragraph on page 39 says:\r\n\r\n                                         [...].  A re-authentication\r\n   round is considered successful only if the peer has successfully\r\n   verified AT_MAC and AT_COUNTER attributes, and does not include the\r\n   AT_COUNTER_TOO_SMALL attribute in EAP-Response/AKA-Reauthentication.\r\n\r\nIt should say:\r\n                                         [...].  A re-authentication\r\n   round is considered successful only if the peer has successfully\r\n|  verified the AT_MAC and AT_COUNTER attributes, and does not include\r\n   the AT_COUNTER_TOO_SMALL attribute in EAP-Response/AKA-\r\n   Reauthentication.\r\n\r\n\r\n(14)  [grammar / articles]\r\n\r\nWithin Section 8.1, the text at the bottom page 46,\r\n\r\n   Attributes numbered within the range 0 through 127 are called\r\n   non-skippable attributes.  When an EAP-AKA peer encounters a\r\n   non-skippable attribute type that the peer does not recognize, the\r\n|  peer MUST send the EAP-Response/AKA-Client-Error packet, and the\r\n   authentication exchange terminates.  If an EAP-AKA server encounters\r\n   a non-skippable attribute that the server does not recognize, then\r\n|  the server sends EAP-Request/AKA-Notification packet with an\r\n   [<page break>]\r\n   [...]\r\n\r\nshould say:\r\n\r\n   Attributes numbered within the range 0 through 127 are called\r\n   non-skippable attributes.  When an EAP-AKA peer encounters a\r\n   non-skippable attribute type that the peer does not recognize, the\r\n|  peer MUST send an EAP-Response/AKA-Client-Error packet, and the\r\n   authentication exchange terminates.  If an EAP-AKA server encounters\r\n   a non-skippable attribute that the server does not recognize, then\r\n|  the server sends an EAP-Request/AKA-Notification packet with an\r\n   [<page break>]\r\n   [...]\r\n\r\n(15)  [missing article]\r\n\r\nSection 9, on page 48 says:\r\n\r\n|                           [...].  Message format is specified in\r\n   Section 8.1.\r\n\r\nIt should say:\r\n\r\n|                           [...].  The message format is specified in\r\n   Section 8.1.\r\n\r\n\r\n(16)  IMPORTANT -- misleading specification !\r\n\r\nOn page 63, the 2nd paragraph of Section 10.15 says:\r\n\r\n   The value field of the AT_MAC attribute contains two reserved bytes\r\n   followed by a keyed message authentication code (MAC).  The MAC is\r\n|  calculated over the whole EAP packet and concatenated with optional\r\n   message-specific data, with the exception that the value field of the\r\n   MAC attribute is set to zero when calculating the MAC.  [...]\r\n\r\nIt should say:\r\n\r\n   The value field of the AT_MAC attribute contains two reserved bytes\r\n   followed by a keyed message authentication code (MAC).  The MAC is\r\n|  calculated over the whole EAP packet, concatenated with optional\r\n   message-specific data, with the exception that the value field of the\r\n   MAC attribute is set to zero when calculating the MAC.  [...]\r\n\r\nRationale:\r\n  \"The MAC is calculated ... and concatenated ...\"\r\ncould easily be misunderstood.  From the context it can be\r\nconcluded that the potential ambiguity should be resolved and\r\nclarified by omitting the word 'and', and replacing it by a comma.\r\n\r\n\r\n(17)  [improper, extraneous wording]\r\n\r\nIn Section 10.15, the second-to-last paragraph on page 63 says:\r\n\r\n|  The MAC algorithm is HMAC-SHA1-128 [RFC2104] keyed hash value.  (The\r\n   HMAC-SHA1-128 value is obtained from the 20-byte HMAC-SHA1 value by\r\n   truncating the output to 16 bytes.  Hence, the length of the MAC is\r\n   16 bytes.)  The derivation of the authentication key (K_aut) used in\r\n   the calculation of the MAC is specified in Section 7.\r\n\r\nIt should say:\r\n\r\n|  The MAC algorithm is HMAC-SHA1-128 [RFC2104].  (The HMAC-SHA1-128\r\n   value is obtained from the 20-byte HMAC-SHA1 value by truncating the\r\n   output to 16 bytes.  Hence, the length of the MAC is 16 bytes.)  The\r\n   derivation of the authentication key (K_aut) used in the calculation\r\n   of the MAC is specified in Section 7.\r\n\r\nRationale: Beyond grammar, don't mess up 'algorithm' and 'value' !\r\n\r\n\r\n(17)  [missing article]\r\n\r\nThe second text paragraph of Section 10.18, on page 65, says:\r\n\r\n   The value field of the AT_NONCE_S attribute contains two reserved\r\n   bytes followed by a random number (16 bytes) that is freshly\r\n   generated by the server for this EAP-AKA fast re-authentication.  The\r\n   random number is used as challenge for the peer and also as a seed\r\n   value for the new keying material.  [...]\r\n\r\nIt should say:\r\n\r\n   The value field of the AT_NONCE_S attribute contains two reserved\r\n   bytes followed by a random number (16 bytes) that is freshly\r\n   generated by the server for this EAP-AKA fast re-authentication.  The\r\n|  random number is used as a challenge for the peer and also as a seed\r\n   value for the new keying material.  [...]\r\n\r\n\r\n(18)  [misleading wording]\r\n\r\nWithin Section 11, the second text paragraph on page 67 says:\r\n\r\n                        [...].  The following attribute types are\r\n   specified in this document in [EAP-SIM]:\r\n                             ^\r\nIt should say:\r\n\r\n                        [...].  The following attribute types are\r\n|  specified in this document and in [EAP-SIM]:\r\n                             ^^^^^\r\n\r\n(19) [[posted separately.]]",
    "correct_text": "",
    "notes": "Whereas most items just should be noted for consideration when\r\npreparing future derived work, at least items (8), (11), and (16)\r\nseem to deserve an Errata Note.\r\n\r\nfrom pending",
    "submit_date": "2006-11-26",
    "submitter_name": "Alfred Hoenes",
    "verifier_id": 99,
    "verifier_name": "Henry Haverinen",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 966,
    "doc-id": "RFC4187",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": 12.7,
    "orig_text": "   As described in Section 8, EAP-AKA allows the protocol to be extended\r\n   by defining new attribute types.  When defining such attributes, it\r\n   should be noted that any extra attributes included in\r\n   EAP-Request/AKA-Identity or EAP-Response/AKA-Identity packets are not\r\n   included in the MACs later on, and thus some other precautions must\r\n   be taken to avoid modifications to them.\r\n",
    "correct_text": "   As described in Section 8, EAP-AKA allows the protocol to be extended\r\n   by defining new attribute types.  When defining such attributes, it\r\n   should be noted that the AT_CHECKCODE attribute (see Section 10.13)\r\n   can be used to achieve the protection of extra attributes included in\r\n   EAP-Request/AKA-Identity or EAP-Response/AKA-Identity packets.",
    "notes": "This text is too pessimistic.  The reader's attention should be\r\ndirected to Section 10.13 of the RFC.  The (late) introduction of\r\nthe AT_CHECKCODE concept, as explained there, has taken care of\r\nthis issue; implementations should make use of this attribute.\r\n\r\nfrom pending",
    "submit_date": "2006-11-26",
    "submitter_name": "Alfred Hoenes",
    "verifier_id": 99,
    "verifier_name": "Henry Haverinen",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 3967,
    "doc-id": "RFC4187",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": 3,
    "orig_text": "After obtaining the subscriber identity, the EAP server obtains an\r\n   authentication vector (RAND, AUTN, RES, CK, IK) for use in\r\n   authenticating the subscriber.  From the vector, the EAP server\r\n   derives the keying material, as specified in Section 6.4.",
    "correct_text": "After obtaining the subscriber identity, the EAP server obtains an\r\n   authentication vector (RAND, AUTN, RES, CK, IK) for use in\r\n   authenticating the subscriber.  From the vector, the EAP server\r\n   derives the keying material, as specified in Section 7.",
    "notes": null,
    "submit_date": "2014-04-18",
    "submitter_name": "Huanggj",
    "verifier_id": 131,
    "verifier_name": "Brian Haberman",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 3968,
    "doc-id": "RFC4187",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": 9.3,
    "orig_text": "   When processing this message, the peer MUST process AT_RAND and\r\n   AT_AUTN before processing other attributes.  Only if these attributes\r\n   are verified to be valid, the peer derives keys and verifies AT_MAC.\r\n   The operation in case an error occurs is specified in Section 6.3.1.",
    "correct_text": null,
    "notes": "The words \"these attributes\" in sentence \"Only if these attributes are verified to be valid, the peer derives keys and verifies AT_MAC.\" is obscured. It's not clear which attributes are indicated. \"AT_RAND and AT_AUTN\" or \"other attributes\"?",
    "submit_date": "2014-04-19",
    "submitter_name": "Huanggj",
    "verifier_id": 131,
    "verifier_name": "Brian Haberman",
    "update_date": "2019-09-10 09:09:03"
  }
]
