[
  {
    "errata_id": "5730",
    "doc-id": "RFC6960",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "4.1.1",
    "orig_text": "optionalSignature contains the algorithm identifier and any\r\nassociated algorithm parameters in signatureAlgorithm; the\r\nsignature value in signature; and, optionally, certificates the\r\nserver needs to verify the signed response (normally up to but not\r\nincluding the client’s root certificate).\r\n",
    "correct_text": "optionalSignature contains the algorithm identifier and any\r\nassociated algorithm parameters in signatureAlgorithm; the\r\nsignature value in signature; and, optionally, certificates the\r\nserver needs to verify the signed request (normally up to but not\r\nincluding the client’s root certificate).\r\n",
    "notes": "The paragraph refers to the signed \"response\" where it should refer to the signed \"request\".",
    "submit_date": "2019-05-22",
    "submitter_name": "Jaime Hablutzel",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "5891",
    "doc-id": "RFC6960",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": "Appendix B.2",
    "orig_text": "AuthorityInfoAccessSyntax, GeneralName, CrlEntryExtensions\r\nFROM PKIX1Implicit-2009 -- From [RFC5912]\r\n    {iso(1) identified-organization(3) dod(6) internet(1) security(5)\r\n    mechanisms(5) pkix(7) id-mod(0) id-mod-pkix1-implicit-02(59)}",
    "correct_text": "AuthorityInfoAccessSyntax, GeneralName, CrlEntryExtensions, CRLReason\r\nFROM PKIX1Implicit-2009 -- From [RFC5912]\r\n    {iso(1) identified-organization(3) dod(6) internet(1) security(5)\r\n    mechanisms(5) pkix(7) id-mod(0) id-mod-pkix1-implicit-02(59)}",
    "notes": "The CRLReason is not defined in the ASN.1 module, and it should have been imported from the one that is defined in RFC 5212.  The ASN.1 compiler will generate an error without this correction.",
    "submit_date": "2019-11-02",
    "submitter_name": "Russ Housley",
    "verifier_id": "159",
    "verifier_name": "Benjamin Kaduk",
    "update_date": "2019-11-06 09:06:01"
  },
  {
    "errata_id": "5929",
    "doc-id": "RFC6960",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "4.4.1",
    "orig_text": "   The nonce cryptographically binds a request and a response to prevent\r\n   replay attacks.  The nonce is included as one of the\r\n   requestExtensions in requests, while in responses it would be\r\n   included as one of the responseExtensions.  In both the request and\r\n   the response, the nonce will be identified by the object identifier\r\n   id-pkix-ocsp-nonce, while the extnValue is the value of the nonce.\r\n\r\n     id-pkix-ocsp           OBJECT IDENTIFIER ::= { id-ad-ocsp }\r\n     id-pkix-ocsp-nonce     OBJECT IDENTIFIER ::= { id-pkix-ocsp 2 }\r\n\r\n     Nonce ::= OCTET STRING",
    "correct_text": null,
    "notes": "In section 4.1.1, the standard MUST define a maximum length for Nonce or the Nonce MUST be of a defined fixed length. The current implementations that follow this standard are vulnerable to denial of service attacks since they will try to accept even the large size OCSP requests with very big nonce value and eventually will consume more memory.\n --VERIFIER NOTES-- \n   Rejected per submitter after discussion.\r\n   This is an enhancement request and will be discussed on the lamps@ietf.org mailing list.",
    "submit_date": "2019-12-06",
    "submitter_name": "Mohit Sahni",
    "verifier_id": "159",
    "verifier_name": "Benjamin Kaduk",
    "update_date": "2019-12-09 20:06:22"
  },
  {
    "errata_id": "6165",
    "doc-id": "RFC6960",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "1",
    "orig_text": "---",
    "correct_text": "   o  Appendix B.1 provides correct KeyHash type processing description. Now SHA-1 hash must be calculated for responder's public key ASN.1 value without tag, length and unused bits.\r\n",
    "notes": "The RFC6960 changes OCSP protocol in part of KeyHash type calculation. In RFC2560 there is the description:\r\n   KeyHash ::= OCTET STRING -- SHA-1 hash of responder's public key\r\n   (excluding the tag and length fields)\r\n\r\nBut in Appendix B.1, which is the major OCSP descriptive module, stated:\r\nKeyHash ::= OCTET STRING -- SHA-1 hash of responder's public key\r\n                         -- (i.e., the SHA-1 hash of the value of the\r\n                         -- BIT STRING subjectPublicKey [excluding\r\n                         -- the tag, length, and number of unused\r\n                         -- bits] in the responder's certificate)\r\n\r\nThe difference is in what would be under SHA-1 hash. In RFC2560 KeyHash would be calculated for entire BIT STRING value, with \"unused bits\" byte (first byte in BIT STRING value), but Appendix B.1 in RFC6960 states that SHA-1 hash must be calculated for BIT STRING value without \"unused bits\".",
    "submit_date": "2020-05-11",
    "submitter_name": "Yury Strozhevsky",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": null
  },
  {
    "errata_id": "6166",
    "doc-id": "RFC6960",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "Appendix B.2",
    "orig_text": "KeyHash ::= OCTET STRING -- SHA-1 hash of responder's public key\r\n                         -- (excluding the tag and length fields)\r\n",
    "correct_text": "KeyHash ::= OCTET STRING -- SHA-1 hash of responder's public key\r\n                         -- (i.e., the SHA-1 hash of the value of the\r\n                         -- BIT STRING subjectPublicKey [excluding\r\n                         -- the tag, length, and number of unused\r\n                         -- bits] in the responder's certificate)\r\n",
    "notes": "These two descriptions of KeyHash produce different SHA-1 hashes due to different values: one is pure BIT STRING value block, with \"unused bits\" byte, but other - without \"unused byte\". Also the Appendix B.2 must be aligned with Appendix B.1 information.",
    "submit_date": "2020-05-11",
    "submitter_name": "Yury Strozhevsky",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": null
  },
  {
    "errata_id": "6167",
    "doc-id": "RFC6960",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "4.2.1",
    "orig_text": "   KeyHash ::= OCTET STRING -- SHA-1 hash of responder's public key\r\n   (excluding the tag and length fields)\r\n",
    "correct_text": "KeyHash ::= OCTET STRING -- SHA-1 hash of responder's public key\r\n                         -- (i.e., the SHA-1 hash of the value of the\r\n                         -- BIT STRING subjectPublicKey [excluding\r\n                         -- the tag, length, and number of unused\r\n                         -- bits] in the responder's certificate)\r\n",
    "notes": "Same explanationa as for https://www.rfc-editor.org/errata/eid6166",
    "submit_date": "2020-05-11",
    "submitter_name": "Yury Strozhevsky",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": null
  }
]
