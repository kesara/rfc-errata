[
  {
    "errata_id": 32,
    "doc-id": "RFC4660",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": 11.1,
    "orig_text": "   [4]  Roach, A.B., Campbell, B., and J. Rosenberg, \"A Session\r\n        Initiation Protocol (SIP) Event Notification Extension for\r\n        Resource Lists\", RFC 4663, September 2006.",
    "correct_text": "   [4]  Roach, A.B., Campbell, B., and J. Rosenberg, \"A Session\r\n        Initiation Protocol (SIP) Event Notification Extension for\r\n        Resource Lists\", RFC 4662, August 2006.",
    "notes": "",
    "submit_date": "2006-11-08",
    "submitter_name": "Alfred Hoenes",
    "verifier_id": 3,
    "verifier_name": "Cullen Jennings",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 921,
    "doc-id": "RFC4660",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": 99,
    "orig_text": "(1) [[posted separately.]]\r\n\r\n(2)  general issue: presentation/formatting of XML text\r\n\r\nAlthough it carries no functional relevance, uniform formatting\r\nand consistent indentation of XML text significantly adds to\r\nthe readability and furthers the understanding of the structure.\r\nUnfortunately, there are many places in the two RFCs where --\r\nperhaps as a result of the use of various tools in the publication\r\nprocess -- non-uniform and inconsistent indentation in XML text\r\nimpedes the readability of the XML schemata and the XML examples.\r\n\r\nAt a minimum, pairing opening and closing XML tags, if on different\r\nlines, should be indented by the same amount of white space,\r\nand XML elements on the same hierarchical level (within another\r\nXML element) should be indented equally.\r\n\r\nFor brevity of this message, I omit detailing the numerous places\r\naffected I have marked in my printed copies of the two RFCs.\r\n\r\n\r\n(3)  repeated word replications and grammar  (RFC 4660)\r\n\r\nThe second paragraph of Section 3.3.1 of RFC 4660, at the bottom\r\nof page 3, says:\r\n\r\n   A SUBSCRIBE request destined to a list URI [4] MAY include multiple\r\n   filters specific to individual resources.  This is achieved by\r\n   including multiple <filter> elements with different URIs of resources\r\n|  in each of those elements.  This resource specific resource-specific\r\n|  filter are processed first before any list specific list-specific\r\n|  filter, if any.  The list specific list-specific filter may or may\r\n   not include a URI.\r\n\r\nIt should perhaps say:\r\n\r\n   A SUBSCRIBE request destined to a list URI [4] MAY include multiple\r\n   filters specific to individual resources.  This is achieved by\r\n   including multiple <filter> elements with different URIs of resources\r\n|  in each of those elements.  This resource-specific filter is\r\n|  processed first, before any list-specific filter, if any.  The\r\n|  list-specific filter may or may not include a URI.\r\n\r\n\r\n(4)  distorting extra blank line   (RFC4660)\r\n\r\nThe example scenario description in Section 4.1 of RFC 4660,\r\non top of page 8, are made less comprehensible by the additional\r\nblank line in between:\r\n\r\n   List1 (list1@example.com) on RLS1 has: bob@example.com\r\n\r\n   list2@biloxi.com\r\n\r\nShould perhaps better say:\r\n\r\n   List1 (list1@example.com) on RLS1 has: bob@example.com\r\n   list2@biloxi.com\r\n\r\nor even better:\r\n\r\n   List1 (list1@example.com) on RLS1 has:\r\n     bob@example.com list2@biloxi.com\r\n\r\n\r\n(5)  inappropriate Section headlines   (RFC4660)\r\n\r\nThe ToC and the body of RFC 4660 (on page 9) contains the Section\r\nheadlines:\r\n\r\n 5.  Server Operation\r\n\r\n 5.1.  NOTIFY Bodies\r\n\r\nshould better say:\r\n\r\n 5.  Notifier Operation\r\n\r\n 5.1   SUBSCRIBE Bodies\r\n\r\nRationale:\r\n\r\nObviously, these titles are inappropriate.\r\n\r\na) The document deals with two kinds of 'server' roles:\r\n     *  Resource List Server (RLS),  and\r\n     *  SIP servers in the Notifier role\r\n   Since Section 4 deals with RLS behaviour (and does tell so\r\n   in its headline), and Section 5 deals with Notifier behaviour,\r\n   the latter should tell so as well, and not pretend to be\r\n   applicable to server operation in general.\r\n\r\nb) NOTIFY bodies/content are dealt with in Section 5.3 ff.\r\n   As can be seen immediately, Section 5.1 talks about\r\n   SUBSCRIBE bodies.\r\n\r\n\r\n(6)  typo/grammar  (RFC 4660)\r\n\r\nWithin Section 5.2.1, at the bottom of page 10, RFC 4660 says:\r\n\r\n                                 [...].  Notifiers belonging to the\r\n|  domain MUST apply the filter to all notifications it sends for that\r\n   subscription, unless policy dictates otherwise.\r\n                                                     ^^^^^^^^\r\nIt should say:\r\n\r\n                                 [...].  Notifiers belonging to the\r\n|  domain MUST apply the filter to all notifications they send for that\r\n   subscription, unless policy dictates otherwise.\r\n                                                     ^^^^^^^^^\r\n\r\n\r\n(7)  placement of text ??   (RFC 4660)\r\n\r\nThe first paragraph of Section 5.3, on page 11,\r\n\r\n   Upon receiving the SUBSCRIBE with the filter, the notifier SHOULD\r\n   retain the filter as long as the subscription persists.  The filter\r\n   MAY be incorporated within an existing subscription (in an active\r\n   dialog) by sending a re-SUBSCRIBE that includes the filter in the\r\n   body.\r\n\r\napparently should have been moved up to the end of Section 5.2\r\nbecause it is related to behaviour during\r\n   \"Notifier Processing of SUBSCRIBE Requests\" == Section 5.2\r\n\r\n\r\n(8)  improper use of articles  (RFC 4660)\r\n\r\nThere are two related issues with text in the 2nd and 3rd paragraph\r\nof Section 5.3, on mid-page 11:\r\n\r\n   If the response sent to the SUBSCRIBE was a \"202\" and the \"202\" was\r\n|  chosen because the filter could not be accepted that time, the NOTIFY\r\n   MAY be used to terminate the subscription if the filter is found\r\n   unacceptable.\r\n\r\n|  As described in [3], the NOTIFY message MAY contain a body that\r\n   describes the state of the resource.  This body is in one of the\r\n   formats listed in the Accept header field of the SUBSCRIBE, or in the\r\n   package-specific default if the Accept header field is omitted.\r\n\r\nThe first occurrence of \"the NOTIFY\" is improper because this is the\r\nfirst place the text talks about a NOTIFY message in this context.\r\nThe definite article should either be omitted entirely, or better\r\nbe replaced by \"a NOTIFY message\".\r\nThe second \"the NOTIFY\" is improper because it (re-)states a general\r\nproperty of all NOTIFY messages, not of a specific NOTIFY message.\r\nTherefore, the above text should say:\r\n\r\n   If the response sent to the SUBSCRIBE was a \"202\" and the \"202\" was\r\n|  chosen because the filter could not be accepted that time, a NOTIFY\r\n   maeeage MAY be used to terminate the subscription if the filter is\r\n   found unacceptable.\r\n\r\n|  As described in [3], a NOTIFY message MAY contain a body that\r\n   describes the state of the resource.  This body is in one of the\r\n   formats listed in the Accept header field of the SUBSCRIBE, or in the\r\n   package-specific default if the Accept header field is omitted.\r\n\r\n\r\n(9)  missing articles  (RFC 4660)\r\n\r\nWithin Section 7.1.3, near the top of page 20, where RFC 4660 says:\r\n\r\n   Notification containing both tuples is sent to the subscriber in this\r\n   case:\r\n\r\nit should better say:\r\n\r\n|  A Notification containing both tuples is sent to the subscriber in\r\n   this case:\r\n\r\nand within Section 7.2.3, in the upper half of page 26, where the RFC\r\nsays:\r\n\r\n   Notification to the subscriber is created, taking into account the\r\n   <trigger> and <what> elements:\r\n\r\nit should better say:\r\n\r\n|  A Notification to the subscriber is created, taking into account the\r\n   <trigger> and <what> elements:\r\n",
    "correct_text": "",
    "notes": "from pending",
    "submit_date": "2006-11-08",
    "submitter_name": "Alfred Hoenes",
    "verifier_id": 118,
    "verifier_name": "Robert Sparks",
    "update_date": "2019-09-10 09:09:03"
  }
]
