[
  {
    "errata_id": 3263,
    "doc-id": "RFC3550",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "6.4.1",
    "orig_text": "cumulative number of packets lost: 24 bits\r\n   The total number of RTP data packets from source SSRC_n that have\r\n   been lost since the beginning of reception.  This number is\r\n   defined to be the number of packets expected less the number of\r\n   packets actually received, where the number of packets received\r\n   includes any which are late or duplicates.  Thus, packets that\r\n   arrive late are not counted as lost, and the loss may be negative\r\n   if there are duplicates.  The number of packets expected is\r\n   defined to be the extended last sequence number received, as\r\n   defined next, less the initial sequence number received.  This may\r\n   be calculated as shown in Appendix A.3.",
    "correct_text": "cumulative number of packets lost: 24 bits \r\n   The total number of RTP data packets from source SSRC_n that have \r\n   been lost since the beginning of reception. This number is \r\n   defined to be the number of packets expected less the number of \r\n   packets actually received, where the number of packets received \r\n   includes any which are late or duplicates. Thus, packets that \r\n   arrive late are not counted as lost, and the loss may be negative \r\n   if there are duplicates. The number of packets expected is \r\n   defined to be the extended highest sequence number received, as \r\n   defined next, less the initial sequence number received. This may \r\n   be calculated as shown in Appendix A.3.",
    "notes": "Changed \r\n\r\nThe number of packets expected is defined to be the extended last sequence number received...\r\n\r\nInto\r\n\r\nThe number of packets expected is defined to be the extended highest sequence number received...",
    "submit_date": "2012-06-18",
    "submitter_name": "Pieter Demuytere",
    "verifier_id": 2,
    "verifier_name": "Robert Sparks",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 3914,
    "doc-id": "RFC3550",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "A.1",
    "orig_text": "      init_seq(s, seq);\r\n      s->max_seq = seq - 1;\r\n      s->probation = MIN_SEQUENTIAL;",
    "correct_text": "      init_seq(s, seq);\r\n      s->max_seq = seq == 0 ? seq : seq - 1;\r\n      s->probation = MIN_SEQUENTIAL;",
    "notes": "If the first RTP packet has a sequence number of 0, the logic will cause cycles to increase by 1, which will affect \"expected number of received packets\" calculations.\n --VERIFIER NOTES-- \nSubmitter requested rejection.",
    "submit_date": "2014-03-06",
    "submitter_name": "Hani Mustafa",
    "verifier_id": 136,
    "verifier_name": "Richard Barnes",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 4192,
    "doc-id": "RFC3550",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "6.4.1",
    "orig_text": "sender's octet count: 32 bits\r\n      The total number of payload octets (i.e., not including header or\r\n      padding) transmitted in RTP data packets by the sender since\r\n      starting transmission up until the time this SR packet was\r\n      generated.  The count SHOULD be reset if the sender changes its\r\n      SSRC identifier.  This field can be used to estimate the average\r\n      payload data rate.",
    "correct_text": "sender's octet count: 32 bits\r\n      The total number of payload octets \r\n      transmitted in RTP data packets by the sender since\r\n      starting transmission up until the time this SR packet was\r\n      generated.  The count SHOULD be reset if the sender changes its\r\n      SSRC identifier.  This field can be used to estimate the average\r\n      payload data rate.",
    "notes": "Where as payload octets is defined as the total number of data octets contained in a Rtp Packet minus the 12 Header octets for Rtp Packets.\r\n\r\nPadding octets as well as octets which occur in the contributing source list should also be included as they may differ on a per packet basis and would make the total calculation invalid.\r\n\r\nDuring TCP communication any application layer header should NOT be included in the total bytes count when including the header length.\r\n\r\nAny Rtcp packet counters should include the total length of the packet (header, padding and any other data).\n --VERIFIER NOTES-- \n   Rejected based on discussion in avtcore",
    "submit_date": "2014-12-03",
    "submitter_name": "Julius Friedman",
    "verifier_id": 147,
    "verifier_name": "Ben Campbell",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 4770,
    "doc-id": "RFC3550",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": 3,
    "orig_text": "   RTP session: An association among a set of participants\r\n      communicating with RTP.  A participant may be involved in multiple\r\n      RTP sessions at the same time.  In a multimedia session, each\r\n      medium is typically carried in a separate RTP session with its own\r\n      RTCP packets unless the the encoding itself multiplexes multiple\r\n      media into a single data stream.  A participant distinguishes\r\n      multiple RTP sessions by reception of different sessions using\r\n      different pairs of destination transport addresses, where a pair\r\n      of transport addresses comprises one network address plus a pair\r\n      of ports for RTP and RTCP.  All participants in an RTP session may\r\n      share a common destination transport address pair, as in the case\r\n      of IP multicast, or the pairs may be different for each\r\n      participant, as in the case of individual unicast network\r\n      addresses and port pairs.  In the unicast case, a participant may\r\n      receive from all other participants in the session using the same\r\n      pair of ports, or may use a distinct pair of ports for each.",
    "correct_text": "   RTP session: An association among a set of participants\r\n      communicating with RTP.  A participant may be involved in multiple\r\n      RTP sessions at the same time.  In a multimedia session, each\r\n      medium is typically carried in a separate RTP session with its own\r\n      RTCP packets unless the encoding itself multiplexes multiple\r\n      media into a single data stream.  A participant distinguishes\r\n      multiple RTP sessions by reception of different sessions using\r\n      different pairs of destination transport addresses, where a pair\r\n      of transport addresses comprises one network address plus a pair\r\n      of ports for RTP and RTCP.  All participants in an RTP session may\r\n      share a common destination transport address pair, as in the case\r\n      of IP multicast, or the pairs may be different for each\r\n      participant, as in the case of individual unicast network\r\n      addresses and port pairs.  In the unicast case, a participant may\r\n      receive from all other participants in the session using the same\r\n      pair of ports, or may use a distinct pair of ports for each.",
    "notes": "typo: double the in 5th line.",
    "submit_date": "2016-08-08",
    "submitter_name": "Petr VanÄ›k",
    "verifier_id": 147,
    "verifier_name": "Ben Campbell",
    "update_date": "2019-09-10 09:09:03"
  }
]
