[
  {
    "errata_id": 5390,
    "doc-id": "RFC8224",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": 12.1,
    "orig_text": "When signing a request that contains a fingerprint of keying material\r\nin SDP for DTLS-SRTP [RFC5763], this mechanism always provides a\r\nsignature over that fingerprint. \r\n",
    "correct_text": "When signing a request that contains a fingerprint\r\nof keying material in SDP, this mechanism always \r\nprovides a signature over that fingerprint. \r\n",
    "notes": "Attack vector described in 12.1 to justify addition of \"mky\" is applicable for scenarios, where a fingerprint in SDP is used for reasons other than DTLS-STRP as well. \r\nUse of fingerprint for MSRP per RFCRFC4975 is an example of this.\r\n\r\nFrom RFC4975:\r\n\r\n14.4.  Using TLS in Peer-to-Peer Mode\r\n\r\n   TLS can be used with a self-signed certificate as long as there is a\r\n   mechanism for both sides to ascertain that the other side used the\r\n   correct certificate.  When used with SDP and SIP, the correct\r\n   certificate can be verified by passing a fingerprint of the\r\n   certificate in the SDP and ensuring that the SDP has suitable\r\n   integrity protection.  When SIP is used to transport the SDP, the\r\n   integrity can be provided by the SIP Identity mechanism [17].  The\r\n   rest of this section describes the details of this approach.",
    "submit_date": "2018-06-14",
    "submitter_name": "Invalid restriction on when to add \"mky\"",
    "verifier_id": 99,
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 5391,
    "doc-id": "RFC8224",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": 4.1,
    "orig_text": "\r\n      Third, the JSON key \"iat\" MUST appear.  The authentication service\r\n      SHOULD set the value of \"iat\" to an encoding of the value of the\r\n      SIP Date header field as a JSON NumericDate (as UNIX time, per\r\n      [RFC7519], Section 2), though an authentication service MAY set\r\n      the value of \"iat\" to its own current clock time.  If the\r\n      authentication service uses its own clock time, then the use of\r\n      the full form of PASSporT is REQUIRED.  In either case, the\r\n      authentication service MUST NOT generate a PASSporT for a SIP\r\n      request if the Date header is outside of its local policy for\r\n      freshness (sixty seconds is RECOMMENDED).\r\n",
    "correct_text": "“4.1 PASSPorT Construction”:\r\n\r\nThird, the JSON key \"iat\" MUST appear. \r\nThe authentication service SHOULD set the \r\nvalue of \"iat\" to an encoding of the value of \r\nJWT generation as a JSON NumericDate \r\n(as UNIX time, per [RFC7519], Section 2).\r\n",
    "notes": "RFC7519 JSON Web Token (JWT)\r\n \r\n4.1.6.  \"iat\" (Issued At) Claim\r\n \r\n   The \"iat\" (issued at) claim identifies the time at which the JWT was\r\n   issued.  This claim can be used to determine the age of the JWT.  Its\r\n   value MUST be a number containing a NumericDate value.  Use of this\r\n   claim is OPTIONAL.\r\n \r\nThis text clearly states that “iat” is for the generation time of JWS. \r\n\r\nOne may argue that origination of SIP dialog - on which Date header content is based - and JWT generation times would be very close to each other but this is not always true. JWT, for example, can be added only at administrative boundaries and a session may have started long before that,e .g. it involves user interaction with an IVR for announcement/PIN verification. \r\n\r\nIt should be noted that populating \"iat\" with JWT issuance time makes use of complete form mandatory. So, if this errata is accepted, there probably would be a need to remove compact form as an option.",
    "submit_date": "2018-06-14",
    "submitter_name": "Invalid content for \"iat\"",
    "verifier_id": 99,
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 5715,
    "doc-id": "RFC8224",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": 4.1,
    "orig_text": "o  Second, the JSON \"dest\" array MUST be populated.  If the\r\n   destination identity is a telephone number, then the array MUST be\r\n   populated with a JSON object containing a \"tn\" element with a\r\n   value set to the value of the quoted destination identity, a\r\n   canonicalized telephone number (see Section 8.3).  Otherwise, the\r\n   array MUST be populated with a JSON object containing a \"uri\"\r\n   element, set to the value of the addr-spec component of the\r\n   To header field, which is the AoR to which the request is being\r\n   sent, per the procedures in Section 8.5.  Multiple JSON objects\r\n   are permitted in \"dest\" for future compatibility reasons.\r\n\r\n...\r\n\r\nThe \"orig\" and \"dest\" arrays may contain identifiers of heterogeneous\r\ntype; for example, the \"orig\" array might contain a \"tn\" claim, while\r\nthe \"dest\" contains a \"uri\" claim.  Also note that in some cases, the\r\n\"dest\" array may be populated with more than one value.  This could,\r\nfor example, occur when multiple \"dest\" identities are specified in a\r\nmeshed conference.  Defining how a SIP implementation would align\r\nmultiple destination identities in PASSporT with such systems is left\r\nas a subject for future specifications.",
    "correct_text": "o  Second, the JSON \"dest\" object MUST be populated.  If the\r\n   destination identity is a telephone number, then the object MUST\r\n   contain a \"tn\" element with a value set to an array containing the\r\n   value of the quoted destination identity, a\r\n   canonicalized telephone number (see Section 8.3).  Otherwise, the\r\n   object MUST contain a \"uri\" element, set to an array containing\r\n   the value of the addr-spec component of the\r\n   To header field, which is the AoR to which the request is being\r\n   sent, per the procedures in Section 8.5.  Additional elements\r\n   are permitted in \"dest\" for future compatibility reasons.\r\n\r\n...\r\n\r\nThe \"orig\" and \"dest\" objects may contain identifiers of heterogeneous\r\ntype; for example, the \"orig\" object might contain a \"tn\" claim, while\r\nthe \"dest\" contains a \"uri\" claim.  Also note that in some cases, the\r\n\"dest\" object may be populated with more than one claim, and its claim\r\nvalue arrays may contain more than one value.  This could,\r\nfor example, occur when multiple \"dest\" identities are specified in a\r\nmeshed conference.  Defining how a SIP implementation would align\r\nmultiple destination identities in PASSporT with such systems is left\r\nas a subject for future specifications.",
    "notes": "The description of the \"dest\" element does not match RFC8225 or the example that is provided in this section.\r\n\r\nThe terminology is a bit less clear than in RFC8225 section 5.2.1, in that no differentiation is made between the top level \"claims\" and embedded \"identity claims\". The proposed correction does not address this lack of clarity, however.\r\n\r\nFrom RFC8225 section 5.2.1:\r\n\r\nThe \"dest\" claim is a JSON object with the claim name of \"dest\" and\r\nMUST have at least one identity claim object.  The \"dest\" claim value\r\nis an array containing one or more identity claim JSON objects\r\nrepresenting the destination identities of any type (currently \"tn\"\r\nor \"uri\").  If the \"dest\" claim value array contains both \"tn\" and\r\n\"uri\" claim names, the JSON object should list the \"tn\" array first\r\nand the \"uri\" array second.  Within the \"tn\" and \"uri\" arrays, the\r\nidentity strings should be put in lexicographical order, including\r\nthe scheme-specific portion of the URI characters.\r\n\r\n(The above text might need correction as well, because it refers to the '\"dest\" claim value array'.)",
    "submit_date": "2019-05-01",
    "submitter_name": "Alex Lee",
    "verifier_id": 99,
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 6499,
    "doc-id": "RFC8224",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": 4,
    "orig_text": "Identity = \"Identity\" HCOLON signed-identity-digest SEMI\r\n          ident-info *( SEMI ident-info-params )\r\nsigned-identity-digest = 1*(base64-char / \".\")\r\nident-info = \"info\" EQUAL ident-info-uri\r\nident-info-uri = LAQUOT absoluteURI RAQUOT\r\nident-info-params = ident-info-alg / ident-type /\r\n    ident-info-extension\r\nident-info-alg = \"alg\" EQUAL token\r\nident-type = \"ppt\" EQUAL token\r\nident-info-extension = generic-param\r\n\r\nbase64-char = ALPHA / DIGIT / \"/\" / \"+\"\r\n",
    "correct_text": "Identity = \"Identity\" HCOLON signed-identity-digest SEMI\r\n          ident-info *( SEMI ident-info-params )\r\nsigned-identity-digest = 1*(base64url-char / \".\")\r\nident-info = \"info\" EQUAL ident-info-uri\r\nident-info-uri = LAQUOT absoluteURI RAQUOT\r\nident-info-params = ident-info-alg / ident-type /\r\n    ident-info-extension\r\nident-info-alg = \"alg\" EQUAL token\r\nident-type = \"ppt\" EQUAL token\r\nident-info-extension = generic-param\r\n\r\nbase64url-char = ALPHA / DIGIT / \"-\" / \"_\"\r\n",
    "notes": "RFC 8225 makes it clear that the encoding is BASE4URL, not the standard BASE64 encoding.",
    "submit_date": "2021-03-27",
    "submitter_name": "Marc Petit-Huguenin",
    "verifier_id": 99,
    "verifier_name": null,
    "update_date": null
  },
  {
    "errata_id": 6519,
    "doc-id": "RFC8224",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": 4,
    "orig_text": "ident-type = \"ppt\" EQUAL token",
    "correct_text": "ident-type = \"ppt\" EQUAL DQUOTE token DQUOTE",
    "notes": "Based on IETF 101 STIR notes ptr= values should always be quoted. Also, ATIS-1000074 is using double quotes around ppt value.",
    "submit_date": "2021-04-06",
    "submitter_name": "Roman Shpount",
    "verifier_id": 99,
    "verifier_name": null,
    "update_date": null
  }
]
