[
  {
    "errata_id": "6308",
    "doc-id": "RFC8881",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "18.32.3",
    "orig_text": "   *  The server MUST commit the data at a level at least as high as\r\n      that committed.\r\n",
    "correct_text": "   *  The server MUST commit the data at a level at least as high as\r\n      that requested.\r\n",
    "notes": "The meaning is probably obvious, but perhaps a MUST ought\r\nto be unambiguous?\r\n\r\n---\r\n\r\neditorial: also, the point above this one uses the word \"stronger\"\r\nwhere this point uses \"high\", both for the stability level.\r\n\r\nThe two lines should probably use the same word.",
    "submit_date": "2020-10-16",
    "submitter_name": "Calum Mackay",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": null
  },
  {
    "errata_id": "6337",
    "doc-id": "RFC8881",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "18.33.1",
    "orig_text": "struct gss_cb_handles4 {\r\n        rpc_gss_svc_t       gcbp_service; /* RFC 2203 */\r\n        gsshandle4_t        gcbp_handle_from_server;\r\n        gsshandle4_t        gcbp_handle_from_client;\r\n};",
    "correct_text": "struct gss_cb_handles4 {\r\n        rpc_gss_service_t   gcbp_service; /* RFC 2203 */\r\n        gsshandle4_t        gcbp_handle_from_server;\r\n        gsshandle4_t        gcbp_handle_from_client;\r\n};",
    "notes": "RFC 2203 (and its successors) do not define rpc_gss_svc_t. I believe the rpc_gss_service_t type was intended.",
    "submit_date": "2020-11-16",
    "submitter_name": "Charles Lever",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": null
  },
  {
    "errata_id": "6611",
    "doc-id": "RFC8881",
    "errata_status_code": "Reported",
    "errata_type_code": "Editorial",
    "section": "18.37.3",
    "orig_text": "*                                             Otherwise, the error\r\n   CB_BACK_CHAN_BUSY SHOULD be returned to indicate that there are\r\n   CB_COMPOUNDs that need to be replied to.",
    "correct_text": "*                                                  Otherwise, the error\r\n   NFS4ERR_BACK_CHAN_BUSY SHOULD be returned to indicate that there are\r\n   CB_COMPOUNDs that need to be replied to.",
    "notes": "CB_BACK_CHAN_BUSY is not defined in this document.",
    "submit_date": "2021-06-16",
    "submitter_name": "Seman.Shen",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": null
  },
  {
    "errata_id": "6865",
    "doc-id": "RFC8881",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "18.25.4",
    "orig_text": "The server MUST NOT delete the directory entry if the reply from \r\nOPEN had \r\nthe flag OPEN4_RESULT_PRESERVE_UNLINKED set.",
    "correct_text": "If the reply from OPEN had the flag OPEN4_RESULT_PRESERVE_UNLINKED set,\r\nThe server \r\nMUST NOI delete the file contents until each directory entry is \r\ndeleted and the file is no longer open.",
    "notes": "The existing second and third bullets are directly contradictory.",
    "submit_date": "2022-02-28",
    "submitter_name": "David Noveck",
    "verifier_id": "2",
    "verifier_name": null,
    "update_date": "2022-03-14 15:26:25"
  },
  {
    "errata_id": "7324",
    "doc-id": "RFC8881",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": "4.2.3",
    "orig_text": "   FH4_VOL_RENAME  The filehandle will expire during rename.  This\r\n      includes a rename by the requesting client or a rename by any\r\n      other client.  If FH4_VOL_ANY is set, FH4_VOL_RENAME is redundant.",
    "correct_text": "   FH4_VOL_RENAME  The filehandle will expire during rename.  This\r\n      includes a rename by the requesting client or a rename by any\r\n      other client.  If FH4_VOLATILE_ANY is set, FH4_VOL_RENAME\r\n      is redundant.",
    "notes": "FH4_VOL_ANY is not defined in this document. It should be FH4_VOLATILE_ANY",
    "submit_date": "2023-01-29",
    "submitter_name": "YangJing",
    "verifier_id": "2",
    "verifier_name": "RFC Editor",
    "update_date": "2023-01-30 12:37:30"
  },
  {
    "errata_id": "7386",
    "doc-id": "RFC8881",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "18.46.3.",
    "orig_text": "                                                             Operations\r\n   other than SEQUENCE, BIND_CONN_TO_SESSION, EXCHANGE_ID,\r\n   CREATE_SESSION, and DESTROY_SESSION, MUST NOT appear as the first\r\n   operation in a COMPOUND.",
    "correct_text": "                                                             Operations\r\n   other than SEQUENCE, BIND_CONN_TO_SESSION, EXCHANGE_ID,\r\n   CREATE_SESSION, DESTROY_SESSION, and DESTROY_CLIENTID, MUST NOT\r\n   appear as the first operation in a COMPOUND.",
    "notes": "Section 18.50.3. DESCRIPTION of DESTROY_CLIENTID says\r\n\r\n\"DESTROY_CLIENTID MAY be preceded with a SEQUENCE\"\r\n\r\nand also says\r\n\r\n\"If DESTROY_CLIENTID is not prefixed by SEQUENCE, it MUST be the only operation in the COMPOUND request\"\r\n\r\nwhich implies that DESTROY_CLIENTID can appear as the first (and the only) operation in a COMPOUND.",
    "submit_date": "2023-03-13",
    "submitter_name": "Pali Roh√°r",
    "verifier_id": "172",
    "verifier_name": "Zaheduzzaman Sarker",
    "update_date": "2024-10-30 03:09:27"
  },
  {
    "errata_id": "8021",
    "doc-id": "RFC8881",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "8.2.3",
    "orig_text": "In the case of an\r\nOPEN, the stateid returned for the open file and not the\r\ndelegation is used.",
    "correct_text": "In the case of an\r\nOPEN, the stateid returned for the open file and not the\r\ndelegation is used, with seqid set to 1 explicitly.",
    "notes": "There is no guarantee that OPEN always returns an open_stateid with seqid == 1. If the same file already happens to be opened, the file could get upgraded. This means that if the same COMPOUND procedure contains a CLOSE that uses the current stateid (as demonstated in Figure 4), it could end up closing a file unintentionally.\r\n\r\nThe best course of action would be to require that OPEN always sets the current stateid to one having seqid == 1. That way any attempt to call CLOSE will end up returning NFS4ERR_OLD_STATEID if it turned out the OPEN did an upgrade.",
    "submit_date": "2024-07-08",
    "submitter_name": "Ed Schouten",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": null
  },
  {
    "errata_id": "8022",
    "doc-id": "RFC8881",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "8.2.2",
    "orig_text": "   In making comparisons between seqids, both by the client in\r\n   determining the order of operations and by the server in determining\r\n   whether the NFS4ERR_OLD_STATEID is to be returned, the possibility of\r\n   the seqid being swapped around past the NFS4_UINT32_MAX value needs\r\n   to be taken into account.  When two seqid values are being compared,\r\n   the total count of slots for all sessions associated with the current\r\n   client is used to do this.  When one seqid value is less than this\r\n   total slot count and another seqid value is greater than\r\n   NFS4_UINT32_MAX minus the total slot count, the former is to be\r\n   treated as lower than the latter, despite the fact that it is\r\n   numerically greater.",
    "correct_text": "Whatever was stated in RFC 7530 (NFSv4.0), section 9.1.3.",
    "notes": "The number of slots has no relationship with the maximum drift a seqid value may have:\r\n\r\n- A single COMPOUND request could contain many operations that cause the seqid to change. For example, one could craft a single COMPOUND request with many of no-op OPEN_DOWNGRADEs that each increment the seqid.\r\n\r\n- Imagine a session with two slots. One slot is used in a tight loop to repeatedly invoke OPEN on many different paths, which unbeknownst to the client all refer to the same (hardlinked) file. If the other slot is used to call CLOSE against the same file, it is not unlikely that the difference between the seqid becomes larger than two.",
    "submit_date": "2024-07-08",
    "submitter_name": "Ed Schouten",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": null
  }
]
