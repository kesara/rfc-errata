[
  {
    "errata_id": "2307",
    "doc-id": "RFC3168",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": "6.1",
    "orig_text": "   This proposal specifies two new flags in the Reserved field of the\r\n   TCP header.  The TCP mechanism for negotiating ECN-Capability uses\r\n   the ECN-Echo (ECE) flag in the TCP header.  Bit 9 in the Reserved\r\n   field of the TCP header is designated as the ECN-Echo flag.  The\r\n   location of the 6-bit Reserved field in the TCP header is shown in\r\n   Figure 4 of RFC 793 [RFC793] (and is reproduced below for\r\n   completeness).  This specification of the ECN Field leaves the\r\n   Reserved field as a 4-bit field using bits 4-7.",
    "correct_text": "   This proposal specifies two new flags in the Reserved field of the\r\n   TCP header.  The TCP mechanism for negotiating ECN-Capability uses\r\n   the ECN-Echo (ECE) flag in the TCP header.  Bit 9 in the Reserved\r\n   field of the TCP header is designated as the ECN-Echo flag.  The\r\n   location of the 6-bit Reserved field in the TCP header is shown in\r\n   Figure 3 of RFC 793 [RFC793] (and is reproduced below for\r\n   completeness).  This specification of the ECN Field leaves the\r\n   Reserved field as a 4-bit field using bits 4-7.",
    "notes": "Incorrect reference to Figure 4 of RFC 793",
    "submit_date": "2010-06-21",
    "submitter_name": "Nikolai Malykh",
    "verifier_id": "113",
    "verifier_name": "Lars Eggert",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "2316",
    "doc-id": "RFC3168",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "15",
    "orig_text": "   [RFC2408]    Maughan, D., Schertler, M., Schneider, M. and J. Turner,\r\n                \"Internet Security Association and Key Management\r\n                Protocol (ISAKMP)\", RFC 2409, November 1998.",
    "correct_text": "   [RFC2408]    Maughan, D., Schertler, M., Schneider, M. and J. Turner,\r\n                \"Internet Security Association and Key Management\r\n                Protocol (ISAKMP)\", RFC 2408, November 1998.",
    "notes": "Incorrect reference to RFC 2409",
    "submit_date": "2010-06-29",
    "submitter_name": "Nikolai Malykh",
    "verifier_id": "113",
    "verifier_name": "Lars Eggert",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "2660",
    "doc-id": "RFC3168",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": "header block",
    "orig_text": "Updates: 2474, 2401, 793",
    "correct_text": "Updates: 2474, 2401, 2003, 793",
    "notes": "RFC 3168 updates RFC 2003 but does not indicate this in its header block.\r\n\r\nSpecifically, Section 9 of RFC 3168 defines processing of the ECN field for Encapsulated Packets. This updates RFC 2003, which specified \"IP Encapsulation within IP\" at a time before the ECN field was defined.",
    "submit_date": "2010-12-04",
    "submitter_name": "Bob Briscoe",
    "verifier_id": "113",
    "verifier_name": "Lars Eggert",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "3636",
    "doc-id": "RFC3168",
    "errata_status_code": "Rejected",
    "errata_type_code": "Editorial",
    "section": "6.1.1.",
    "orig_text": "If the TCP connection does not\r\n   wish to use ECN notification for a particular packet, the sending TCP\r\n   sets the ECN codepoint to not-ECT, and the TCP receiver ignores the\r\n   CE codepoint in the received packet.",
    "correct_text": "If the TCP connection does not\r\n   wish to use ECN notification for a particular packet, the sending TCP\r\n   sets the ECN codepoint to not-ECT.",
    "notes": "CE should not be set on not-ECT capable packets. If this happens anyway, the CE codepoint would overwrite the ECT codepoint. Thus there is no way for the receiver to know it should ignore the CE codepoint; the sentence is therefore nonsensical.\n --VERIFIER NOTES-- \nSee discussions in the tsvwg (http://www.ietf.org/mail-archive/web/tsvwg/current/msg11989.html)",
    "submit_date": "2013-06-04",
    "submitter_name": "Mirja Kühlewind",
    "verifier_id": "133",
    "verifier_name": "Martin Stiemerling",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "3639",
    "doc-id": "RFC3168",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "6.1 / 6.1.3",
    "orig_text": "Section 6.1 says:\r\n\r\n\r\n      * The receiver receives the packet with the CE codepoint set, and\r\n        sets the ECN-Echo flag in its next TCP ACK sent to the sender.\r\n[...]\r\n\r\n      * The sender sets the CWR flag in the TCP header of the next\r\n        packet sent to the receiver to acknowledge its receipt of and\r\n        reaction to the ECN-Echo flag.\r\n\r\nSection 6.1.3 says:\r\n\r\n\r\n   When TCP receives a CE data packet at the destination end-system, the\r\n   TCP data receiver sets the ECN-Echo flag in the TCP header of the\r\n   subsequent ACK packet. \r\n\r\n   [...]\r\n                                               The TCP receiver uses the\r\n   CWR flag received from the TCP sender to determine when to stop\r\n   setting the ECN-Echo flag.\r\n   ",
    "correct_text": "Section 6.1.3 should say:\r\n \r\n   The TCP receiver uses the\r\n   CWR flag received from the TCP sender to determine when to stop\r\n   setting the ECN-Echo flag. This check has to be performed before  \r\n   checking if the received segment is CE marked.",
    "notes": "The ordering of the text in the bullet points in section 6.1, and the text in section 6.1.3 can led to inappropriate implementations. At least Section 6.1.3 should be strict about the handling of CE-marked CWR-segments.\r\n\r\n\r\nIf CE is checked first, and ECE set, and thereafter CWR used to disable ECE, a CE-marked CWR segment will not result in the sending of an additional window of ECEs.\r\n\r\n\r\nAll derivatives of BSD used to \r\n\r\nFirst, set ECE because of CE\r\nSecond, reset ECE because of CWR\r\n\r\nHowever, the \"authorative\" NS2 sample code, the TBIT tool, Windows, Solaris and Linux would\r\n\r\nFirst, reset ECE because of CWR\r\nSecond, set ECE because of CE\r\n\r\nThe latter approach seems to be the sensible one, and it was quickly fixed:\r\n\r\nhttp://lists.freebsd.org/pipermail/freebsd-bugs/2010-April/039450.html",
    "submit_date": "2013-06-05",
    "submitter_name": "Richard Scheffenegger",
    "verifier_id": "133",
    "verifier_name": "Martin Stiemerling",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "3680",
    "doc-id": "RFC3168",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "6.1.1.",
    "orig_text": "If the TCP connection does not\r\nwish to use ECN notification for a particular packet, the sending TCP\r\nsets the ECN codepoint to not-ECT, and the TCP receiver ignores the\r\nCE codepoint in the received packet.",
    "correct_text": "If the TCP connection does not\r\nwish to use ECN notification for a particular packet, the sending TCP\r\nsets the ECN codepoint to not-ECT.",
    "notes": "The receiver should not ignore any CE codepoint.\n --VERIFIER NOTES-- \nThis is not an editorial fix or technical clarification, but proposes to change the processing of ECN. Please go ahead and write a draft that works towards updating RFC 3168.",
    "submit_date": "2013-07-12",
    "submitter_name": "Mirja Kühlewind",
    "verifier_id": "133",
    "verifier_name": "Martin Stiemerling",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "4754",
    "doc-id": "RFC3168",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "Header block",
    "orig_text": "Updates: 2474, 2401, 2003, 793\r\n",
    "correct_text": "Updates: 2474, 2401, 2003, 2473, 793",
    "notes": "RFC 3168 updates RFC 2473 but does not indicate this in its header block.\r\n\r\nSpecifically, Section 9 of RFC 3168 defined processing of the ECN field for Encapsulated Packets, which updated section 6.4 of RFC 2473, where the creation of the \"IPv6 Tunnel Packet Traffic Class\" was specified. RFC3168 also updated the decapsulation behaviour of the ECN field in an IPv6 tunnel header, which had not been specified in RFC2473.\r\n\r\nNote 1: As well as tagging RFC3168 with this erratum, RFC2473 needs to be tagged (in the RFC index and associated tools outputs) to indicate that it is updated by RFC3168.\r\n\r\nNote 2: Originally, the \"Updates:\" header of RFC3168 did not contain \"2003\", which was added as a result of Errata ID 2660.\r\n\r\nNote 3: The first sentence of section 9.1 in RFC3168 should also be modified as follows:\r\nOriginal text:\r\n   The encapsulation of IP packet headers in tunnels is used in many\r\n   places, including IPsec and IP in IP [RFC2003].\r\nCorrected text:\r\n   The encapsulation of IP packet headers in tunnels is used in many\r\n   places, including IPsec and IP in IP [RFC2003, 2473].\r\nComment: \r\n   Nowadays RFC2473 would be a normative reference, but RFC3168 pre-dated the categorisation of references into normative and informative.\r\n\r\nNote 4: Section 9 of RFC3168 has since been updated by RFC6040. Nonetheless, that is already correctly identified in RFC6040.\r\n\r\nThis reported errata has be moved to \"Held for Document Update\". While the reported problem is correct and needs to be addressed, it is not just an errata but a larger oversight at publication time.",
    "submit_date": "2016-07-31",
    "submitter_name": "Bob Briscoe",
    "verifier_id": "153",
    "verifier_name": "Mirja Kühlewind",
    "update_date": "2020-03-04 01:58:32"
  },
  {
    "errata_id": "4997",
    "doc-id": "RFC3168",
    "errata_status_code": "Rejected",
    "errata_type_code": "Editorial",
    "section": "Header",
    "orig_text": "Updates: 2474, 2401, 793",
    "correct_text": "Updates: 2474, 2460, 2401, 793\r\n\r\n",
    "notes": "RFC 3168 updates RFC 2460 but does not indicate this in its header block.\r\n\r\nSpecifically, Section 5.3 of RFC 3168 requires that the ECN field of a reassembled IPv6 datagram be calculated from the ECN fields of all of the fragments, rather than simply copying it from the initial fragment as specified in RFC 2460.\r\n\r\nThere are other missing Updates: fields; see e.g. Erratum 2660.\n --VERIFIER NOTES-- \nThis is a borderline case, as RFC 2474 already changes the semantics of this field and is correctly listed in the Updates field. Anyway, this would be \"Hold for Document Update\", but RFC 2460 has already been updated with RFC 8200.",
    "submit_date": "2017-04-17",
    "submitter_name": "C. M. Heard",
    "verifier_id": "167",
    "verifier_name": "Martin Duke",
    "update_date": "2020-04-20 08:32:09"
  },
  {
    "errata_id": "5966",
    "doc-id": "RFC3168",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": "6.1",
    "orig_text": "Section 6.1 states:\r\n\r\n      * The sender sets the CWR flag in the TCP header of the next\r\n        packet sent to the receiver to acknowledge its receipt of and\r\n        reaction to the ECN-Echo flag.\r\n\r\nsection 6.1.2 clarifies:\r\n\r\n   \r\n   We ensure that the \"Congestion Window Reduced\" information is\r\n   reliably delivered to the TCP receiver.  This comes about from the\r\n   fact that if the new data packet carrying the CWR flag is dropped,\r\n   then the TCP sender will have to again reduce its congestion window,\r\n   and send another new data packet with the CWR flag set.  Thus, the\r\n   CWR bit in the TCP header SHOULD NOT be set on retransmitted packets.\r\n\r\n   When the TCP data sender is ready to set the CWR bit after reducing\r\n   the congestion window, it SHOULD set the CWR bit only on the first\r\n   new data packet that it transmits.",
    "correct_text": "Section 6.1 should say:\r\n\r\n\r\n      * The sender sets the CWR flag in the TCP header of the next new \r\n        data packet sent to the receiver to acknowledge its receipt of and\r\n        reaction to the ECN-Echo flag.\r\n ",
    "notes": "Discrepancies in the above text lead to poorly interoperating implementations. In NetBSD (and derived implementationd), the \"SHOULD set CWR on new data\" was used liberal in setting CWR on the very next packet to be sent, regardless of type. While at the same time the Linux implementation performed very stingent tests on the receiver side, if the sender was complying with the \"SHOULD\" like a \"MUST\". In request-response session with frequently changing data direction, this leads to a collapse of the congestion window, as the *BSD side will continue to interpret the still latched ECE flag as an indication of another RTT of congestion.\r\n\r\n== Reviewer note: The original report recommended a requirement that TCP receivers MUST process CWR on any packet, data or otherwise. While this would be helpful to interoperate implementations that are incorrect due to this erratum, it is a slight change in the intent of the document.",
    "submit_date": "2020-01-26",
    "submitter_name": "Richard Scheffenegger",
    "verifier_id": "167",
    "verifier_name": "Martin Duke",
    "update_date": "2020-04-20 08:42:05"
  },
  {
    "errata_id": "6494",
    "doc-id": "RFC3168",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "Header",
    "orig_text": "Updates: 2474, 2401, 793 ",
    "correct_text": "Updates: 2474, 2401, 793, 791",
    "notes": "This is the first standards-track RFC to assign the two unused bits of the IP TOS byte to ECN. Granted it was suggested in RFC2481, but that was experimental and unable to update RFC791 because it would create a downref.\n --VERIFIER NOTES-- \n   As several have pointed out on the list, 2474 itself updates 791, so someone following 791 through the tree of its updates will consider 3168.",
    "submit_date": "2021-03-24",
    "submitter_name": "Joe Touch",
    "verifier_id": "167",
    "verifier_name": "Martin Duke",
    "update_date": "2021-03-24 17:00:06"
  }
]
