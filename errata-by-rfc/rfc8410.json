[
  {
    "errata_id": 5459,
    "doc-id": "RFC8410",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": 7,
    "orig_text": "   -----BEGIN PRIVATE KEY-----\r\n   MHICAQEwBQYDK2VwBCIEINTuctv5E1hK1bbY8fdp+K06/nwoy/HU++CXqI9EdVhC\r\n   oB8wHQYKKoZIhvcNAQkJFDEPDA1DdXJkbGUgQ2hhaXJzgSEAGb9ECWmEzf6FQbrB\r\n   Z9w7lshQhqowtrbLDFw4rXAxZuE=\r\n   -----END PRIVATE KEY------",
    "correct_text": "   -----BEGIN PRIVATE KEY-----\r\n   MHICAQEwBQYDK2VwBCIEINTuctv5E1hK1bbY8fdp+K06/nwoy/HU++CXqI9EdVhC\r\n   oB8wHQYKKoZIhvcNAQkJFDEPDA1DdXJkbGUgQ2hhaXJzgSEAGb9ECWmEzf6FQbrB\r\n   Z9w7lshQhqowtrbLDFw4rXAxZuE=\r\n   -----END PRIVATE KEY-----",
    "notes": "Should be five dashes instead of six, at the end",
    "submit_date": "2018-08-13",
    "submitter_name": "Conrado Gouvea",
    "verifier_id": 159,
    "verifier_name": "Benjamin Kaduk",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 5696,
    "doc-id": "RFC8410",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": 5,
    "orig_text": "   If the keyUsage extension is present in a certification authority\r\n   certificate that indicates id-Ed25519 or id-Ed448, then the keyUsage\r\n   extension MUST contain one or more of the following values:\r\n\r\n          nonRepudiation;\r\n          digitalSignature;\r\n          keyCertSign; and\r\n          cRLSign.",
    "correct_text": "   If the keyUsage extension is present in a certification authority\r\n   certificate that indicates id-Ed25519 or id-Ed448, then the keyUsage\r\n   extension MUST contain keyCertSign, and zero, one or more of the\r\n   following values:\r\n\r\n          nonRepudiation;\r\n          digitalSignature; and\r\n          cRLSign.",
    "notes": "The usage keyCertSign must be set in a CA certificate.",
    "submit_date": "2019-04-17",
    "submitter_name": "Lijun Liao",
    "verifier_id": 99,
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 5707,
    "doc-id": "RFC8410",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": 10.2,
    "orig_text": "",
    "correct_text": "",
    "notes": "In the example certificate, the critical-field of extensions keyUsage and subjectKeyIdentifier are of default value 'false'. They should not be included according to DER encoding rule.",
    "submit_date": "2019-04-29",
    "submitter_name": "Lijun Liao",
    "verifier_id": 159,
    "verifier_name": "Benjamin Kaduk",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 5709,
    "doc-id": "RFC8410",
    "errata_status_code": "Rejected",
    "errata_type_code": "Editorial",
    "section": 10.2,
    "orig_text": "-",
    "correct_text": "-",
    "notes": "The example certificate is a self-signed certificate containing X25519 public key. Unlike standard EC public key, the public key for key exchange is NOT the same as the one for digital signature in curve25519. That means, for the same private key, the public keys for X25519 and for Ed25519 are different. As a result, the public key in the self-signed certificate can NOT be used to verify the signature. In this context, please replace the example certificate by one containing the Ed25519 public key.\n --VERIFIER NOTES-- \nX25519 keys are only capable of key agreement, not signing, so by necessity a self-issued X25519 certificate cannot be self-signed.  This document specifies, among other things, how to encode  X25519 public keys into X.509 certificates, and so the example is accordingly a self-issued but not self-signed certificate.  The issuing certificate has the same subject name but a different key (and key type).",
    "submit_date": "2019-04-29",
    "submitter_name": "Lijun Liao",
    "verifier_id": 159,
    "verifier_name": "Benjamin Kaduk",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 6229,
    "doc-id": "RFC8410",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": 10.2,
    "orig_text": "An example of a self-issued PKIX certificate using Ed25519 to sign an\r\nX25519 public key would be",
    "correct_text": null,
    "notes": "The given example certificate is self-issued but not self-signed (which is fine because its public key cannot be used for signing).\r\nIt includes a subjectKeyIdentifier but not an authorityKeyIdentifier.\r\n\r\nFor not self-signed certificates RFC 5280 requires in section 4.2.1.1 (https://tools.ietf.org/html/rfc5280#section-4.2.1.1) that the authorityKeyIdentifier is present.\r\n\r\nThus for such an example certificate the authorityKeyIdentifier MUST be added in order to be a conforming certificate.\r\nOtherwise, cert chain validation will be mislead to assume that the certificate is self-signed (while usually not actually verifying this supposition).",
    "submit_date": "2020-07-12",
    "submitter_name": "David von Oheimb",
    "verifier_id": 99,
    "verifier_name": null,
    "update_date": null
  },
  {
    "errata_id": 6263,
    "doc-id": "RFC8410",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": 7,
    "orig_text": "NOTE: There exist some private key import functions that have not picked up the new ASN.1 structure OneAsymmetricKey that is defined in [RFC7748].",
    "correct_text": "NOTE: There exist some private key import functions that have not picked up the new ASN.1 structure OneAsymmetricKey that is defined in [RFC5958].",
    "notes": "RFC7748 does not define or even mention OneAsymmetricKey. The correct reference should be RFC5958 \"Asymmetric Key Packages\"",
    "submit_date": "2020-08-24",
    "submitter_name": "David Ireland",
    "verifier_id": 99,
    "verifier_name": null,
    "update_date": null
  },
  {
    "errata_id": 6738,
    "doc-id": "RFC8410",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "7 and 10.3",
    "orig_text": "Section 7 says\r\n\r\n   OneAsymmetricKey ::= SEQUENCE {\r\n      version Version,\r\n      privateKeyAlgorithm PrivateKeyAlgorithmIdentifier,\r\n      privateKey PrivateKey,\r\n      attributes [0] IMPLICIT Attributes OPTIONAL,\r\n      ...,\r\n      [[2: publicKey [1] IMPLICIT PublicKey OPTIONAL ]],\r\n      ...\r\n   }\r\n\r\n2nd example given in both section 7 and section 10.3:\r\n\r\n   -----BEGIN PRIVATE KEY-----\r\n   MHICAQEwBQYDK2VwBCIEINTuctv5E1hK1bbY8fdp+K06/nwoy/HU++CXqI9EdVhC\r\n   oB8wHQYKKoZIhvcNAQkJFDEPDA1DdXJkbGUgQ2hhaXJzgSEAGb9ECWmEzf6FQbrB\r\n   Z9w7lshQhqowtrbLDFw4rXAxZuE=\r\n   -----END PRIVATE KEY------\r\n\r\nASN.1 dump of this private key in section 10.3:\r\n\r\n   The same item dumped as ASN.1 yields:\r\n\r\n     0 114: SEQUENCE {\r\n     2   1:   INTEGER 1\r\n     5   5:   SEQUENCE {\r\n     7   3:     OBJECT IDENTIFIER '1 3 101 112'\r\n          :     }\r\n    12  34:   OCTET STRING, encapsulates {\r\n          :     04 20 D4 EE 72 DB F9 13 58 4A D5 B6 D8 F1 F7 69\r\n          :     F8 AD 3A FE 7C 28 CB F1 D4 FB E0 97 A8 8F 44 75\r\n          :     58 42\r\n          :     }\r\n    48  31:   [0] {\r\n    50  29:     SEQUENCE {\r\n    52  10:       OBJECT IDENTIFIER '1 2 840 113549 1 9 9 20'\r\n    64  15:       SET {\r\n    66  13:         UTF8String 'Curdle Chairs'\r\n          :         }\r\n          :       }\r\n          :     }\r\n   81  33:   [1] 00 19 BF 44 09 69 84 CD FE 85 41 BA C1 67 DC 3B\r\n                 96 C8 50 86 AA 30 B6 B6 CB 0C 5C 38 AD 70 31 66\r\n                 E1\r\n          :   }\r\n",
    "correct_text": "Correct definition in section 7:\r\n\r\n   OneAsymmetricKey ::= SEQUENCE {\r\n     version                   Version,\r\n     privateKeyAlgorithm       PrivateKeyAlgorithmIdentifier,\r\n     privateKey                PrivateKey,\r\n     attributes            [0] Attributes OPTIONAL,\r\n     ...,\r\n     [[2: publicKey        [1] PublicKey OPTIONAL ]],\r\n     ...\r\n   }\r\n\r\nExample key in section 7 and 10.3:\r\n\r\n   -----BEGIN PRIVATE KEY-----\r\n   MHQCAQEwBQYDK2VwBCIEINTuctv5E1hK1bbY8fdp+K06/nwoy/HU++CXqI9EdVhC\r\n   oB8wHQYKKoZIhvcNAQkJFDEPDA1DdXJkbGUgQ2hhaXJzoSMDIQAZv0QJaYTN/oVB\r\n   usFn3DuWyFCGqjC2tssMXDitcDFm4Q==\r\n   -----END PRIVATE KEY-----\r\n\r\n\r\nASN.1 dump of this private key in section 10.3:\r\n\r\n     0 116: SEQUENCE {\r\n     2   1:   INTEGER 1\r\n     5   5:   SEQUENCE {\r\n     7   3:     OBJECT IDENTIFIER '1 3 101 112'\r\n          :     }\r\n    12  34:   OCTET STRING, encapsulates {\r\n          :     04 20 D4 EE 72 DB F9 13 58 4A D5 B6 D8 F1 F7 69\r\n          :     F8 AD 3A FE 7C 28 CB F1 D4 FB E0 97 A8 8F 44 75\r\n          :     58 42\r\n          :     }\r\n    48  31:   [0] {\r\n    50  29:     SEQUENCE {\r\n    52  10:       OBJECT IDENTIFIER '1 2 840 113549 1 9 9 20'\r\n    64  15:       SET {\r\n    66  13:         UTF8String 'Curdle Chairs'\r\n          :         }\r\n          :       }\r\n          :     }\r\n    81  35:   [1] {      \r\n    83  33:     BIT STRING {\r\n                  00 19 BF 44 09 69 84 CD FE 85 41 BA C1 67 DC 3B\r\n                  96 C8 50 86 AA 30 B6 B6 CB 0C 5C 38 AD 70 31 66\r\n                  E1\r\n                  }\r\n                }\r\n          :   }\r\n",
    "notes": "OneAsymmetricKey is defined in RFC 5958. It does NOT define attributes and publicKey as IMPLICIT.",
    "submit_date": "2021-11-16",
    "submitter_name": "Daniel Minder",
    "verifier_id": 99,
    "verifier_name": null,
    "update_date": null
  }
]
