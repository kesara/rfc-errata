[
  {
    "errata_id": 2120,
    "doc-id": "RFC5479",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "4.4,3rd para",
    "orig_text": "|  A typical case of using media security where two entities are having\r\n   a Voice over IP (VoIP) conversation over IP-capable networks.\r\n   [...]",
    "correct_text": "|  A typical case of using media security is where two entities are\r\n   having a Voice over IP (VoIP) conversation over IP-capable networks.\r\n   [...]",
    "notes": "Rationale: missing verb.",
    "submit_date": "2010-04-05",
    "submitter_name": "Alfred Hoenes",
    "verifier_id": 118,
    "verifier_name": "Robert Sparks",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 2121,
    "doc-id": "RFC5479",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "5.1 - 5.3",
    "orig_text": null,
    "correct_text": null,
    "notes": "Sections 5.1 through 5.3 use unexpected irregular, non-uniform\r\nindentation in hanging lists; this is accompanied by dangling\r\nhyphens in 5.2 ( s/third- party/third-party/ and \r\ns/crypto- agility/crypto-agility/ !).\r\n\r\n(Keep for update!)\r\nthird- party",
    "submit_date": "2010-04-05",
    "submitter_name": "Alfred Hoenes",
    "verifier_id": 118,
    "verifier_name": "Robert Sparks",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 2122,
    "doc-id": "RFC5479",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "App. A",
    "orig_text": "[[ second-to-last paragraph, on mid-page 24: ]]\r\n\r\n   Related to SRTP's characteristics is a goal that any SRTP keying\r\n|  mechanism to also be efficient and not cause additional call setup\r\n   delay.",
    "correct_text": "   Related to SRTP's characteristics is a goal that any SRTP keying\r\n|  mechanism also be efficient and not cause additional call setup\r\n   delay.",
    "notes": "Rationale: language/grammar improvement -- keep for update!",
    "submit_date": "2010-04-05",
    "submitter_name": "Alfred Hoenes",
    "verifier_id": 118,
    "verifier_name": "Robert Sparks",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 2123,
    "doc-id": "RFC5479",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "A.1.7",
    "orig_text": "[[ second paragraph: ]]\r\n\r\n   With this proposal, the ECDSA signature, MIKEY-ECIES, and MIKEY-ECMQV\r\n|  function exactly like MIKEY-RSA, and the new DH-Group code function\r\n   exactly like MIKEY-DHSIGN.  Therefore, these ECC mechanisms are not\r\n   discussed separately in this document.\r\n",
    "correct_text": "   With this proposal, the ECDSA signature, MIKEY-ECIES, and MIKEY-ECMQV\r\n|  function exactly like MIKEY-RSA, and the new DH-Group code functions\r\n   exactly like MIKEY-DHSIGN.  Therefore, these ECC mechanisms are not\r\n   discussed separately in this document.\r\n",
    "notes": "Rationale: singular/plural mismatch -- keep for update!",
    "submit_date": "2010-04-05",
    "submitter_name": "Alfred Hoenes",
    "verifier_id": 118,
    "verifier_name": "Robert Sparks",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 2124,
    "doc-id": "RFC5479",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "A.1.11",
    "orig_text": "   MIKEYv2 [MIKEYv2] adds mode negotiation to MIKEYv1 and removes the\r\n   time synchronization requirement.  It therefore now takes 2 round\r\n   trips to complete.  In the first round trip, the communicating\r\n   parties learn each other's identities, agree on a MIKEY mode, crypto\r\n|  algorithm, SRTP policy, and exchanges nonces for replay protection.\r\n   In the second round trip, they negotiate unicast and/or group SRTP\r\n   context for SRTP and/or SRTCP.\r\n",
    "correct_text": "   MIKEYv2 [MIKEYv2] adds mode negotiation to MIKEYv1 and removes the\r\n   time synchronization requirement.  It therefore now takes 2 round\r\n   trips to complete.  In the first round trip, the communicating\r\n   parties learn each other's identities, agree on a MIKEY mode, crypto\r\n|  algorithm, SRTP policy, and exchange nonces for replay protection.\r\n   In the second round trip, they negotiate unicast and/or group SRTP\r\n   context for SRTP and/or SRTCP.\r\n",
    "notes": "Rationale: singular/plural mismatch -- keep for update!",
    "submit_date": "2010-04-05",
    "submitter_name": "Alfred Hoenes",
    "verifier_id": 118,
    "verifier_name": "Robert Sparks",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 2125,
    "doc-id": "RFC5479",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "A.4.3",
    "orig_text": "|  In SRTP, a cryptographic context is defined as the SSRC, destination\r\n|  network address, and destination transport port number.  Whereas RTP,\r\n|  a flow is defined as the destination network address and destination\r\n   transport port number.  This results in a problem -- how to\r\n   communicate the SSRC so that the SSRC can be used for the\r\n   cryptographic context.\r\n",
    "correct_text": "|  In SRTP, a cryptographic context is defined by the SSRC, destination\r\n|  network address, and destination transport port number, whereas in RTP,\r\n|  a flow is defined by the destination network address and destination\r\n   transport port number.  This results in a problem -- how to\r\n   communicate the SSRC so that the SSRC can be used for the\r\n   cryptographic context.\r\n",
    "notes": "Rationale: clarification/language improvement -- keep for update!",
    "submit_date": "2010-04-05",
    "submitter_name": "Alfred Hoenes",
    "verifier_id": 118,
    "verifier_name": "Robert Sparks",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 2126,
    "doc-id": "RFC5479",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "A.5.3",
    "orig_text": "[[ 4th paragraph: ]]\r\n\r\n   Currently, several techniques are commonly considered as candidates\r\n|  to provide opportunistic encryption:\r\n",
    "correct_text": "   Currently, several techniques are commonly considered as candidates\r\n|  to provide best effort encryption:\r\n",
    "notes": "Rationales: consistency with section headline.",
    "submit_date": "2010-04-05",
    "submitter_name": "Alfred Hoenes",
    "verifier_id": 118,
    "verifier_name": "Robert Sparks",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 2602,
    "doc-id": "RFC5479",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "A.5.2",
    "orig_text": "      SDP Security Descriptions with SIPS\r\n         Not applicable; SDP Security Descriptions does not have a long-\r\n         term secret.",
    "correct_text": "      SDP Security Descriptions with SIPS\r\n         The PFS feature of SDP Security Description with SIPS rely on \r\n         TLS and the availability or not of PFS for SRTP calls depends \r\n         on the negotiated TLS key negotiation algorithm.\r\n\r\n         If the selected TLS key negotiation algorithm of SIPS provide \r\n         PFS feature, then the underlying SRTP encryption will support PFS. \r\n         For example TLS_DHE_RSA_WITH_AES_256_CBC_SHA provde PFS feature as \r\n         described in RFC5246.\r\n\r\n         If the selected TLS key negotiation algorithm of SIPS does not \r\n         provide PFS feature, then the underlying SRTP encryption will not \r\n         support PFS. For example TLS_RSA_WITH_AES_256_CBC_SHA does not \r\n         provide PFS feature as described in RFC5246.\r\n",
    "notes": "It's not true that SDP Security Descriptions with SIPS have PFS \"Not applicable\" because the SDES rely on TLS that is part of the security scheme.\r\n\r\nPractically if the long terms keys (the x509v3 RSA key of SIPS server) is compromised, the TLS sessions can be decrypted, the SDES key extracted and SRTP calls deciphered.\r\n\r\nTLS support key exchange methods that provide PFS trough the use of Ephemeral Diffie Hellman keys.\r\n\r\nWhen SIPS use TLS with DHE key negotiation, then SDES acquire PFS feature because even in case of long-term key compromise (the server x509v3 RSA key), the short term keys (the SDES keys exchanged) will be safe.\r\n\r\n----\r\nFrom reviewer Dale Worley:\r\n\r\nIt seems that the entry for \"SDP Security Descriptions with S/MIME\" is\r\nalso incorrect, as revelation of the private keys of the participants\r\nwill render the SDES readable.  I think better phrasing of the revised\r\n\r\nwording is:\r\n\r\n    SDP Security Descriptions with SIPS\r\n\r\n       PFS if the selected TLS cipher suites for the SIPS hops provide PFS.\r\n\r\n    SDP Security Descriptions with S/MIME\r\n\r\n       No PFS.",
    "submit_date": "2010-11-04",
    "submitter_name": "Fabio Pietrosanti",
    "verifier_id": 2,
    "verifier_name": "Robert Sparks",
    "update_date": "2019-09-10 09:09:03"
  }
]
