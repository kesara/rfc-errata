[
  {
    "errata_id": 48,
    "doc-id": "RFC4588",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": 8.1,
    "orig_text": "   The following MIME subtype name and parameters are introduced in this\r\n   document: \"rtx\", \"rtx-time\", and \"apt\".\r\n\r\n   The binding used for the retransmission stream to the payload type\r\n   number is indicated by an rtpmap attribute.  The MIME subtype name\r\n   used in the binding is \"rtx\".\r\n\r\n   The \"apt\" (associated payload type) parameter MUST be used to map the\r\n   retransmission payload type to the associated original stream payload\r\n   type.  If multiple original payload types are used, then multiple\r\n   \"apt\" parameters MUST be included to map each original payload type\r\n   to a different retransmission payload type.\r\n",
    "correct_text": "   The following MIME subtype name and parameters are introduced in this\r\n   document: \"rtx\", \"rtx-time\", and \"apt\".\r\n\r\n   The binding used for the retransmission stream to the payload type\r\n   number is indicated by an rtpmap attribute.  The MIME subtype name\r\n   used in the binding is \"rtx\".  The MIME type of the retransmission\r\n   stream MUST be the same as the MIME type of the original stream.\r\n\r\n   The \"apt\" (associated payload type) parameter MUST be used to map the\r\n   retransmission payload type to the associated original stream payload\r\n   type.  If multiple original payload types are used, then multiple\r\n   \"apt\" parameters MUST be included to map each original payload type\r\n   to a different retransmission payload type.",
    "notes": "This text only addresses the use of the media *sub*-type.  Apparently,\r\nit is implied that the media *type* of the associated streams match,\r\nbut I could not find a statement to this end in the RFC.\r\n\r\n(In accordance with the language of RFC 4588, but contrary to BCP 13,\r\n RFC 4288, I have again used the traditional wording \"MIME type\" here\r\n instead of the currently recommended \"media type\".)\r\n\r\nfrom pending\r\n\r\n--VERIFIER COMMENT--\r\n\r\nThanks for your comments. However, I don't consider them worth of correction. Most are just editorial nits, some of which are even wrong. So, for the time being as Joerg said:\r\n\r\n\"We will be happy to archive these and migt consider them if we do a revision of the RFC. But an errata document would only make sense if there is something seriously hindering interoperability. I have not seen anything falling into this category (well, and there are implementations out there from the spec).\"",
    "submit_date": "2006-08-14",
    "submitter_name": "Alfred Hoenes",
    "verifier_id": 99,
    "verifier_name": "Jose Rey",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 759,
    "doc-id": "RFC4588",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": 99,
    "orig_text": "(1)  [missing article]\r\n\r\nWithin Section 4 of RFC 4588, the second paragraph on page 8 says:\r\n\r\n            [...].  See Section 8.1 for the specification of how the\r\n   mapping between original and retransmission payload types is done\r\n|  with Session Description Protocol (SDP).\r\n\r\nIt should say:\r\n\r\n            [...].  See Section 8.1 for the specification of how the\r\n   mapping between original and retransmission payload types is done\r\n|  with the Session Description Protocol (SDP).\r\n       ^^^^^\r\n\r\n\r\n(2)  [improper wording]\r\n\r\nThe 4th paragraph of Section 6.3, on page 12, says:\r\n\r\n            [...].  In such cases, an appropriate \"reorder delay\"\r\n   algorithm may not actually be timer based, but packet based.  For\r\n|  example, if n number of packets are received after a gap is detected,\r\n   then it may be assumed that the packet was truly lost rather than out\r\n   of order.  This may turn out to be far easier to code on some\r\n   platforms as a very short fixed FIFO packet buffer as opposed to the\r\n   timer-based mechanism.\r\n\r\nIt should say:\r\n\r\n            [...].  In such cases, an appropriate \"reorder delay\"\r\n   algorithm may not actually be timer based, but packet based.  For\r\n|  example, if n packets are received after a gap is detected, then it\r\n   may be assumed that the packet was truly lost rather than out of\r\n   order.  This may turn out to be far easier to code on some platforms\r\n   as a very short fixed FIFO packet buffer as opposed to the timer-\r\n   based mechanism.\r\n\r\n(Alternatively, use  \"if a number n of packets ...\"  instead of the\r\n offending \"if n number of packets ...\" )\r\n\r\n\r\n(3)  [word omission]\r\n\r\nIn the first paragraph of Section 6.4, on page 13, RFC 4588 says:\r\n\r\n   [...]                                      v\r\n|  Sending NACKs only in regular RTCP compound decreases the maximum\r\n   delay between detecting an original packet loss and being able to\r\n   send a NACK for that packet.  Implementers should consider the\r\n   possible implications of this fact for the application being used.\r\n\r\nIt should say:\r\n\r\n   [...]                                      vvvvvvvvv\r\n|  Sending NACKs only in regular RTCP compound packets decreases the\r\n   maximum delay between detecting an original packet loss and being\r\n   able to send a NACK for that packet.  Implementers should consider\r\n   the possible implications of this fact for the application being\r\n   used.\r\n\r\n\r\n(4)  [[posted separately.]]\r\n\r\n\r\n(5)  [word omission]\r\n\r\nLater on in Section 8.1, on mid-page 15, the RFC says:\r\n\r\n      v\r\n|  The syntax is as follows:\r\n\r\n      a=fmtp:<number> apt=<apt-value>;rtx-time=<rtx-time-val>\r\n\r\nIt should say:\r\n\r\n      vvvvv\r\n|  The SDP syntax is as follows:\r\n\r\n      a=fmtp:<number> apt=<apt-value>;rtx-time=<rtx-time-val>\r\n\r\n(There also is a syntax for these parameters when written in a full\r\n MIME media type specification; this is not presented in the RFC,\r\n but it must be distinguished from the SDP syntax presented!)\r\n\r\n\r\n(6)  [excessive text]\r\n\r\nThe final paragraph of Section 8.6, on mid-page 20, says:\r\n\r\n   In the following sections, some example SDP descriptions are\r\n|  presented.  In some of these examples, long lines are folded to meet\r\n|  the column width constraints of this document; the backslash (\"\\\") at\r\n|  the end of a line and the carriage return that follows it should be\r\n|  ignored.\r\n\r\nIt would suffice to say:\r\n\r\n   In the following sections, some example SDP descriptions are\r\n|  presented.\r\n\r\nRationale:\r\nAs will be shown below, in the examples given in Section 8.7,\r\nthere in fact is no need to perform this artificial line folding.\r\n\r\n\r\n(7)  [simplification for improved clarity]\r\n\r\nThe artificial line folding in the examples in Section 8.7 can be\r\navoided without change in the indentation, while still conforming\r\nwith the line length limitations:\r\n\r\na) In the upper half of page 21, the lines,\r\n\r\n   a=fmtp:98 profile-level-id=8;config=01010000012000884006682C209\\\r\n   0A21F\r\n\r\nshould read:\r\n\r\n   a=fmtp:98 profile-level-id=8;config=01010000012000884006682C2090A21F\r\n\r\nb) In the lower half of page 21, the lines,\r\n\r\n   a=fmtp:96 profile-level-id=8;config=01010000012000884006682C209\\\r\n   0A21F\r\n\r\nshould read:\r\n\r\n   a=fmtp:96 profile-level-id=8;config=01010000012000884006682C2090A21F\r\n\r\nc) In the upper half of page 22, the lines,\r\n\r\n   a=fmtp:96 profile-level-id=8;config=01010000012000884006682C209\\\r\n   0A21F\r\n\r\nshould read:\r\n\r\n   a=fmtp:96 profile-level-id=8;config=01010000012000884006682C2090A21F\r\n\r\n\r\n(8)  [clarification]\r\n\r\nOn mid-page 21, the text in Section 8.7 says:\r\n\r\n   A special case of the SDP description is a description that contains\r\n   only one original session \"m\" line and one retransmission session \"m\"\r\n   line, the grouping is then obvious and FID semantics MAY be omitted\r\n   in this special case only.\r\n\r\nIt should better say:\r\n\r\n   A special case of the SDP description is a description that contains\r\n   only one original session \"m\" line and one retransmission session \"m\"\r\n|  line, the grouping is then obvious and lines with grouping syntax\r\n   (FID semantics) MAY be omitted in this special case only.\r\n\r\nRationale:\r\nIt is impossible to only omit *semantics*.\r\nCertain *lines* are omitted there -- the lines with grouping syntax\r\n(and FID semantics).\r\nAlternatively, \"(FID semantics)\" might be omitted entirely from\r\nthe changed text, as well.\r\n\r\n\r\n(9)  [word omission -- clarification]\r\n\r\nThe first paragraph of Section 10.2, on page 25, says:\r\n\r\n   This section shows how to combine retransmissions with layered\r\n   encoding in multicast sessions.  Note that the retransmission\r\n   framework is offered only for small multicast applications.  Refer to\r\n   RFC 2887 [10] for a discussion of the problems of NACK implosion,\r\n   severe congestion caused by feedback traffic, in large-group reliable\r\n   multicast applications.\r\n\r\nIt should better say:\r\n\r\n   This section shows how to combine retransmissions with layered\r\n   encoding in multicast sessions.  Note that the retransmission\r\n   framework is offered only for small multicast applications.  Refer to\r\n|  RFC 2887 [10] for a discussion of the problems of NACK implosion, and\r\n   severe congestion caused by feedback traffic, in large-group reliable\r\n   multicast applications.\r\n                                                                     ^^^\r\n\r\n\r\n(10)  [word omission]\r\n\r\nIn the first paragraph on page 27, text within Section 13 says:\r\n\r\n                                            [...].  Refer to Section 9.1\r\n   of the Secure Real-Time Transport Protocol (SRTP) [12] for a\r\n|  discussion the implications of two-time pads and how to avoid them.\r\n             ^\r\n\r\nIt should say:\r\n                                                    vvvvvvvvvvvvvvv\r\n                                            [...].  Refer to Section 9.1\r\n|  of the Secure Real-Time Transport Protocol (SRTP) specification [12]\r\n|  for a discussion of the implications of two-time pads and how to\r\n   avoid them.\r\n                   ^^^^\r\n\r\n(11)  [inconsistency]\r\n\r\nIn the fourth bullet on page 29, Appendix A.1 says:\r\n\r\n   * avg-rtcp-size is approximated by 120 bytes.  This is a rounded-up\r\n     average of 2 SRs, one for each SSRC, containing 40/8/28/32 bytes\r\n     for IPv6/UDP/SR/SDES with CNAME, thus making 105 bytes each; and a\r\n     RR with 40/8/64/32 bytes for IPv6/UDP/2*RR/SDES, making 157 bytes.\r\n     [...]\r\n\r\nI cannot follow these computations:\r\n    40+8+28+32 = 105  ???   and   40+8+64+32 = 157  ???\r\nWhat is wrong there?\r\nAuthors, please correct !\r\n\r\nBTW:\r\nWhat follows in the text essentially does not depend on the exact\r\nfigures, the rough order of magnitude is all that is needed.\r\nBut the presentation should be self-consistent.\r\n\r\n\r\n(12)  [improvement of wording]\r\n\r\nIn the 6th bullet of Appendix A.1, the text on page 29/30 says:\r\n\r\n        [...].  This means that if a packet is requested for\r\n     retransmission a maximum of 2 times, the corresponding generic NACK\r\n     report block requesting that particular packet is sent in two\r\n << page break >>\r\n|    consecutive RTCP compounds; likewise, if it is requested for\r\n     retransmission 10 times, then the generic NACK is sent 10 times.\r\n     [...]\r\n\r\nIt should say:\r\n\r\n        [...].  This means that if a packet is requested for\r\n     retransmission a maximum of 2 times, the corresponding generic NACK\r\n     report block requesting that particular packet is sent in two\r\n << page break >>\r\n|    consecutive RTCP compound packets; likewise, if it is requested for\r\n     retransmission 10 times, then the generic NACK is sent 10 times.\r\n     [...]\r\n\r\n\r\n(13)  [missing argument / clarification]\r\n\r\nOn page 31, Appendix A.2 says:\r\n                                               vv\r\n|  To find an estimate of the buffering time, T(), that a streaming\r\n   server shall use in order to enable a given number of retransmissions\r\n   for each packet, N.  [...]\r\n\r\nIt should say:\r\n                                               vvv\r\n|  To find an estimate of the buffering time, T(N), that a streaming\r\n   server shall use in order to enable a given number of retransmissions\r\n   for each packet, N.  [...]\r\n\r\n\r\n(14)  [fractional sign]\r\n\r\nWithin the tables in Appendix A.4, on pages 32 and 33, the RFC text\r\nuses the comma (\",\") as the fractional sign (central european style).\r\nIn IETF documents, the decimal point (\".\") should be used instead.\r\n\r\n\r\nAuthors, Please comment.\r\nItems (4) / (11) need agreement / text correction from you.\r\nItems (6) + (7) might be considered non-esssential.\r\nAll other items seem to be straightforward and suitable for\r\ninclusion in an Errata Note.\r\n",
    "correct_text": "",
    "notes": "from pending\r\n\r\n--VERIFIER COMMENT--\r\n\r\n\r\nThanks for your comments. However, I don't consider them worth of correction. Most are just editorial nits, some of which are even wrong. So, for the time being as Joerg said:\r\n\r\n\"We will be happy to archive these and migt consider them if we do a revision of the RFC.  But an errata document would only make sense if there is something seriously hindering interoperability.  I have not seen anything falling into this category (well, and there are implementations out there from the spec).\"\r\n",
    "submit_date": "2006-08-14",
    "submitter_name": "Alfred Hoenes",
    "verifier_id": 99,
    "verifier_name": "Jose Rey",
    "update_date": "2019-09-10 09:09:03"
  }
]
