[
  {
    "errata_id": 823,
    "doc-id": "RFC4204",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": 99,
    "orig_text": "(1)\r\n\r\nSection 10 specifies the required behaviour of *aperiodic*\r\ntransmission retries with exponential backoff.\r\n\r\n(1a)\r\nNevertheless, at various places the text talks about \"periodically\"\r\ntransmitting certain messages.  It should better say \"repeated[ly]\".\r\n\r\nExamples for this issue are:\r\n  -  Section 11.1.1, page 28 : introduction, and\r\n     the paragraphs labelled \"ConfSend:\" and \"Active:\" ;\r\n  -  Section 11.1.2, page 30, text for event '12a)' ;\r\n  -  Section 11.2.1, page 32 : introduction, and\r\n     the paragraphs labelled \"Init:\" and \"Up:\" ;\r\n  -  Section 11.3.1, page 35 : paragraph labelled \"Test:\" ;\r\n  -  Section 12.3.1, page 42, last paragraph;\r\n  -  Section 12.4, page 43, last paragraph;\r\n  -  Section 12.5.1, page 44, last paragraph;\r\n  -  Section 12.5.4, first line on page 46;\r\n  -  Section 12.5.6, final paragraph on page 46 (twice);\r\n  -  Section 12.6.1, second paragraph on page 48.\r\n\r\n(1b)\r\nAt the bottom of page 26, Section 10.1 defines the following\r\nparameter:\r\n\r\n   Rapid retry limit Rl:\r\n\r\n      Rl is the maximum number of times a message will be transmitted\r\n      without being acknowledged.\r\n\r\nThe naming of this variable is very unfortunate because in similar\r\ncontexts in protocol design, the \"retry limit\" customarily defines the\r\n(maximum) number of *re*-tries -- with 0 meaning no retries at all,\r\n1 meaning a single retry, etc.\r\nThe definition given means that the maximum number of retries will\r\nbe  <Rl> - 1 , thereby restricting the allowed range for <Rl> to 1\r\nor above, excluding the value 0, without mentioning this fact.\r\n\r\nBecause Section 10.2 codifies the abovementioned definition and this\r\ncertainly should not be changed after the fact of publication as an\r\nRFC, it might be advisable to post a warning note pointing to the\r\nspecific semantics of 'retry limit' with LMP, the admitted value\r\nrange, and in particular the use '1' for <Rl> to inhibit retries.\r\n\r\n\r\n(2)\r\n\r\nSection 12.2, on page 41, codifies an (unfortunately very popular)\r\ndesign flaw: the 'Length' field in LMP objects is specified as\r\ncomprising the cumulative size of the object contents *and* the\r\nobject prefix (4 bytes).  This unnecessarily creates illegal\r\nvalues (0..3) for 'Length' which must be checked for in all\r\nimplementations.  It would have been very muck preferrable to have\r\n'Length' just giving the size of the object contents (in bytes),\r\nwhereby Length=0 would be the very mnemonic (and most efficiently\r\ntestable) condition for empty object content\r\n\r\n[Note: In the case of LMP objects the 16 bit width of length does\r\n not constitute an artificial limitation to the size of the object\r\n contents, because the whole message must be shorter than 2**16\r\n bytes. This *is* a problem, e.g., for RADIUS with its single-octet\r\n 'Length' !]\r\n\r\n\r\n(3)\r\n\r\nIn Section 13.2, on page 51, the explanatory text after the diagram\r\nfor 'C-Type = 1' says:\r\n\r\n  Node_Id:\r\n\r\n     This identities the node that originated the LMP packet.\r\n                ^\r\nwhere it should say:\r\n\r\n  Node_Id:\r\n\r\n     This identifies the node that originated the LMP packet.\r\n                ^\r\nSimilarly, following the diagram for 'C-Type = 2', the same section\r\nsays at the top of page 52:\r\n\r\n   Node_Id:\r\n\r\n      This identities the remote node.\r\n                 ^\r\nwhere it should say:\r\n\r\n  Node_Id:\r\n\r\n      This identifies the remote node.\r\n                 ^\r\n\r\n(4) Section 13.8\r\n\r\na) The explanation for \"Flags:\" on page 57 contains the improperly\r\nindented and punctuated entry:\r\n\r\n      vvv\r\n         0x0002 Data Link Type\r\n\r\n            If set, the data links to be verified are ports, otherwise\r\n            they are component links\r\n                                    ^\r\nIt should specify instead:\r\n\r\n      0x0002 Data Link Type\r\n\r\n            If set, the data links to be verified are ports, otherwise\r\n            they are component links.\r\n                                    ^\r\n\r\nb) The explanation for \"Verify Transport Mechanism:\", on top of\r\npage 58, contains:\r\n\r\n      0x8000 Payload:Test Message transmitted in the payload\r\n                    ^^\r\nIt should say:\r\n\r\n      0x8000 Payload: Test Message transmitted in the payload\r\n                    ^^^\r\n\r\n\r\n(5) Wavelength encodings\r\n\r\nThis issue is related to:\r\n  -  Section 13.8, on page 57/58,  and\r\n  -  Section 13.12.1, on page 64 plus Section 13.12.1.2 on page 65.\r\n\r\nObviously -- and unfortunately --, RFC 4204 avoids specifying the\r\nadmissible encoding[s] and the related units for data elements\r\nspecifying Wavelengths.\r\n\r\nI suspect there could not be reached consensus on a single encoding\r\nstyle.  Nevertheless it would have been very desirable for the sake\r\nof interoperability to specify a (small) set of standard encodings,\r\ne.g.:\r\n  -  IEEE floating point, units: meters;\r\n  -  unsigned32, units: nanometers (or picometers?);\r\n  -  unsigned32 implementation specific wavelength identifiers;\r\n  -  0 always meaning: 'implicit / known by out-of-band methods'.\r\n\r\nAll occurences on 'Wavelength' data elements would have allowed for\r\nthe addition of some kind of 'wavelength encoding selector', e.g.\r\nas a 2-/3-/4-bit subfield of the already present 'Flags' field,\r\nor separate values of the already present 'subobject type'.\r\n\r\n\r\n(6)\r\nSection 13.12.1 says:\r\n\r\n    This is used to identify the local Interface Switching Type of the TE link as defined in [RFC3471].\r\n\r\nIt should say:\r\n\r\n    This is used to identify the local Interface Switching Type of the Data link as defined in [RFC3471]. \r\n\r\n(7)\r\n\r\nSection 16, near the bottom of page 77, contains wording inconsistent\r\nthe remainder of this section and with other parts of the document.\r\nThe two paragraphs:\r\n\r\n   The policy for allocating values out of the LMP Object Class name\r\n   space is part of the definition of the specific Class instance.  When\r\n   a Class is defined, its definition must also include a description of\r\n   the policy under which the Object Class names are allocated.\r\n\r\n   The policy for allocating values out of the LMP Sub-object Class name\r\n   space is part of the definition of the specific Class instance.  When\r\n   a Class is defined, its definition must also include a description of\r\n   the policy under which sub-objects are allocated.\r\n\r\nshould better say:\r\n                                                                vvvv\r\n   The policy for allocating values out of the LMP Object Class type\r\n   (C-type) name space is part of the definition of the specific Class\r\n   instance.  When a Class is defined, its definition must also include\r\n   a description of the policy under which the Object Class types are\r\n   allocated.\r\n\r\n   The policy for allocating values out of the LMP Sub-object Class type\r\n   (C-type) name space is part of the definition of the specific Class\r\n   instance.  When a Class is defined, its definition must also include\r\n   a description of the policy under which sub-objects are allocated.\r\n\r\n[Notes:\r\n The primary name space is the Class type (C-type) name space because\r\n its management is essential for interoperability; the class names are\r\n subordinated additional labels for the human reader and implementor.\r\n Above, I have added \"(C-type)\" for clarity; this is not absolutely\r\n necessary, if you dislike the repetition here.\r\n]\r\n\r\n\r\n(8)\r\n\r\nThere's another small typo in Section 16, at mid-page 82:\r\nThe headline:\r\n\r\n   o CHANNEL_STATUS_REQUESTClass name (14)\r\n\r\nshould be:\r\n\r\n   o CHANNEL_STATUS_REQUEST Class name (14)\r\n",
    "correct_text": "[see above] ",
    "notes": "from pending",
    "submit_date": "2005-12-20",
    "submitter_name": "Alfred Hoenes",
    "verifier_id": 119,
    "verifier_name": "Adrian Farrel",
    "update_date": "2019-09-10 09:09:03"
  }
]
