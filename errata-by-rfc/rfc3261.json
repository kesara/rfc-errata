[
  {
    "errata_id": 316,
    "doc-id": "RFC3261",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "99In Section 25.1: ",
    "orig_text": "     digest-uri-value  =  rquest-uri ; Equal to request-uri as\r\n                          specified by HTTP/1.1 ",
    "correct_text": "     digest-uri-value  =  request-uri ; Equal to request-uri as\r\n                          specified by HTTP/1.1\r\n",
    "notes": "",
    "submit_date": "2003-10-03",
    "submitter_name": "RFC Editor",
    "verifier_id": 99,
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 678,
    "doc-id": "RFC3261",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": 25.1,
    "orig_text": "On page 220, it says \"The TEXT-UTF8-TRIM rule is used for descriptive\r\nfield contents that are n t quoted strings, where leading and trailing\r\nLWS is not meaningful.\"  (And no, I'm not talking about the \"n t\"\r\ntypo.)  The rule for TEXT-UTF8-TRIM is\r\n\r\n TEXT-UTF8-TRIM  = 1*TEXT-UTF8char *(*LWS TEXT-UTF8char)\r\n TEXT-UTF8char = %x21-7E / UTF8-NONASCII\r\n\r\nwhich pretty clearly says that the final character of TEXT-UTF8-TRIM\r\ncannot be whitespace.  TEXT-UTF8-TRIM appears only as the value of a\r\nheader field, and the rule for message-header does not generate\r\ntrailing whitespace either.\r\n\r\nSo the text talks about trailing whitespace, which seems reasonable\r\nbecause whitespace is allowed in many other places, but the grammar\r\ndoes not allow it.  Was trailing whitespace intended?",
    "correct_text": "[not submitted]",
    "notes": "from pending",
    "submit_date": "2006-08-14",
    "submitter_name": "Matthew S. Harris",
    "verifier_id": 107,
    "verifier_name": "Cullen Jennings",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 832,
    "doc-id": "RFC3261",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": 99,
    "orig_text": "I would like to show you an ambiguity in RFC 3261.\r\n\r\nThe ABNF for SIP in RFC 3261 page 227 defines header Accept as \r\n\"Accept = \"Accept\" HCOLON [accept-range *(COMMA accept-range)].\r\n\r\nExpanding this form we have:\r\n\r\nAccept = \"Accept\" HCOLON [( (...) *(SEMI m-parameter) *(SEMI \r\naccept-param) ) *(COMMA accept-range)]\r\n\r\nFor example we can have\r\n\r\nAccept: \r\napplication/sdp;m_extension_parameter=value1;accept_extension_param=value2;q=0.5\r\nWe know from RFC 3261 that q is an accept-param.\r\nWe don't know how to consider the first two unknown parameters: how to \r\ndistinguish from m-parameter and accept-param?\r\n\r\nWhile in other cases RFC 3261 shows the rules to solve ambiguities (for \r\nexample how to consider the parameters in a Contact URI if the URI is \r\nnot enclosed in angular brackets) I have not found any suggestion for \r\nthis specific case in RFC 3261.",
    "correct_text": "[not submitted]",
    "notes": "from pending",
    "submit_date": "2006-01-11",
    "submitter_name": "Marco Ambu",
    "verifier_id": 118,
    "verifier_name": "Robert Sparks",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 1051,
    "doc-id": "RFC3261",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": 25.1,
    "orig_text": "    srvr           =  [ [ userinfo \"@\" ] hostport ]",
    "correct_text": "    srvr           =  [ [ userinfo ] hostport ]",
    "notes": "The character \"@\" should not appear in this rule since it already appears at the end of the rule \"userinfo\":\r\n\r\nuserinfo         =  ( user / telephone-subscriber ) [ \":\" password ] \"@\"\r\n\r\nAccording to the use of rule \"userinfo\" in other rules such as \"SIP-URI\" and \"SIPS-URI\", the correct place of character \"@\" is really at the end of rule \"userinfo\" and not in all other rules using it.",
    "submit_date": "2007-08-23",
    "submitter_name": "Alexandre Machado",
    "verifier_id": 118,
    "verifier_name": "Robert Sparks",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 1073,
    "doc-id": "RFC3261",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": 99,
    "orig_text": "I would like to show you an error in RFC 3261. I've discussed in\r\nSIP-implementors mailing list too.\r\n\r\nin RFC 3261 page 44 par 8.1.3.4 there is an example of URI (contact URI)\r\nwith uri headers:\r\n\r\nsip:user@host?Subject=foo&Call-Info=<http://www.foo.com>\r\n\r\nI've noticed that URI header \"Call-Info\" has a value with characters not\r\nallowed in uri headers.\r\n\r\nThe BNF says that an header value must contain characters in   \r\nhnv-unreserved or unreserved or escaped but '<' and '>' are not in that set.\r\n\r\nThe right example should be the following:\r\nsip:user@host?Subject=foo&Call-Info=%3Chttp://www.foo.com%3E  \r\n",
    "correct_text": "[not submitted]",
    "notes": "from pending",
    "submit_date": "2005-12-15",
    "submitter_name": "Marco Ambu",
    "verifier_id": 118,
    "verifier_name": "Robert Sparks",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 1470,
    "doc-id": "RFC3261",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "17.2.2",
    "orig_text": "If the TU passes a final response (status codes 200-699) to the \r\nserver while in the \"Proceeding\" state, the transaction MUST enter \r\nthe \"Completed\" state...",
    "correct_text": "If the TU passes a final response (status codes 200-699) to the \r\nserver while in the \"Trying\" or \"Proceeding\" state, the transaction \r\nMUST enter the \"Completed\" state...",
    "notes": "\"17.2.2 Non-INVITE Server Transaction\" doesn't consider the case in which the transaction state is \"Trying\" and the transaction receives from the TU a final response.\r\nIt's totally possible that TU sends a final response without sending before a provisional response. Note that this case is perfectly valid in the diagram of page 139.",
    "submit_date": "2008-07-14",
    "submitter_name": "I単aki Baz Castillo",
    "verifier_id": 118,
    "verifier_name": "Robert Sparks",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 1471,
    "doc-id": "RFC3261",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": 17,
    "orig_text": "Additionally, in the case of an INVITE request, the client\r\ntransaction is responsible for generating the ACK request for any\r\nfinal response accepting a 2xx response.",
    "correct_text": "Additionally, in the case of an INVITE request, the client\r\ntransaction is responsible for generating the ACK request for any\r\nfinal response excepting a 2xx response.",
    "notes": "\"accepting a 2xx response\" => \"excepting a 2xx response\"",
    "submit_date": "2008-07-14",
    "submitter_name": "I単aki Baz Castillo",
    "verifier_id": 118,
    "verifier_name": "Robert Sparks",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 1472,
    "doc-id": "RFC3261",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": 25.1,
    "orig_text": "The TEXT-UTF8-TRIM rule is used for descriptive field \r\ncontents that are n t quoted strings,",
    "correct_text": "The TEXT-UTF8-TRIM rule is used for descriptive field \r\ncontents that are not quoted strings,",
    "notes": "\"are n t\" => \"are not\"",
    "submit_date": "2008-07-14",
    "submitter_name": "I単aki Baz Castillo",
    "verifier_id": 118,
    "verifier_name": "Robert Sparks",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 1682,
    "doc-id": "RFC3261",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": 20.7,
    "orig_text": "Authorization: Digest username=\"Alice\", realm=\"atlanta.com\",\r\n  nonce=\"84a4cc6f3082121f32b42a2187831a9e\",\r\n  response=\"7587245234b3434cc3412213e5f113a5432\"",
    "correct_text": "Authorization: Digest username=\"Alice\", realm=\"atlanta.com\",\r\n  nonce=\"84a4cc6f3082121f32b42a2187831a9e\",\r\n  response=\"7587245234b3434cc3412213e5f113a5\"",
    "notes": "'response' field in original example has 35 hexadecimal characters while they must be 32:\r\n\r\n  dresponse         =  \"response\" EQUAL request-digest\r\n  request-digest    =  LDQUOT 32LHEX RDQUOT",
    "submit_date": "2009-02-10",
    "submitter_name": "I単aki Baz Castillo",
    "verifier_id": 118,
    "verifier_name": "Robert Sparks",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 1742,
    "doc-id": "RFC3261",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "17.1.1.2",
    "orig_text": "Timer D reflects the amount of time that the server transaction can\r\n   remain in the \"Completed\" state when unreliable transports are used.\r\n",
    "correct_text": "Timer D reflects the amount of time that the client transaction can\r\n   remain in the \"Completed\" state when unreliable transports are used.\r\n",
    "notes": "server transaction => client transaction\n --VERIFIER NOTES-- \n   The original text is correct. The value (and reason) for timer D is to reflect what's happening in the server transaction. See the discussion of Timer H that immediately follows the text quoted above.",
    "submit_date": "2009-03-25",
    "submitter_name": "Pankaj Jain",
    "verifier_id": 118,
    "verifier_name": "Robert Sparks",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 2051,
    "doc-id": "RFC3261",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": "26.3.1",
    "orig_text": "   Proxy servers, redirect\r\n   servers, and registrars SHOULD possess a site certificate whose\r\n   subject corresponds to their canonical hostname. ",
    "correct_text": "   Proxy servers, redirect\r\n   servers, and registrars SHOULD possess a site certificate whose\r\n   subject corresponds to the DNS name other SIP devices will use to reach them. ",
    "notes": "The term hostname seemed to make some people think if you had two sip servers for the domain example.com with hostnames host1 and host2, the the cert should have host1.example.com when in fact the sip signaling always used exmaple.com and the cert should have a example.com as the name.",
    "submit_date": "2010-02-24",
    "submitter_name": "Cullen Jennings",
    "verifier_id": 118,
    "verifier_name": "Robert Sparks",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 2769,
    "doc-id": "RFC3261",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "17.1.2.2",
    "orig_text": "   MUST be passed to the transport layer for transmission.  If an\r\n   unreliable transport is in use, the client transaction MUST set timer\r\n   E to fire in T1 seconds.  If timer E fires while still in this state,\r\n   the timer is reset, but this time with a value of MIN(2*T1, T2).\r\n   When the timer fires again, it is reset to a MIN(4*T1, T2).  This\r\n   process continues so that retransmissions occur with an exponentially\r\n   increasing interval that caps at T2.",
    "correct_text": "   MUST be passed to the transport layer for transmission.  If an\r\n   unreliable transport is in use, the client transaction MUST set timer\r\n   E to fire in T1 seconds.  If timer E fires while still in this state,\r\n   the timer is reset, but this time with a value of MIN(2*T1, T2).\r\n   When the timer fires again, it is reset to a MIN(4*T1, T2). Multiplier\r\n   on T1 doubles with each reset so that retransmissions occur with an\r\n   exponentially increasing interval that caps at T2.",
    "notes": "The original text doesn't clarify that the multiplier of T1 is doubled with each timer reset, so it could be understood that the maximum value the timer takes is MIN(4*T1, T2) which is 2s (so the timer would never reach 4s and the resulting intervals would be 500ms, 1s, 2s, 2s, 2s, 2s, etc).",
    "submit_date": "2011-04-08",
    "submitter_name": "I単aki Baz Castillo",
    "verifier_id": 118,
    "verifier_name": "Robert Sparks",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 2910,
    "doc-id": "RFC3261",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "Table 2",
    "orig_text": "      Header field          where   proxy ACK BYE CAN INV OPT REG\r\n      ___________________________________________________________\r\n      Contact                1xx           -   -   -   o   -   -",
    "correct_text": "      Header field          where   proxy ACK BYE CAN INV OPT REG\r\n      ___________________________________________________________\r\n      Contact                1xx           -   -   -   m   -   -",
    "notes": "RFC 3261 says:\r\n\r\nSection 12.1: \"Dialogs are created through the generation of non-failure responses to requests with specific methods.  Within this specification, only 2xx and 101-199 responses with a To tag, where the request was INVITE, will establish a dialog.\"\r\n\r\nSection 12.1.1: \"When a UAS responds to a request with a response that establishes a dialog (such as a 2xx to INVITE), the UAS MUST copy all Record-Route header field values from the request into the response [...].  The UAS MUST add a Contact header field to the response.\"\r\n\r\nSo it's clear that a 1xx response to an INVITE creates a dialog and then it MUST contain a Contact header and mirrored Record-Route headers.\r\n\r\nHowever Table 2 (page 162) says:\r\n\r\n      Header field          where   proxy ACK BYE CAN INV OPT REG\r\n      ___________________________________________________________\r\n      Contact                1xx           -   -   -   o   -   -\r\n      Record-Route        2xx,18x    mr    -   o   o   o   o   -\r\n\r\nObviously Record-Route is optional since in the absence of a proxy doing record-routing, such header will not be present. However Contact header should appear as mandatory (m) for 1xx responses for INVITE rather than optional (o).\n --VERIFIER NOTES-- \n1xx also includes 100 Trying, which cannot establish a Dialog. Contact is not mandatory in 100 Trying responses. ",
    "submit_date": "2011-08-02",
    "submitter_name": "I単aki Baz Castillo",
    "verifier_id": 118,
    "verifier_name": "Robert Sparks",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 3098,
    "doc-id": "RFC3261",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "12.2.1.1",
    "orig_text": "A client could, for example, choose the 31 most significant bits of a 32-bit\r\n second clock as an initial sequence number.\r\n\r\n",
    "correct_text": "A client could, for example, choose the 31 least significant bits of a 32-bit\r\n second clock as an initial sequence number.\r\n\r\n",
    "notes": "Choosing the most sig 31 bits would violate 8.1.1.5, where initial CSeq number must be less than 2**31\r\n\r\n8.1.1.5: The sequence number value MUST be expressible as a 32-bit unsigned integer and MUST be less than 2**31.\r\n\r\n\r\nREVIEWER NOTE (rjsparks@nostrum.com) : It was explicitly the intent to point to the most significant bits. The confusion in this report is not recognizing that the intent is to treat those as a 31-bit integer (which by definition will be less than 2**31). Rather than reject the errata, I'm putting this in hold for document update so future revisions can clarify the point.",
    "submit_date": "2012-01-27",
    "submitter_name": "Alec Davis",
    "verifier_id": 118,
    "verifier_name": "Robert Sparks",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 3102,
    "doc-id": "RFC3261",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "12.2.1.1",
    "orig_text": "      With a length of 32 bits, a client could generate, within a single\r\n      call, one request a second for about 136 years before needing to\r\n      wrap around.  The initial value of the sequence number is chosen\r\n      so that subsequent requests within the same call will not wrap\r\n      around.",
    "correct_text": "      With a length of 32 bits, a client could generate, within a single\r\n      call, one request a second for about 136 years before exhausting\r\n      available sequence numbers. Sequence numbers must not wrap around to 0.\r\n      The initial value of the sequence number (less than 2**31) is chosen\r\n      so that subsequent requests within the same call will not exceed 2**32-1.\r\n      ",
    "notes": "Highlight that within a dialog sequence numbers;\r\n   1). can increment to 2**32-1\r\n   2). must not wrap around to 0",
    "submit_date": "2012-02-01",
    "submitter_name": "Alec Davis",
    "verifier_id": 118,
    "verifier_name": "Robert Sparks",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 3183,
    "doc-id": "RFC3261",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "23.4.3",
    "orig_text": "         --boundary42\r\n         Content-Type: application/pkcs7-mime; smime-type=enveloped-data;\r\n              name=smime.p7m\r\n         Content-Transfer-Encoding: base64\r\n         Content-Disposition: attachment; filename=smime.p7m\r\n            handling=required\r\n         Content-Length: 231\r\n\r\n",
    "correct_text": "   --boundary42\r\n         Content-Type: application/pkcs7-mime; smime-type=enveloped-data;\r\n              name=smime.p7m\r\n         Content-Transfer-Encoding: base64\r\n         Content-Disposition: attachment; filename=smime.p7m\r\n            handling=required\r\n\r\n",
    "notes": "A Content-Length header is shown for a body-part within a multipart body. But Content-Length is an HTTP/SIP header, not a IANA-registered MIME header and should therefore not appear at that location in valid examples. The length of a body part within a multipart body is determined by MIME framing. A Content-Length header found for a body-part within a multipart body is meaningless and should be ignored.\r\n\r\nThis was discussed on both the SIP Implementors and SIP Core mailing lists.",
    "submit_date": "2012-04-10",
    "submitter_name": "Bruno CHATRAS",
    "verifier_id": 118,
    "verifier_name": "Robert Sparks",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 3237,
    "doc-id": "RFC3261",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "8.1.3.5",
    "orig_text": "   In all of the above cases, the request is retried by creating a new\r\n   request with the appropriate modifications.  This new request\r\n   constitutes a new transaction and SHOULD have the same value of the\r\n   Call-ID, To, and From of the previous request, but the CSeq should\r\n   contain a new sequence number that is one higher than the previous.",
    "correct_text": "   In all of the above cases, the request is retried by creating a new \r\n   request with the appropriate modifications.  This new request \r\n   constitutes a new transaction and SHOULD have the same value of the \r\n   Call-ID, To, and From of the previous request, but the CSeq SHOULD \r\n   contain a new sequence number that is one higher than the previous.",
    "notes": "We have had one implementor claim that they are not required to increment CSeq when retrying the request because the RFC says 'should' and not 'SHOULD'. Based on current IETF discussions, though, these should probably be changed to MUST anyway, but that's a much more substantive change throughout the whole RFC.",
    "submit_date": "2012-05-31",
    "submitter_name": "Kevin P. Fleming",
    "verifier_id": 2,
    "verifier_name": "Robert Sparks",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 3684,
    "doc-id": "RFC3261",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": 7.3,
    "orig_text": " Specifically, any SIP header whose grammar is of the form\r\n\r\n      header  =  \"header-name\" HCOLON header-value *(COMMA header-value)\r\n\r\n   allows for combining header fields of the same name into a comma-\r\n   separated list.  The Contact header field allows a comma-separated\r\n   list unless the header field value is \"*\".",
    "correct_text": " Specifically, any SIP header whose grammar is of the form\r\n\r\n      header  =  header-name HCOLON header-value *(COMMA header-value)\r\n\r\n   allows for combining header fields of the same name into a comma-\r\n   separated list.  The Contact header field allows a comma-separated\r\n   list unless the header field value is \"*\".",
    "notes": "That is, remove the double quotes around the word `header-name' in the ABNF.",
    "submit_date": "2013-07-16",
    "submitter_name": "Colin Fraizer",
    "verifier_id": 123,
    "verifier_name": "Gonzalo Camarillo",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 3875,
    "doc-id": "RFC3261",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": 17,
    "orig_text": "17 Transcations\r\n\r\n - Additionally, in the case of an INVITE request, the client\r\ntransaction is responsible for generating the ACK request for any\r\nfinal response accepting a 2xx response.",
    "correct_text": "17 Transcations\r\n\r\n - Additionally, in the case of an INVITE request, the client\r\ntransaction is responsible for generating the ACK request for any\r\nfinal response excepting a 2xx response.",
    "notes": "Client transaction should generate the ACK except for 2xx responses.It should not accept & generate the ACK for 2xx response.\r\nFor Server transaction RFC says - \"In the case of an INVITE transaction, it absorbs the ACK request for any final response excepting a 2xx response.\"",
    "submit_date": "2014-01-31",
    "submitter_name": "Varun Bharadwaj S V",
    "verifier_id": 136,
    "verifier_name": "Richard Barnes",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 4084,
    "doc-id": "RFC3261",
    "errata_status_code": "Reported",
    "errata_type_code": "Editorial",
    "section": "13.2.2.4",
    "orig_text": "   If the dialog identifier in the 2xx response matches the dialog\r\n   identifier of an existing dialog, the dialog MUST be transitioned to\r\n   the \"confirmed\" state, and the route set for the dialog MUST be\r\n   recomputed based on the 2xx response using the procedures of Section\r\n   12.2.1.2.",
    "correct_text": "   If the dialog identifier in the 2xx response matches the dialog\r\n   identifier of an existing dialog, the dialog MUST be transitioned to\r\n   the \"confirmed\" state, and the route set for the dialog MUST be\r\n   recomputed based on the 2xx response using the procedures of Section\r\n   12.2.1.1.",
    "notes": "The procedures of recomputing the route set should refer to the Section 12.2.1.1, rather than Section 12.2.1.2. \r\n\r\nActually in Section 12.2.1.2, there is no procedure of computing route set. Instead, the related procedures can only be found in Section 12.2.1.1.\r\n\r\nTo avoid misleading, \"12.2.1.2\" here should be \"12.2.1.1\" instead.",
    "submit_date": "2014-08-15",
    "submitter_name": "Xing Lou Han",
    "verifier_id": 99,
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 4275,
    "doc-id": "RFC3261",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": 15,
    "orig_text": "The caller's UA MAY send a BYE for either confirmed or early dialogs",
    "correct_text": "The caller's UA MUST send a BYE for confirmed dialogs",
    "notes": "In general, BYE shall be handled in the same way as CANCEL if it is for early dialogs.\r\nIn case, when BYE is on the way to the destination, the callee probably accepts INVITE, the race condition will occure.\r\nIf we follow the procedure as CANCEL, caller shall send ACK for 200 OK and immediately release the session using BYE.\r\nSo two BYEs will be triggered in the case, it does not make sense.",
    "submit_date": "2015-02-19",
    "submitter_name": "Chao Wang",
    "verifier_id": 99,
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 4300,
    "doc-id": "RFC3261",
    "errata_status_code": "Reported",
    "errata_type_code": "Editorial",
    "section": 24.2,
    "orig_text": "F2 100 Trying atlanta.com proxy -> Alice\r\n(...)\r\nF3 INVITE atlanta.com proxy -> biloxi.com proxy\r\n(...)\r\nF4 100 Trying biloxi.com proxy -> atlanta.com proxy\r\n(...)\r\nF5 INVITE biloxi.com proxy -> Bob",
    "correct_text": "F3 100 Trying atlanta.com proxy -> Alice\r\n(...)\r\nF2 INVITE atlanta.com proxy -> biloxi.com proxy\r\n(...)\r\nF5 100 Trying biloxi.com proxy -> atlanta.com proxy\r\n(...)\r\nF4 INVITE biloxi.com proxy -> Bob",
    "notes": "Figure 1 in Section 4 shows different indexes for the 100 Trying and INVITE messages.",
    "submit_date": "2015-03-12",
    "submitter_name": "Tamas Horvath",
    "verifier_id": 99,
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 4379,
    "doc-id": "RFC3261",
    "errata_status_code": "Reported",
    "errata_type_code": "Editorial",
    "section": 25.1,
    "orig_text": "Errata ID: 316\r\ndigest-uri-value  =  request-uri ; Equal to request-uri\r\n                                   as specified by HTTP/1.1\r\n",
    "correct_text": "digest-uri-value  =  rquest-uri ; Equal to request-uri\r\n                                  as specified by HTTP/1.1\r\n",
    "notes": "Rule names are case-insensitive.\r\nRequest-URI has been defined already.\r\nAn original definition is correct.\r\nAlternatively, it may refer to request-target as specified by RFC 7230.",
    "submit_date": "2015-05-28",
    "submitter_name": "OKUMURA Shinji",
    "verifier_id": 99,
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 4385,
    "doc-id": "RFC3261",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "17.2.1",
    "orig_text": "                               |INVITE\r\n                               |pass INV to TU\r\n            INVITE             V send 100 if TU won't in 200ms\r\n            send response+-----------+\r\n                +--------|           |--------+101-199 from TU\r\n                |        | Proceeding|        |send response\r\n                +------->|           |<-------+\r\n                         |           |          Transport Err.\r\n                         |           |          Inform TU\r\n                         |           |--------------->+\r\n                         +-----------+                |",
    "correct_text": "                               |INVITE\r\n                               |-\r\n            INVITE             V send 100 if TU won't in 200ms\r\n            send response+-----------+\r\n                +--------|           |--------+101-199 from TU\r\n                |        | Proceeding|        |send response\r\n                +------->|           |<-------+\r\n                         |           |          Transport Err.\r\n                         |           |          Inform TU\r\n                         |           |--------------->+\r\n                         +-----------+                |",
    "notes": "The standard states about lifetime of the server transaction:\r\n\r\n\"Server transactions are created by the\r\ncore when a request is received, and transaction handling is desired\r\nfor that request (this is not always the case).\"(17.2)\r\n\r\nSo this means that the server transaction is created by the TU (the core). This also means that it is useless to *pass INV to TU* due to that TU itself already has the request.\r\n\r\nThe same logic should apply to Figure 8. as well.",
    "submit_date": "2015-06-02",
    "submitter_name": "Krisztian Sinka",
    "verifier_id": 147,
    "verifier_name": "Ben Campbell",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 4553,
    "doc-id": "RFC3261",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": 20.11,
    "orig_text": "The handling parameter, handling-param, describes how the UAS should\r\nreact if it receives a message body whose content type or disposition\r\ntype it does not understand.  The parameter has defined values of\r\n\"optional\" and \"required\".  If the handling parameter is missing, the\r\nvalue \"required\" SHOULD be assumed.  The handling parameter is\r\ndescribed in RFC 3204 [19].\r\n",
    "correct_text": "The handling parameter, handling-param, describes how the UAS should\r\nreact if it receives a message body whose content type or disposition\r\ntype it does not understand.  The parameter has defined values of\r\n\"optional\" and \"required\".  If the handling parameter is missing, or if\r\nthe Content-Disposition header field is missing, the value \"required\" \r\nMUST be assumed.  The handling parameter is described in RFC 3204 [19].\r\n",
    "notes": "SIPCORE discussion: https://mailarchive.ietf.org/arch/msg/sipcore/bn-pRgDyGL2FP_M7eYpyT35zNp4",
    "submit_date": "2015-12-04",
    "submitter_name": "Christer Holmberg",
    "verifier_id": 2,
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 4567,
    "doc-id": "RFC3261",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": 20.11,
    "orig_text": "The handling parameter, handling-param, describes how the UAS should\r\nreact if it receives a message body whose content type or disposition\r\ntype it does not understand. The parameter has defined values of\r\n\"optional\" and \"required\". If the handling parameter is missing, the\r\nvalue \"required\" SHOULD be assumed. The handling parameter is\r\ndescribed in RFC 3204 [19].",
    "correct_text": "The handling parameter, handling-param, describes how the UAS should\r\nreact if it receives a message body whose content type or disposition\r\ntype it does not understand. The parameter has defined values of\r\n\"optional\" and \"required\". If the handling parameter is missing, or if\r\nthe Content-Disposition header field is missing, the value \"required\" \r\nSHOULD be assumed. The handling parameter is described in RFC 3204 [19].\r\n",
    "notes": null,
    "submit_date": "2015-12-17",
    "submitter_name": "Christer Holmberg",
    "verifier_id": 147,
    "verifier_name": "Ben Campbell",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 4637,
    "doc-id": "RFC3261",
    "errata_status_code": "Reported",
    "errata_type_code": "Editorial",
    "section": "23.4.3",
    "orig_text": "        ghyHhHUujhJhjH77n8HHGTrfvbnj756tbB9HG4VQpfyF467GhIGfHfYT6\r\n        4VQpfyF467GhIGfHfYT6jH77n8HHGghyHhHUujhJh756tbB9HGTrfvbnj\r\n        n8HHGTrfvhJhjH776tbB9HG4VQbnj7567GhIGfHfYT6ghyHhHUujpfyF4\r\n        7GhIGfHfYT64VQbnj756\r\n\r\n        --boundary42-",
    "correct_text": "        ghyHhHUujhJhjH77n8HHGTrfvbnj756tbB9HG4VQpfyF467GhIGfHfYT6\r\n        4VQpfyF467GhIGfHfYT6jH77n8HHGghyHhHUujhJh756tbB9HGTrfvbnj\r\n        n8HHGTrfvhJhjH776tbB9HG4VQbnj7567GhIGfHfYT6ghyHhHUujpfyF4\r\n        7GhIGfHfYT64VQbnj756\r\n\r\n        --boundary42--",
    "notes": "As far as I know a boundary end should end with two dashes as for RFC 3851 for that specific case, hence it should be :\r\n\r\n --boundary42--",
    "submit_date": "2016-03-11",
    "submitter_name": "Boris Shtrasman",
    "verifier_id": 99,
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 4675,
    "doc-id": "RFC3261",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "8.1.1.3",
    "orig_text": "   Examples:\r\n\r\n      From: \"Bob\" <sips:bob@biloxi.com> ;tag=a48s\r\n      From: sip:+12125551212@phone2net.com;tag=887s\r\n      From: Anonymous <sip:c8oqz84zk7z@privacy.org>;tag=hyh8\r\n",
    "correct_text": "   Examples:\r\n\r\n      From: \"Bob\" <sips:bob@biloxi.com> ;tag=a48smh2\r\n      From: sip:+12125551212@phone2net.com;tag=887s6pa\r\n      From: Anonymous <sip:c8oqz84zk7z@privacy.org>;tag=hyh8mtf\r\n",
    "notes": "I know this is more than a little picayune, but...\r\n\r\nSection 19.3 says:\r\n\r\n   When a tag is generated by a UA for insertion into a request or\r\n   response, it MUST be globally unique and cryptographically random\r\n   with at least 32 bits of randomness.\r\n\r\nThis implies that the tag value must be at least 32 bits in size.\r\n\r\nSection 25.1 says:\r\n\r\n      token       =  1*(alphanum / \"-\" / \".\" / \"!\" / \"%\" / \"*\"\r\n                     / \"_\" / \"+\" / \"`\" / \"'\" / \"~\" )\r\nand\r\n      tag-param   =  \"tag\" EQUAL token\r\n\r\nAlthough the actual representation of the tag value is implementation-specific, since there are only 72 characters available with which to encode it, a tag value with only four characters can represent a maximum of 72^4 distinct numeric values, which is less than the 2^32 values that can be represented by 32 bits by a factor of nearly 160.\r\n\r\nEven if the implementation chooses to omit \"leading zeros\" (or something equivalent), the likelihood of three 32 bit random values all falling in the range of values that can be represented in four characters would be less than one in five million. So even if the given examples are theoretically possible for a conforming implementation, they seem rather misleading.\r\n\r\nFor a \"typical\" 32 bit random value, even with base74 encoding, the shortest tag value would require six characters. Given that all three examples (which are also repeated almost unchanged in section 20.20) contain no uppercase ALPHA characters in the tag values, the implied encoding is more likely something like base32 or base36, which would require at least seven characters to represent a typical 32 bit random value. So that's how I'm suggesting that the examples be amended.",
    "submit_date": "2016-04-21",
    "submitter_name": "Bruce Florman",
    "verifier_id": 147,
    "verifier_name": "Ben Campbell",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 5598,
    "doc-id": "RFC3261",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": 25.1,
    "orig_text": "display-name   =  *(token LWS)/ quoted-string",
    "correct_text": "display-name   =  token *(LWS token)/ quoted-string",
    "notes": "There is a contradiction between the ABNF rule and specification.\r\n\r\nThe name-addr ABNF rule in RFC 3261 specifies:\r\n\r\nname-addr      =  [ display-name ] LAQUOT addr-spec RAQUOT\r\naddr-spec      =  SIP-URI / SIPS-URI / absoluteURI\r\ndisplay-name   =  *(token LWS)/ quoted-string\r\n\r\nBased on this, LWS is always required between token and the \"<\" and the following Name-Address value is invalid: foo<sip:foo@bar.com>\r\n\r\nAt the same time section 20.10 says:\r\n\r\nThere may or may not be LWS between the display-name and the \"<\".\r\n\r\nThis implies that foo<sip:foo@bar.com> should be acceptable.\r\n\r\nI propose to change ABNF rule for display-name to allow no LWS between last token and the \"<\"",
    "submit_date": "2019-01-11",
    "submitter_name": "Roman Shpount",
    "verifier_id": 147,
    "verifier_name": "Ben Campbell",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 5619,
    "doc-id": "RFC3261",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": 4,
    "orig_text": "The address \r\nof the atlanta.com SIP server could have been configured in Alice's\r\nsoftphone, or it could have been discovered by DHCP, for example.",
    "correct_text": "The address \r\nof the atlanta.com SIP server could have been configured in Alice's \r\nsoftphone, or it could have been discovered by DNS, for example.",
    "notes": "DHCP Server gives away the DNS-Server to use (or sets it with DHCP option) but usually does no address translation itself. It would also be possible to omit the whole sentence.\n --VERIFIER NOTES-- \n   DHCP was the intent of the example.",
    "submit_date": "2019-01-31",
    "submitter_name": "Isabella Damb旦ck",
    "verifier_id": 147,
    "verifier_name": "Ben Campbell",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 5653,
    "doc-id": "RFC3261",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "17.1.1.2",
    "orig_text": null,
    "correct_text": null,
    "notes": "When a INVITE client transaction transitions to Proceeding state (upon receiving a provisional response), the request retransmission stops (for an unreliable transport) i.e. Timer A is stopped. \r\nHowever in Proceeding state, Timer B, i.e. Transaction Timeout Timer can still fire if no final response is received in stipulated time in which case the TU should be informed and the transaction should transition to Terminated state.\r\n\"Figure 5: INVITE client transaction\" in RFC 3261 does not show the Timer B expiry event in Proceeding state. This means that we are saying there is a guarantee that a final response will always be received in Proceeding state which may not always be the case.\r\nIn my opinion, the Proceeding state in Figure 5 should be updated to include a Timer B event.",
    "submit_date": "2019-03-12",
    "submitter_name": "Vimal Chandra Tewari",
    "verifier_id": 99,
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 6645,
    "doc-id": "RFC3261",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": 23.3,
    "orig_text": "Content-Disposition: attachment; filename=smime.p7m\r\n           handling=required",
    "correct_text": "Content-Disposition: attachment; filename=smime.p7m;\r\n           handling=required",
    "notes": "The example for Content-Disposition header is incorrectly formatted according to the BNF.\r\nIt is missing a semicolon between each disp-param.\r\n(Relevant section of BNF posted below)\r\n\r\nContent-Disposition   =  \"Content-Disposition\" HCOLON\r\n                         disp-type *( SEMI disp-param )\r\ndisp-type             =  \"render\" / \"session\" / \"icon\" / \"alert\"\r\n                         / disp-extension-token\r\ndisp-param            =  handling-param / generic-param\r\nhandling-param        =  \"handling\" EQUAL\r\n                         ( \"optional\" / \"required\"\r\n                         / other-handling )\r\nother-handling        =  token\r\ndisp-extension-token  =  token\r\n\r\nThis also occurs in 23.4.3",
    "submit_date": "2021-07-20",
    "submitter_name": "Matt Hertogs",
    "verifier_id": 99,
    "verifier_name": null,
    "update_date": null
  }
]
