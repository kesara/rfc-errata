[
  {
    "errata_id": "5466",
    "doc-id": "RFC8422",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "5.3",
    "orig_text": "   Actions of the sender:\r\n\r\n   The server constructs an appropriate certificate chain and conveys it\r\n   to the client in the Certificate message.  If the client has used a\r\n   Supported Elliptic Curves Extension, the public key in the server's\r\n   certificate MUST respect the client's choice of elliptic curves.  A\r\n   server that cannot satisfy this requirement MUST NOT choose an ECC\r\n   cipher suite in its ServerHello message.)",
    "correct_text": "   Actions of the sender:\r\n\r\n   The server constructs an appropriate certificate chain and conveys it\r\n   to the client in the Certificate message.  If the client has used a\r\n   Supported Elliptic Curves Extension, the public key in the server's\r\n   certificate MUST respect the client's choice of elliptic curves.  A\r\n   server that cannot satisfy this requirement MUST NOT choose an ECC\r\n   cipher suite in its ServerHello message.",
    "notes": "This removes the spurious closing parenthesis of the last sentence of the \"Actions of the sender\" paragraph.",
    "submit_date": "2018-08-17",
    "submitter_name": "Masato Gosui",
    "verifier_id": "159",
    "verifier_name": "Benjamin Kaduk",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "5468",
    "doc-id": "RFC8422",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "5.4",
    "orig_text": "   namedCurve: Specifies a recommended set of elliptic curve domain",
    "correct_text": "   namedcurve: Specifies a recommended set of elliptic curve domain",
    "notes": "This fixes mismatched names of the variable \"namedcurve\" in the \"Structure of this message\" paragraph.",
    "submit_date": "2018-08-17",
    "submitter_name": "Masato Gosui",
    "verifier_id": "173",
    "verifier_name": "Paul Wouters",
    "update_date": "2024-01-16 18:52:13"
  },
  {
    "errata_id": "5703",
    "doc-id": "RFC8422",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "5.10.",
    "orig_text": "All RSA signatures must be generated and verified according to\r\n   Section 7.2 of [RFC8017].",
    "correct_text": "All RSA signatures must be generated and verified according to\r\n   Section 8.2 of [RFC8017].",
    "notes": "Section 7.2 of RFC 8017 describes the RSAES-PKCS1-v1_5 encryption scheme. Section 8.2 of RFC 8017 describes the RSASSA-PKCS1-v1_5 signature scheme. The original text contradicts the natural expectation and is probably wrong. If it was intended, there should have been a thorough explanation (like in the well-known case of IKEv1 using the encryption scheme for signing).",
    "submit_date": "2019-04-23",
    "submitter_name": "Frank Theinen",
    "verifier_id": "159",
    "verifier_name": "Benjamin Kaduk",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "6002",
    "doc-id": "RFC8422",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "9",
    "orig_text": "   IANA has assigned two values in the \"TLS SignatureAlgorithm\" registry\r\n   for ed25519 (7) and ed448 (8) with this document as reference.  This\r\n   keeps compatibility with TLS 1.3.\r\n",
    "correct_text": "   IANA has assigned two values in the \"TLS SignatureAlgorithm\" registry\r\n   for ed25519 (7) and ed448 (8) with DTLS-OK set to \"Y\" and this document\r\n   as reference.  This keeps compatibility with TLS 1.3.",
    "notes": "IANA had consulted with Yoav, one of the authors (and a TLS registry expert), who explicitly told them to use DTLS-OK of \"Y\", but this clarification was not reflected in the final RFC.  This also matches the text in the subsequent paragraph.",
    "submit_date": "2020-03-02",
    "submitter_name": "Rich Salz",
    "verifier_id": "159",
    "verifier_name": "Benjamin Kaduk",
    "update_date": "2020-03-05 14:34:52"
  },
  {
    "errata_id": "8179",
    "doc-id": "RFC8422",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "5.4.  Server Key Exc",
    "orig_text": "   The ServerKeyExchange message is extended as follows.\r\n\r\n           enum {\r\n               ec_diffie_hellman\r\n           } KeyExchangeAlgorithm;\r\n\r\n   o  ec_diffie_hellman: Indicates the ServerKeyExchange message\r\n      contains an ECDH public key.\r\n\r\n      select (KeyExchangeAlgorithm) {\r\n          case ec_diffie_hellman:\r\n              ServerECDHParams    params;\r\n              Signature           signed_params;\r\n      } ServerKeyExchange;\r\n\r\n.....................................................\r\n\r\n        enum {\r\n            ecdsa(3),\r\n            ed25519(7)\r\n            ed448(8)\r\n        } SignatureAlgorithm;\r\n        select (SignatureAlgorithm) {\r\n           case ecdsa:\r\n                digitally-signed struct {\r\n                    opaque sha_hash[sha_size];\r\n                };\r\n           case ed25519,ed448:\r\n                digitally-signed struct {\r\n                    opaque rawdata[rawdata_size];\r\n                };\r\n        } Signature;\r\n      ServerKeyExchange.signed_params.sha_hash\r\n          SHA(ClientHello.random + ServerHello.random +\r\n                                 ServerKeyExchange.params);\r\n      ServerKeyExchange.signed_params.rawdata\r\n          ClientHello.random + ServerHello.random +\r\n                                 ServerKeyExchange.params;\r\n\r\n   NOTE: SignatureAlgorithm is \"rsa\" for the ECDHE_RSA key exchange\r\n   algorithm and \"anonymous\" for ECDH_anon.  These cases are defined in\r\n   TLS.  SignatureAlgorithm is \"ecdsa\" or \"eddsa\" for ECDHE_ECDSA.",
    "correct_text": "The extended ServerKeyExchange message seems just for tls version 1.0 and version 1.1, not for 1.2, because tls version 1.2 ServerKeyExchange message format is different from version 1.0 and 1.1. The following is tls version 1.2 ServerKeyExchange message format:\r\n\r\n struct {\r\n select (KeyExchangeAlgorithm) {\r\n case dh_anon:\r\n ServerDHParams params;\r\n case dhe_dss:\r\n case dhe_rsa:\r\n ServerDHParams params;\r\n digitally-signed struct {\r\n opaque client_random[32];\r\n opaque server_random[32];\r\n ServerDHParams params;\r\n } signed_params;\r\n case rsa:\r\n case dh_dss:\r\n case dh_rsa:\r\n struct {} ;\r\n /* message is omitted for rsa, dh_dss, and dh_rsa */\r\n /* may be extended, e.g., for ECDH -- see [TLSECC] */\r\n };\r\n } ServerKeyExchange;\r\n\r\nit does not specify the message format for ECDH_RSA and ECDH_anon, the \"NOTE\" in original text does not apply to tls version 1.2, because it doesn't have the \"Signature\" field.",
    "notes": "the ServerKeyExchange for ECDH_RSA and ECDH_anon should be specified for tls version 1.2.",
    "submit_date": "2024-11-16",
    "submitter_name": "warren.wang",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": null
  }
]
