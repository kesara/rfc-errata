[
  {
    "errata_id": 5811,
    "doc-id": "RFC4707",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": 2,
    "orig_text": "   The organizational structure of NAS is hierarchical; this means that\r\n   a NAS root server collects data from the sub-servers that are\r\n   authoritative for certain hierarchies.",
    "correct_text": "   The organizational structure of NAS is hierarchical; this means that\r\n   an NAS root server collects data from the sub-servers that are\r\n   authoritative for certain hierarchies.",
    "notes": "For consistency throughout the document, spell \"an NAS root server\" instead of \"a NAS root server\".",
    "submit_date": "2019-08-18",
    "submitter_name": "Julien Élie",
    "verifier_id": 157,
    "verifier_name": "Adrian Farrel",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 5812,
    "doc-id": "RFC4707",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": 4,
    "orig_text": "   An attached time stamp makes it possible to distinguish between\r\n   new and old data and to avoid loops in the propagation.",
    "correct_text": "   An attached timestamp makes it possible to distinguish between\r\n   new and old data and to avoid loops in the propagation.",
    "notes": "For consistency throughout the document, spell \"timestamp\" instead of \"time stamp\".",
    "submit_date": "2019-08-18",
    "submitter_name": "Julien Élie",
    "verifier_id": 157,
    "verifier_name": "Adrian Farrel",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 5813,
    "doc-id": "RFC4707",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "6.1.1",
    "orig_text": "   Answer = response-code [answertext] CRLF\r\n            text CRLF\r\n            \".\" CRLF",
    "correct_text": "   answer = response-code [answertext] CRLF\r\n            *(text CRLF)\r\n            \".\" CRLF",
    "notes": "There may be zero, one or more additional lines of text followed by a CRLF.",
    "submit_date": "2019-08-18",
    "submitter_name": "Julien Élie",
    "verifier_id": 157,
    "verifier_name": "Adrian Farrel",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 5814,
    "doc-id": "RFC4707",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "GLOBAL",
    "orig_text": null,
    "correct_text": null,
    "notes": "The report raised said:\r\n\r\n> A future revision of the NAS protocol should mention the character set that MUST\r\n> be used in commands, and also in answers.\r\n>\r\n> I advise current NAS implementations to use UTF-8 everywhere because UTF-8 is the\r\n> encoding that will be encouraged in Netnews (NNTP commands already are in UTF-8\r\n> per RFC 3977, and internationalized headers including newsgroup names are likely to\r\n> be in UTF-8).\r\n\r\nWhether or not this is good advice to future specifications and current implementations, this is not an erratum. Changes of this nature require to be documented in separate publications.\n --VERIFIER NOTES-- \n   ",
    "submit_date": "2019-08-18",
    "submitter_name": "Julien Élie",
    "verifier_id": 157,
    "verifier_name": "Adrian Farrel",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 5815,
    "doc-id": "RFC4707",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "6.3.3.1",
    "orig_text": "   help-answer =  \"410\" [answertext] CRLF\r\n                  text CRLF\r\n                  \".\" CRLF\r\n   help-answer =/ \"100\" [answertext] CRLF\r\n                  text CRLF\r\n                  \".\" CRLF",
    "correct_text": "   help-answer =  \"410\" [answertext] CRLF\r\n                  *(text CRLF)\r\n                  \".\" CRLF\r\n   help-answer =/ \"100\" [answertext] CRLF\r\n                  *(text CRLF)\r\n                  \".\" CRLF",
    "notes": "Per the examples shown, it is clear that zero, one, or more lines of text may be supplied.",
    "submit_date": "2019-08-18",
    "submitter_name": "Julien Élie",
    "verifier_id": 157,
    "verifier_name": "Adrian Farrel",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 5816,
    "doc-id": "RFC4707",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "6.3.3.2",
    "orig_text": "   info-answer =  \"400\" [answertext] CRLF\r\n                  text CRLF\r\n                  \".\" CRLF\r\n   info-answer =/ \"101\" [answertext] CRLF\r\n                  text CRLF\r\n                  \".\" CRLF",
    "correct_text": "   info-answer =  \"400\" [answertext] CRLF\r\n                  *(text CRLF)\r\n                  \".\" CRLF\r\n   info-answer =/ \"101\" [answertext] CRLF\r\n                  *(text CRLF)\r\n                  \".\" CRLF",
    "notes": "Per the examples shown in the text, it is clear that a response may include zero, one, or many additional lines of text.",
    "submit_date": "2019-08-18",
    "submitter_name": "Julien Élie",
    "verifier_id": 157,
    "verifier_name": "Adrian Farrel",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 5817,
    "doc-id": "RFC4707",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "6.3.3.3",
    "orig_text": "   date-answer =  \"511\" [answertext] CRLF\r\n                  text CRLF\r\n                  \".\" CRLF",
    "correct_text": "   date-answer =  \"511\" [answertext] CRLF\r\n                  [1*text CRLF]\r\n                  \".\" CRLF",
    "notes": "I suggest [1*text CRLF] that is to say a possible non-empty line.\r\nWe need at least *text anyway (several characters), as shown in the example in Section 6.3.3.3.",
    "submit_date": "2019-08-18",
    "submitter_name": "Julien Élie",
    "verifier_id": 99,
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 5818,
    "doc-id": "RFC4707",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "6.3.3.4",
    "orig_text": "   This version number MUST not be higher\r\n   than that requested by the client.",
    "correct_text": "   This version number MUST NOT be higher\r\n   than that requested by the client.",
    "notes": "Capitalized \"NOT\" is needed per RFC 2119.",
    "submit_date": "2019-08-18",
    "submitter_name": "Julien Élie",
    "verifier_id": 157,
    "verifier_name": "Adrian Farrel",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 5819,
    "doc-id": "RFC4707",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "6.3.3.4",
    "orig_text": "   The VERS command is used to determine the protocol level to use\r\n   between client and server.  The parameter is a protocol level that\r\n   the client supports and wants to use.  The server will respond with\r\n   the highest level accepted.\r\n[...]\r\n   When no option is given, the current protocol level will be printed.",
    "correct_text": "   The VERS command is used to determine the protocol level to use\r\n   between client and server.  The optional parameter is a protocol\r\n   level that the client supports and wants to use.  When this\r\n   parameter is given, and is valid, the server will respond with\r\n   the highest level accepted, at the start of the second line of its\r\n   response, and the highest level it supports, at the end of that\r\n   same line.\r\n[...]\r\n   When no parameter is given, or if the given parameter is invalid,\r\n   the server will respond with the current protocol level, at the start\r\n   of the second line of its response.",
    "notes": "The description should detail the syntax of the different possible answers to the VERS command.  Especially, ABNF shows two \"level\" keywords in 302 and 402 answers, that are not explained in the original text.\n --VERIFIER NOTES-- \n The suggested replacement text adds little or nothing to the understanding of the text which was clear to this uninformed reader.",
    "submit_date": "2019-08-18",
    "submitter_name": "Julien Élie",
    "verifier_id": 157,
    "verifier_name": "Adrian Farrel",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 5820,
    "doc-id": "RFC4707",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "6.3.3.5",
    "orig_text": "   quit-answer = \"201\" [answertext] CRLF",
    "correct_text": "   quit-answer = \"201\" [answertext] CRLF\r\n                 [1*text CRLF]\r\n                 \".\" CRLF",
    "notes": "The QUIT command is the only one whose answer does not follow the general ABNF description of answers requiring them to end with a (\".\" CRLF) line.\r\nI suggest either fixing quit-answer to the above corrected text, or modifying Section 6.1.1 to take into account a special case for QUIT.",
    "submit_date": "2019-08-18",
    "submitter_name": "Julien Élie",
    "verifier_id": 99,
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 5821,
    "doc-id": "RFC4707",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "6.3.3.6",
    "orig_text": "   The data consist of a newsgroup- or hierarchy-name/status indicator\r\n   pair per line.  Name and status indicator must be separated by at\r\n   least one white space.\r\n[...]\r\n   listdata    =  name WSP list-status",
    "correct_text": "   The data consist of a newsgroup- or hierarchy-name/status indicator\r\n   pair per line.  Name and status indicator must be separated by at\r\n   least one white space.\r\n[...]\r\n   listdata    =  name 1*WSP list-status",
    "notes": "Only one white space is allowed in the definition of listdata.  I suggest allowing several WSP for consistency with the description.\r\nSame remark for the definition of listdata in Section 6.3.3.7 (LSTR command).",
    "submit_date": "2019-08-18",
    "submitter_name": "Julien Élie",
    "verifier_id": 157,
    "verifier_name": "Adrian Farrel",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 5822,
    "doc-id": "RFC4707",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "6.3.3.6",
    "orig_text": "   list-answer =/ \"401\" [answertext] CRLF\r\n                  text CRLF\r\n                  \".\" CRLF\r\n   list-answer =/ \"510\" [answertext] CRLF\r\n                   text CRLF\r\n                   \".\" CRLF",
    "correct_text": "   list-answer =/ \"401\" [answertext] CRLF\r\n                  *(text CRLF)\r\n                  \".\" CRLF\r\n   list-answer =/ \"510\" [answertext] CRLF\r\n                  *(text CRLF)\r\n                  \".\" CRLF",
    "notes": "Zero, one, or more lines of text are allowed.",
    "submit_date": "2019-08-18",
    "submitter_name": "Julien Élie",
    "verifier_id": 157,
    "verifier_name": "Adrian Farrel",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 5823,
    "doc-id": "RFC4707",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "6.3.3.7",
    "orig_text": "   lstr-answer =/ \"401\" [answertext] CRLF\r\n                  text CRLF\r\n                  \".\" CRLF\r\n   lstr-answer =/ \"510\" [answertext] CRLF\r\n                  text CRLF\r\n                  \".\" CRLF",
    "correct_text": "   lstr-answer =/ \"401\" [answertext] CRLF\r\n                  *(text CRLF)\r\n                  \".\" CRLF\r\n   lstr-answer =/ \"510\" [answertext] CRLF\r\n                  *(text CRLF)\r\n                  \".\" CRLF",
    "notes": "Zero, one, or more lines of text are allowed.",
    "submit_date": "2019-08-18",
    "submitter_name": "Julien Élie",
    "verifier_id": 157,
    "verifier_name": "Adrian Farrel",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 5824,
    "doc-id": "RFC4707",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "GLOBAL",
    "orig_text": "Section 6.3.3.8:\r\n\r\n   hier-answer =/ \"510\" [answertext] CRLF\r\n                  *(text CRLF)\r\n                  \".\" CRLF\r\n   hier-answer =/ \"401\" [answertext] CRLF\r\n                  *(text CRLF)\r\n                  \".\" CRLF\r\n\r\n   hierdata    =  \"Name:\" WSP text CRLF\r\n                  \"Status:\" WSP text CRLF\r\n                  *(header \":\" WSP text CRLF)\r\n                  [(\"Ctl-PGP-Key:\" CRLF PGP-answer /\r\n                    \"Mod-PGP-Key:\" CRLF PGP-answer)]\r\n\r\nSection 6.3.3.9:\r\n\r\n   data-answer =/ \"510\" [answertext] CRLF\r\n                  text CRLF\r\n                  \".\" CRLF\r\n   data-answer =/ \"401\" [answertext] CRLF\r\n                  text CRLF\r\n                  \".\" CRLF\r\n\r\n   datadata    =  \"Name:\" WSP text CRLF\r\n                  \"Status:\" WSP text CRLF\r\n                  *(header \":\" WSP text CRLF)\r\n                  [(\"Ctl-PGP-Key:\" CRLF PGP-answer /\r\n                    \"Mod-PGP-Key:\" CRLF PGP-answer)]",
    "correct_text": "Section 6.3.3.8:\r\n\r\n   hier-answer =/ \"510\" [answertext] CRLF\r\n                  [1*text CRLF]\r\n                  \".\" CRLF\r\n   hier-answer =/ \"401\" [answertext] CRLF\r\n                  [1*text CRLF]\r\n                  \".\" CRLF\r\n\r\n   hierdata    =  \"Name:\" WSP name CRLF\r\n                  \"Status:\" WSP list-status CRLF\r\n                  *(header \":\" WSP *text CRLF)\r\n                  [(\"Ctl-PGP-Key:\" CRLF PGP-answer /\r\n                    \"Mod-PGP-Key:\" CRLF PGP-answer)]\r\n\r\nSection 6.3.3.9:\r\n\r\n   data-answer =/ \"510\" [answertext] CRLF\r\n                  [1*text CRLF]\r\n                  \".\" CRLF\r\n   data-answer =/ \"401\" [answertext] CRLF\r\n                  [1*text CRLF]\r\n                  \".\" CRLF\r\n\r\n   datadata    =  \"Name:\" WSP name CRLF\r\n                  \"Status:\" WSP list-status CRLF\r\n                  *(header \":\" WSP *text CRLF)\r\n                  [(\"Ctl-PGP-Key:\" CRLF PGP-answer /\r\n                    \"Mod-PGP-Key:\" CRLF PGP-answer)]",
    "notes": "I suggest [1*text CRLF], that is to say a possible non-empty line, for hier-answer and data-answer with 501 or 401 response codes.\r\nWe need at least *text anyway (several characters), as shown in the examples in Section 6.3.3.8 and 6.3.3.9.\r\n\r\nAs for hierdata and datadata, the text keyword used thrice alone is also not right.",
    "submit_date": "2019-08-18",
    "submitter_name": "Julien Élie",
    "verifier_id": 99,
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 5825,
    "doc-id": "RFC4707",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "GLOBAL",
    "orig_text": "Section 6.3.3.10:\r\n\r\n   username =  *1( VCHAR ) / \"0\" ; Length of VCHAR >= 1\r\n\r\n   password =  *1( VCHAR ) / \"0\" ; Length of VCHAR >= 1\r\n\r\n[...]\r\n\r\n   getp-answer =/ \"213\" [answertext] CRLF\r\n                  text CRLF\r\n                  \".\" CRLF\r\n   getp-answer =/ \"430\" [answertext] CRLF\r\n                  text CRLF\r\n                  \".\" CRLF\r\n   getp-answer =/ \"411\" [answertext] CRLF\r\n                  text CRLF\r\n                  \".\" CRLF\r\n   getp-answer =/ \"510\" [answertext] CRLF\r\n                  text CRLF\r\n                  \".\" CRLF\r\n\r\n   getpdata   =   \"Name:\" WSP text CRLF\r\n                  \"Status:\" WSP text CRLF\r\n                  \"Serial:\" WSP timestamp CRLF\r\n                  *(header \":\" WSP text CRLF)\r\n                  [(\"Ctl-PGP-Key:\" CRLF PGP-answer /\r\n                    \"Mod-PGP-Key:\" CRLF PGP-answer)]\r\n\r\nSection 6.3.3.11:\r\n\r\n   geta-answer =/ \"215\" [answertext] CRLF\r\n                   text CRLF\r\n                   \".\" CRLF\r\n   geta-answer =/ \"430\" [answertext] CRLF\r\n                  text CRLF\r\n                  \".\" CRLF\r\n   geta-answer =/ \"411\" [answertext] CRLF\r\n                  text CRLF\r\n                  \".\" CRLF\r\n   geta-answer =/ \"510\" [answertext] CRLF\r\n                  text CRLF\r\n                  \".\" CRLF\r\n\r\n   getadata   =   \"Name:\" WSP text CRLF\r\n                  \"Status:\" WSP text CRLF\r\n                  \"Serial:\" WSP timestamp CRLF\r\n                  *(header \":\" WSP text CRLF)\r\n                  [(\"Ctl-PGP-Key:\" CRLF PGP-answer/\r\n                    \"Mod-PGP-Key:\" CRLF PGP-answer)]",
    "correct_text": "Section 6.3.3.10:\r\n\r\n   username =  1*VCHAR / \"0\"\r\n\r\n   password =  1*VCHAR / \"0\"\r\n\r\n[...]\r\n\r\n   getp-answer =/ \"213\" [answertext] CRLF\r\n                  [1*text CRLF]\r\n                  \".\" CRLF\r\n   getp-answer =/ \"430\" [answertext] CRLF\r\n                  [1*text CRLF]\r\n                  \".\" CRLF\r\n   getp-answer =/ \"411\" [answertext] CRLF\r\n                  [1*text CRLF]\r\n                  \".\" CRLF\r\n   getp-answer =/ \"510\" [answertext] CRLF\r\n                  [1*text CRLF]\r\n                  \".\" CRLF\r\n\r\n   getpdata   =   \"Name:\" WSP name CRLF\r\n                  \"Status:\" WSP list-status CRLF\r\n                  \"Serial:\" WSP timestamp CRLF\r\n                  *(header \":\" WSP *text CRLF)\r\n                  [(\"Ctl-PGP-Key:\" CRLF PGP-answer /\r\n                    \"Mod-PGP-Key:\" CRLF PGP-answer)]\r\n\r\nSection 6.3.3.11:\r\n\r\n   geta-answer =/ \"215\" [answertext] CRLF\r\n                  [1*text CRLF]\r\n                  \".\" CRLF\r\n   geta-answer =/ \"430\" [answertext] CRLF\r\n                  [1*text CRLF]\r\n                  \".\" CRLF\r\n   geta-answer =/ \"411\" [answertext] CRLF\r\n                  [1*text CRLF]\r\n                  \".\" CRLF\r\n   geta-answer =/ \"510\" [answertext] CRLF\r\n                  [1*text CRLF]\r\n                  \".\" CRLF\r\n\r\n   getadata   =   \"Name:\" WSP name CRLF\r\n                  \"Status:\" WSP list-status CRLF\r\n                  \"Serial:\" WSP timestamp CRLF\r\n                  *(header \":\" WSP *text CRLF)\r\n                  [(\"Ctl-PGP-Key:\" CRLF PGP-answer /\r\n                    \"Mod-PGP-Key:\" CRLF PGP-answer)]",
    "notes": "For username and password, RFC 4234 defines VCHAR as %x21-7E, that is to say only one character.\r\n\r\nI suggest [1*text CRLF], that is to say a possible non-empty line, for getp-answer and geta-answer with 213, 215, 430, 411 and 510 response codes.\r\nWe need at least *text anyway (several characters), as shown in the examples in Sections 6.3.3.10 and 6.3.3.11.\r\n\r\nAs for getpdata and getadata, the text keyword used thrice alone is also not right.",
    "submit_date": "2019-08-18",
    "submitter_name": "Julien Élie",
    "verifier_id": 99,
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 5826,
    "doc-id": "RFC4707",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": "6.3.3.10",
    "orig_text": "   <-- GETP 0 0 0 humanities\r\n   --> 615 data follow",
    "correct_text": "   <-- GETP 0 0 0 humanities\r\n   --> 613 data follow",
    "notes": "Section 10 and also getp-answer in Section 6.3.3.10 indicates a 613 response code for GETP.",
    "submit_date": "2019-08-18",
    "submitter_name": "Julien Élie",
    "verifier_id": 157,
    "verifier_name": "Adrian Farrel",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 5827,
    "doc-id": "RFC4707",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": "6.3.3.11",
    "orig_text": "   <-- GETA 0 0 0 humanities\r\n   --> 613 data follow",
    "correct_text": "   <-- GETA 0 0 0 humanities\r\n   --> 615 data follow",
    "notes": "Section 10 and also geta-answer in Section 6.3.3.11 indicates a 615 response code for GETA.",
    "submit_date": "2019-08-18",
    "submitter_name": "Julien Élie",
    "verifier_id": 157,
    "verifier_name": "Adrian Farrel",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 5828,
    "doc-id": "RFC4707",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "6.3.3.10",
    "orig_text": "   pgp-ascii-armor-start and the pgp-ascii-armor-end are built according\r\n   to [RFC2440], Section 6.2., \"Forming ASCII Armor\".",
    "correct_text": "   pgp-ascii-armor-start and pgp-ascii-armor-end are built according\r\n   to [RFC2440], Section 6.2, \"Forming ASCII Armor\".",
    "notes": null,
    "submit_date": "2019-08-18",
    "submitter_name": "Julien Élie",
    "verifier_id": 157,
    "verifier_name": "Adrian Farrel",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 5829,
    "doc-id": "RFC4707",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "6.3.3.10",
    "orig_text": "       Newsgroup-Type: Announce\r\n       Date-Create: 19950725182040\r\n       Name: humanities.classics\r\n       [...]\r\n       -----BEGIN PGP SIGNATURE-----\r\n       Version: GnuPG v1.0.7 (IRIX64)",
    "correct_text": "       Newsgroup-Type: Announce\r\n       Date-Create: 19950725182040\r\n\r\n       Name: humanities.classics\r\n       [...]\r\n       -----BEGIN PGP SIGNATURE-----\r\n       Version: GnuPG v1.0.7 (IRIX64)",
    "notes": "In the first example, an empty separation line is missing before the beginning of the description of another newsgroup.",
    "submit_date": "2019-08-18",
    "submitter_name": "Julien Élie",
    "verifier_id": 157,
    "verifier_name": "Adrian Farrel",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 5830,
    "doc-id": "RFC4707",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "6.3.4",
    "orig_text": "   Description: Name of a newsgroup\r\n\r\n   Example:     Status: Hierarchy-Complete\r\n\r\n   Example:     Status: Group-Moderated\r\n\r\n   Comment:     The value can be used as default value for the\r\n                \"Followup-To:\" header on postings to a moderated group.\r\n                This value is only useful on groups that are moderated\r\n                (Status Group-Moderated) and have a dedicated discussion\r\n                group.\r\n\r\n   Comment:     If there is no \"Mod-Sub-Adr\" for a moderated newsgroup,\r\n                \"Mod-Wildcard\" of the hierarchy is used.  This is useful\r\n                only for moderated groups (Status Group-Moderated).\r\n\r\n   Comment:     If there is no code \"Mod-Adm-Adr\" for a moderated\r\n                newsgroup, \"Mod-Wildcard\" of the hierarchy is used.\r\n                This is useful only for moderated groups\r\n                (Status Group-Moderated).\r\n\r\n   Example:     Encoding text/plain\r\n\r\n   Description: Name of the hierarchy that replaced a removed hierarchy\r\n                if status is \"Hierarchy-Obsolete\" or will replace a\r\n                hierarchy if the date of removal is in the future.\r\n\r\n   Description: Name of the newsgroup or newsgroups that will replace a\r\n                removed newsgroup if status is  \"Group-Removed\" or will\r\n                replace the newsgroup if the date of removal is in the\r\n                future.",
    "correct_text": "   Description: Name of a newsgroup.\r\n\r\n   Example:     Status: Complete\r\n\r\n   Example:     Status: Moderated\r\n\r\n   Comment:     The value can be used as default value for the\r\n                \"Followup-To:\" header field on postings to a moderated\r\n                group.  This value is only useful on groups that are\r\n                moderated (Status \"Moderated\") and have a dedicated\r\n                discussion group.\r\n\r\n   Comment:     If there is no \"Mod-Sub-Adr\" for a moderated newsgroup,\r\n                \"Mod-Wildcard\" of the hierarchy is used.  This is useful\r\n                only for moderated groups (Status \"Moderated\").\r\n\r\n   Comment:     If there is no code \"Mod-Adm-Adr\" for a moderated\r\n                newsgroup, \"Mod-Wildcard\" of the hierarchy is used.\r\n                This is useful only for moderated groups\r\n                (Status \"Moderated\").\r\n\r\n   Example:     Encoding: text/plain\r\n\r\n   Description: Name of the hierarchy that replaced a removed hierarchy\r\n                if status is \"Obsolete\" or will replace a\r\n                hierarchy if the date of removal is in the future.\r\n\r\n   Description: Name of the newsgroup or newsgroups that will replace a\r\n                removed newsgroup if status is \"Removed\" or will\r\n                replace the newsgroup if the date of removal is in the\r\n                future.",
    "notes": "Several fixes in syntax and also in spelling of keywords.",
    "submit_date": "2019-08-18",
    "submitter_name": "Julien Élie",
    "verifier_id": 157,
    "verifier_name": "Adrian Farrel",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 5831,
    "doc-id": "RFC4707",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": "6.3.4",
    "orig_text": "   Serial\r\n\r\n   Header:      Serial\r\n\r\n   Used for:    hierarchy\r\n   Mandatory:   no\r\n   Inheritable: no\r\n   Repeatable:  no\r\n   Description: Timestamp for hierarchy data.\r\n   Comment:     For a detailed description, see Section 6.4.\r\n   Example:     Serial: 20020821102413\r\n\r\n   Used for:    newsgroup\r\n   Mandatory:   no\r\n   Inheritable: no\r\n   Repeatable:  no\r\n   Description: Timestamp for newsgroup data.\r\n   Comment:     For a detailed description, see Section 6.4.\r\n   Example:     Serial: 20020821102413\r\n",
    "correct_text": "   Serial\r\n\r\n   Header:      Serial\r\n\r\n   Used for:    hierarchy\r\n   Mandatory:   no\r\n   Inheritable: no\r\n   Repeatable:  no\r\n   Description: Timestamp for hierarchy data.\r\n   Comment:     For a detailed description, see Section 6.3.3.10.\r\n   Example:     Serial: 20020821102413\r\n\r\n   Used for:    newsgroup\r\n   Mandatory:   no\r\n   Inheritable: no\r\n   Repeatable:  no\r\n   Description: Timestamp for newsgroup data.\r\n   Comment:     For a detailed description, see Section 6.3.3.10.\r\n   Example:     Serial: 20020821102413\r\n",
    "notes": "Its use as a timestamp is described in Section 6.3.3.10, for both hierarchies and newsgroups.",
    "submit_date": "2019-08-18",
    "submitter_name": "Julien Élie",
    "verifier_id": 157,
    "verifier_name": "Adrian Farrel",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 5832,
    "doc-id": "RFC4707",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "6.3.4",
    "orig_text": "   Serial\r\n[...]\r\n   Used for:    newsgroup\r\n   Mandatory:   no\r\n   Inheritable: no\r\n   Repeatable:  no",
    "correct_text": "   Serial\r\n[...]\r\n   Used for:    newsgroup\r\n   Mandatory:   no\r\n   Repeatable:  no",
    "notes": "\"Inheritable\" does not apply to newsgroups.",
    "submit_date": "2019-08-18",
    "submitter_name": "Julien Élie",
    "verifier_id": 157,
    "verifier_name": "Adrian Farrel",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 5833,
    "doc-id": "RFC4707",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "6.3.4",
    "orig_text": "   Header: Source\r\n\r\n   Used for:    hierarchy\r\n   Mandatory:   no\r\n   Inheritable: yes\r\n   Repeatable:  no",
    "correct_text": "   Header: Source\r\n\r\n   Used for:    hierarchy\r\n   Mandatory:   no\r\n   Inheritable: yes\r\n   Repeatable:  yes",
    "notes": "This header is repeatable, as stated in Section 11.\r\n\r\nHowever, it is currently unclear whether section 6.3.4 is correct (note use of the singular in the explanatory text) of whether section 11 is correct.",
    "submit_date": "2019-08-18",
    "submitter_name": "Julien Élie",
    "verifier_id": 157,
    "verifier_name": "Adrian Farrel",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 5834,
    "doc-id": "RFC4707",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": 11,
    "orig_text": "    Mod-Sub-Adr      no           N    no         Submission address",
    "correct_text": "    Mod-Sub-Adr      no           N    yes        Submission address",
    "notes": "This header is repeatable, as stated in its definition in Section 6.3.4.\r\nA newsgroup may have several e-mails to be reached.",
    "submit_date": "2019-08-18",
    "submitter_name": "Julien Élie",
    "verifier_id": 157,
    "verifier_name": "Adrian Farrel",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 5835,
    "doc-id": "RFC4707",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": 6.7,
    "orig_text": "   PGP keys for Ctrl-PGP-Key and Mod-PGP-Key are transmitted in the\r\n   following structure:\r\n\r\n   PGP-answer = \"V\" SP Version CRLF\r\n                \"U\" SP User-ID CRLF\r\n                \"B\" SP Bits CRLF\r\n                \"I\" SP Key-ID CRLF\r\n                \"F\" SP Finger CRLF\r\n                *(\"L\" SP Location CRLF)\r\n                *(\"K-\" Keyblock CRLF)\r\n                \"K\" SP Keyblock CRLF\r\n\r\n   Version  = text\r\n   User-ID  = text\r\n   Bits     = text\r\n   Key-ID   = text\r\n   Finger   = text\r\n   Location = text\r\n   Keyblock = text",
    "correct_text": "   PGP keys for Ctl-PGP-Key and Mod-PGP-Key are transmitted in the\r\n   following structure:\r\n\r\n   PGP-answer = [*(\"U\" SP User-ID CRLF)]\r\n                [\"B\" SP Bits CRLF]\r\n                [\"I\" SP Key-ID CRLF]\r\n                [*(\"L\" SP Location CRLF)]\r\n                [\"F\" SP Finger CRLF]\r\n                \"V\" SP Version CRLF\r\n                1*(\"K-\" Keyblock CRLF)\r\n                \"K\" SP Keyblock CRLF\r\n\r\n   Version  = 1*text\r\n   User-ID  = 1*text\r\n   Bits     = 1*text\r\n   Key-ID   = 1*text\r\n   Finger   = 1*text\r\n   Location = 1*text\r\n   Keyblock = 1*text",
    "notes": "Several fixes :\r\n1- Spelling of \"Ctl-PGP-Key\" at the first line.\r\n2- Several UIDs are possible for a given key.\r\n3- We need several characters (text is only a byte, so use 1*text).\r\n4- Only Version and Keyblocks are mandatory.\r\n5- Re-arrange the lines of PGP-answer to match the example in the same Section.",
    "submit_date": "2019-08-18",
    "submitter_name": "Julien Élie",
    "verifier_id": 99,
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 5836,
    "doc-id": "RFC4707",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": 11,
    "orig_text": "    Article-Length   no           H    no         Article length",
    "correct_text": "    Article-Length   no          H/N    no        Article length",
    "notes": "As stated in the definition of Article-Length in Section 6.3.4, it also applies to newsgroups.",
    "submit_date": "2019-08-18",
    "submitter_name": "Julien Élie",
    "verifier_id": 157,
    "verifier_name": "Adrian Farrel",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 5837,
    "doc-id": "RFC4707",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "6.1.2",
    "orig_text": "   Answers of the type 1xx, 2xx, 4xx, and\r\n   5xx can have a text after the numerical code.  3xx answers contain\r\n   one or more parameters with data; the exact format is explained in\r\n   the description of the commands.",
    "correct_text": null,
    "notes": "These sentences are not clear.\r\nI suggest to just remove them, or reformulate them if they really have importance.\r\nThe 202 response code for VERS also has a parameter with data (the current protocol level) for instance.\r\nAnd 6xx response codes are not mentioned.",
    "submit_date": "2019-08-18",
    "submitter_name": "Julien Élie",
    "verifier_id": 99,
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 5841,
    "doc-id": "RFC4707",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "6.3.3",
    "orig_text": "   text          = %d1-9 /           ; all octets except\r\n                   %d11-12 /         ; US-ASCII NUL, CR and LF\r\n                   %d14-255\r\n",
    "correct_text": "   text          = *(%d1-9 /         ; all octets except\r\n                     %d11-12 /       ; US-ASCII NUL, CR and LF\r\n                     %d14-255)\r\n",
    "notes": "Each time the \"text\" keyword is used in ABNF definitions in this RFC, it means \"any number, including none, of octets except NUL, CR and LF\" and not one such octet.",
    "submit_date": "2019-08-19",
    "submitter_name": "Julien Élie",
    "verifier_id": 157,
    "verifier_name": "Adrian Farrel",
    "update_date": "2019-09-10 09:09:03"
  }
]
