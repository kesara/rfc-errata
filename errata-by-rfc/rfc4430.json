[
  {
    "errata_id": 93,
    "doc-id": "RFC4430",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": 99,
    "orig_text": "[editorial nits moved to errata ID 1770]\r\n\r\n(7)  Section 4.2.7 (page 22/23)\r\n\r\n(7a) Item (1b) above applies, and plaintext vs. ciphertext is unclear.\r\n\r\nThe initial text and Figure 13 unfortunately do not properly make\r\nthe distinction between unencrypted (plaintext) and encrypted\r\n(ciphertext) values and fields.\r\nThe presentation on page 22 needs clarification, according to the\r\nnote given on page 23:\r\n\r\n   The coverage of the encrypted data begins at InnerNextPload so that\r\n   the first payload's type is kept confidential.  Thus, the number of\r\n   encrypted octets is PayloadLength - 4.\r\n\r\nOn page 22, the text and Figure 13,\r\n\r\n|  The KINK_ENCRYPT payload encapsulates other KINK payloads and is\r\n|  encrypted using the session key and the algorithm specified by its\r\n   etype.  This payload MUST be the final one in the outer payload chain\r\n|  of the message.  The KINK_ENCRYPT payload MUST be encrypted before\r\n   the final KINK checksum is applied.\r\n\r\n     0                   1                   2                   3\r\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\r\n|   +---------------+---------------+---------------+---------------+\r\n|   | Next Payload  |   RESERVED    |         Payload Length        |\r\n    +---------------+---------------+---------------+---------------+\r\n    | InnerNextPload|                   RESERVED2                   |\r\n    +---------------+---------------+---------------+---------------+\r\n    |                         Payload (variable)                    |\r\n    +---------------+---------------+---------------+---------------+\r\n\r\n|                    Figure 13:  KINK_ENCRYPT Payload\r\n\r\nshould say:\r\n\r\n|  The KINK_ENCRYPT payload encapsulates other KINK payloads and its\r\n|  value is encrypted using the session key and the algorithm specified\r\n   by its etype.  This payload MUST be the final one in the outer\r\n|  payload chain of the message.  The plaintext KINK_ENCRYPT payload\r\n|  value MUST be encrypted before the final KINK checksum is applied.\r\n\r\n     0                   1                   2                   3\r\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\r\n    +---------------+---------------+---------------+---------------+\r\n    | Next Payload  |   RESERVED    |         Payload Length        |\r\n    +---------------+---------------+---------------+---------------+\r\n|   |                                                               |\r\n|   ~       encrypted KINK_ENCRYPT Payload value (variable)         ~\r\n|   |                                                               |\r\n    +---------------+---------------+---------------+---------------+\r\n\r\n|                    Figure 13a:  KINK_ENCRYPT Payload\r\n\r\n(I have chosen the more descriptive filed name,\r\n'encrypted KINK_ENCRYPT Payload value' over the more fuzzy term,\r\n'encryption payload' used in the text on page 23.)\r\n\r\nAfter the first bullet on page 23,\r\n\r\n     o    Next Payload, RESERVED, Payload Length -- Defined in the\r\n          beginning of this section.  This payload is the last one in a\r\n          message, and accordingly, the Next Payload field must be\r\n          KINK_DONE (0).\r\n\r\nThe following text and figure should be inserted:\r\n\r\n     o    encrypted KINK_ENCRYPT Payload value -- This is the\r\n          encrypted form of the plaintext form of the KINK_ENCRYPT\r\n          Payload value in the following format:\r\n\r\n     0                   1                   2                   3\r\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\r\n    +---------------+---------------+---------------+---------------+\r\n    | InnerNextPload|                   RESERVED2                   |\r\n    +---------------+---------------+---------------+---------------+\r\n    |                   KINK Payloads (variable)                    |\r\n    +---------------+---------------+---------------+---------------+\r\n\r\n|          Figure 13b:  unencrypted KINK_ENCRYPT Payload value\r\n\r\n   Fields:\r\n\r\n\r\n(7b)  typo, and (7a) continued\r\n\r\nThe final paragraph of Section 4.2.7, on page 23, says:\r\n\r\n                     vvvvvvvvvvvvvvvvvv\r\n|  The format of the encryption payload follows the normal Kerberos\r\n   semantics.  Its content is the output of an encrypt function defined\r\n   in the Encryption Algorithm Profile section of [KCRYPTO].  Parameters\r\n   such as encrypt function itself, specific-key, and initial state are\r\n   defined with the etype.  [...]\r\n   itself and there may be some garbage data at the end of the decrypted\r\n   plaintext.  A KINK implementation MUST be prepared to ignore such\r\n   padding after the last sub-payload inside the KINK_ENCRYPT payload.\r\n   [...]\r\n\r\nIt should say:\r\n\r\n                     vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv\r\n|  The format of the encrypted KINK_ENCRYPT Payload value follows the\r\n   normal Kerberos semantics.  Its content is the output of an encrypt\r\n   function defined in the Encryption Algorithm Profile section of\r\n|  [KCRYPTO].  Parameters such as the encrypt function itself, specific-\r\n   key, and initial state are defined with the etype.  [...]\r\n",
    "correct_text": "",
    "notes": "\r\nItems (1)..(7) have been revised on the author's comments received.\r\nIn particular, item (7) has been revised substantially to achieve\r\na selfconsistent presentation in accordance with the author's intent.\r\nI propose to incorporate the above items (1)..(7) and (9) directly\r\ninto an RFC Errata Note.\r\nItem (8), and perhaps item (7) as well, still needs judgement from\r\nthe RFC authors.\r\n\r\n------------------------------------------------\r\nERRATA RESPONSE:\r\nFrom: Unknown Name (though from this email: Shouichi.Sakane@jp.yokogawa.com)\r\nCould someone verify 1a, 4b and 9b ?\r\n\r\nfrom pending",
    "submit_date": "2006-07-06",
    "submitter_name": "Alfred Hoenes",
    "verifier_id": 111,
    "verifier_name": "Pasi Eronen",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 1770,
    "doc-id": "RFC4430",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": 99,
    "orig_text": "(1)  Section 4.2.1 (page 17)\r\n\r\n(1a)  typo (word omission)\r\n\r\nThe final sentence in the 3rd paragraph of Section 4.2.1 says:\r\n\r\n                                                            [...].  A\r\n   principal name is case sensitive, and \"fqdn\" part MUST be lowercase\r\n   as described in [KERBEROS].\r\n\r\nIt should say:\r\n                                        vvvvv\r\n                                                            [...].  A\r\n|  principal name is case sensitive, and the \"fqdn\" part MUST be\r\n   lowercase as described in [KERBEROS].\r\n\r\n(1b)  see (0) above\r\n\r\nThe subsequent text, above Figure 7,\r\n\r\n   vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv\r\n|  The value field of this payload has the following format:\r\n\r\nshould say:\r\n\r\n   vvvvvvvvvvvv\r\n|  This payload has the following format:\r\n\r\n\r\n(2)  Section 4.2.2 (page 18)\r\n\r\nLike (1b) above, the text above Figure 8,\r\n\r\n   vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv\r\n|  The value field of this payload has the following format:\r\n\r\nshould say:\r\n\r\n   vvvvvvvvvvvv\r\n|  This payload has the following format:\r\n\r\n\r\n(3)  Section 4.2.3 (page 19)\r\n\r\nLike (1b) above, the text above Figure 9,\r\n\r\n   vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv\r\n|  The value field of this payload has the following format:\r\n\r\nshould say:\r\n\r\n   vvvvvvvvvvvv\r\n|  This payload has the following format:\r\n\r\n\r\n(4)  Section 4.2.4 (page 20)\r\n\r\n(4a) Like (1b) above, the text above Figure 10,\r\n\r\n   vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv\r\n|  The value field of this payload has the following format:\r\n\r\nshould say:\r\n\r\n   vvvvvvvvvvvv\r\n|  This payload has the following format:\r\n\r\n(4b) The second bullet of the subsequent explanations,\r\n\r\n     o    PrincName -- The name of the principal that the initiator\r\n          wants to communicate with.  It is assumed that the initiator\r\n          knows the responder's principal name (including the realm\r\n|         name) in the same way as the non-User-to-User case.  The TGT\r\n          returned MUST NOT be an inter-realm TGT and its cname and\r\n          crealm MUST match the requested principal name, so that the\r\n          initiator can rendezvous with the responder at the responder's\r\n          realm.\r\n\r\nshould say (filling in a missing word):\r\n\r\n     o    PrincName -- The name of the principal that the initiator\r\n          wants to communicate with.  It is assumed that the initiator\r\n          knows the responder's principal name (including the realm\r\n|         name) in the same way as in the non-User-to-User case.  The\r\n          TGT returned MUST NOT be an inter-realm TGT and its cname and\r\n          crealm MUST match the requested principal name, so that the\r\n          initiator can rendezvous with the responder at the responder's\r\n          realm.\r\n\r\n\r\n(5)  Section 4.2.5 (page 21)\r\n\r\nLike (1b) above, the text above Figure 11,\r\n\r\n   vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv\r\n|  The value field of this payload contains the TGT requested in a\r\n   previous KINK_TGT_REQ payload of a GETTGT command.\r\n\r\nshould say:\r\n\r\n   vvvvvvvvvvvv\r\n|  This payload contains the TGT requested in a previous KINK_TGT_REQ\r\n   payload of a GETTGT command.\r\n\r\n\r\n(6)  Section 4.2.6 (page 21)\r\n\r\nLike (1b) above, the text above Figure 12,\r\n\r\n   vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv\r\n|  The value field of this payload has the following format:\r\n\r\nshould say:\r\n\r\n   vvvvvvvvvvvv\r\n|  This payload has the following format:\r\n\r\n[see errata ID 93 for item 7]\r\n\r\n(8)  Section 4.2.8\r\n\r\nThe text of this section twice, and redundantly, specifies\r\non page 23 :\r\n\r\n                          [...].  The error code is in network order.\r\n\r\nand on page 24 :\r\n\r\n     o    ErrorCode -- One of the following values in the network byte\r\n          order:\r\n          [...]\r\n\r\nThis looks like a big exception.  But in fact, that is the general\r\nrule as set in the first sentence of Section 4, on page 13!\r\nAt best, the former sentence should be deleted, and the latter\r\nbullet changed to say:\r\n\r\n     o    ErrorCode -- One of the following values:\r\n          [...]\r\n\r\nIf it is preferred to not delete the former sentence and the latter\r\nclause, at least the \"the\" in \"in the network byte order\" should be\r\ndeleted.\r\n\r\n\r\n(9)  further word omissions in running text\r\n\r\n(9a) The first paragraph of Section 6.6, on page 32, says:\r\n\r\n   A GETTGT command is only used to carry a Kerberos TGT and is not\r\n   related to SA management; therefore, it contains only KINK_TGT_REQ\r\n   payload and does not contain any DOI-specific payload.\r\n\r\nIt should say:\r\n\r\n   A GETTGT command is only used to carry a Kerberos TGT and is not\r\n|  related to SA management; therefore, it contains only a KINK_TGT_REQ\r\n   payload and does not contain any DOI-specific payload.\r\n\r\n(9b) The first paragraph of Section 7, on page 32, says:\r\n\r\n   KINK uses the same key derivation mechanisms defined in section 5.5\r\n   of [IKE], which is:\r\n\r\nIt should say:\r\n                                               vvvv\r\n|  KINK uses the same key derivation mechanisms as defined in section\r\n   5.5 of [IKE], which is:",
    "correct_text": "",
    "notes": "[split everything except item 7 away from errata ID 93]\r\n\r\n(0)  Rationale for most non-trivial issues listed below:\r\n==============\r\n\r\nThe initial text of Section 4.2 (on page 16) says:\r\n\r\n   Immediately following the header, there is a list of\r\n   Type/Length/Value (TLV) payloads.  There can be any number of\r\n   payloads following the header.  Each payload MUST begin with a\r\n   payload header.  Each payload header is built on the generic payload\r\n   header.  Any data immediately follows the generic header.  Payloads\r\n   are all implicitly aligned to 4-octet boundaries, though the payload\r\n   length field MUST accurately reflect the actual number of octets in\r\n   the payload.\r\n\r\n     0                   1                   2                   3\r\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\r\n    +---------------+---------------+---------------+---------------+\r\n    | Next Payload  |   RESERVED    |         Payload Length        |\r\n    +---------------+---------------+---------------+---------------+\r\n    |                      value (variable)                         |\r\n    +---------------+---------------+---------------+---------------+\r\n\r\n                    Figure 6:  Format of a KINK Payload\r\n\r\n   Fields:\r\n\r\n     [...]\r\n\r\n\r\nTo sum up: a KINK payload consists of a (generic) payload header\r\nand the (payload) value field.\r\n\r\nUnfortunately, the subsequent sub-sections 4.2.* inadvertently\r\nseem to pretend that there exists another copy of the payload\r\nheader within the payload value, which certainly was not intended.\r\n\r\nIt was the intent of the authors to always show and describe the\r\nfull payloads in these sections.\r\nTherefore, the repeated text stating to the contrary that it will\r\nshow the payload *value*, has to be changed.\r\n\r\n\r\nI use change bars ('|' in column 1) and (occasionally) up/down\r\npointing marker lines to emphasize the location of textual issues\r\nin the snippits from the RFC text and/or the proposed modified text.\r\nModified text has been adjusted according to RFC formatting policy.\r\n\r\nItems (1)..(7) have been revised on the author's comments received.\r\nIn particular, item (7) has been revised substantially to achieve\r\na selfconsistent presentation in accordance with the author's intent.\r\nI propose to incorporate the above items (1)..(7) and (9) directly\r\ninto an RFC Errata Note.\r\nItem (8), and perhaps item (7) as well, still needs judgement from\r\nthe RFC authors.\r\n\r\n------------------------------------------------\r\nERRATA RESPONSE:\r\nFrom: Unknown Name (though from this email: Shouichi.Sakane@jp.yokogawa.com)\r\nCould someone verify 1a, 4b and 9b ?\r\n\r\n\r\nfrom pending",
    "submit_date": "2006-07-06",
    "submitter_name": "Alfred Hoenes",
    "verifier_id": 111,
    "verifier_name": "Pasi Eronen",
    "update_date": "2019-09-10 09:09:03"
  }
]
