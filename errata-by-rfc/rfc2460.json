[
  {
    "errata_id": "2541",
    "doc-id": "RFC2460",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "6",
    "orig_text": "(Nothing about this omission.)",
    "correct_text": "Compared to RFC 1883, this specification reduces the size of the \r\nflow label field to 20 bits. The references to a 24 bit flow label \r\nfield on pages 87 and 88 of RFC 2205 are updated accordingly.",
    "notes": "RFC 2460 updates RFC 2205.",
    "submit_date": "2010-10-03",
    "submitter_name": "Brian Carpenter",
    "verifier_id": "2",
    "verifier_name": "Ralph Droms",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "2843",
    "doc-id": "RFC2460",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "5",
    "orig_text": "In response to an IPv6 packet that is sent to an IPv4 destination\r\n(i.e., a packet that undergoes translation from IPv6 to IPv4), the\r\noriginating IPv6 node may receive an ICMP Packet Too Big message\r\nreporting a Next-Hop MTU less than 1280.  In that case, the IPv6 node\r\nis not required to reduce the size of subsequent packets to less than\r\n1280, but must include a Fragment header in those packets so that the\r\nIPv6-to-IPv4 translating router can obtain a suitable Identification\r\nvalue to use in resulting IPv4 fragments.  Note that this means the\r\npayload may have to be reduced to 1232 octets (1280 minus 40 for the\r\nIPv6 header and 8 for the Fragment header), and smaller still if\r\nadditional extension headers are used.",
    "correct_text": "(delete paragraph)",
    "notes": "This requirement makes it impossible to offer services over IPv6 without keeping per-flow state in the server node. There is no reason why IPv4 fragmentation cannot be used after translation to IPv4.\n --VERIFIER NOTES-- \nThis would be a fundamental change to the IPv6 protocol specification.  Such a proposal would need to be formally proposed as an internet draft.   ",
    "submit_date": "2011-06-24",
    "submitter_name": "Florian Weimer",
    "verifier_id": "131",
    "verifier_name": "Brian Haberman",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "4279",
    "doc-id": "RFC2460",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "3",
    "orig_text": "   Hop Limit            8-bit unsigned integer.  Decremented by 1 by\r\n                        each node that forwards the packet. The packet\r\n                        is discarded if Hop Limit is decremented to\r\n                        zero.",
    "correct_text": "TBD",
    "notes": "The original text overlooks the case that a node receives a packet which already has a hop limit of zero (eg, coming from a misbehaving node, or malicious traffic). Following the instructions in that case would result in decrementing the hop limit from 0 to -1 (so, 255), then forwarding the packet.\r\n\r\nThe text also doesn't state what a non-forwarding node (ie, a host) should do upon reception of a packet which already has a hop limit of zero: should the packet be accepted or dropped?\r\n\r\n\r\n* While the above issues are worth discussing, they are beyond the scope of an erratum.  Discussion on updating the text to handle Hop Limits from malicious or misbehaving nodes should be taken up within the working group. *",
    "submit_date": "2015-02-24",
    "submitter_name": "Paul Aitken",
    "verifier_id": "131",
    "verifier_name": "Brian Haberman",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "4657",
    "doc-id": "RFC2460",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "4",
    "orig_text": null,
    "correct_text": "   Extension headers must never be inserted by any node other than the\r\n   source of the packet.  IP Encapsulation must be used to meet any\r\n   requirement for inserting headers, for example, as defined in\r\n   [RFC2473].\r\n",
    "notes": "This is being handled in the 2460bis work.",
    "submit_date": "2016-04-07",
    "submitter_name": "Fernando Gont",
    "verifier_id": "152",
    "verifier_name": "Suresh Krishnan",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "4662",
    "doc-id": "RFC2460",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "4",
    "orig_text": "With one exception, extension headers are not examined or processed\r\nby any node along a packet's delivery path, until the packet reaches\r\nthe node (or each of the set of nodes, in the case of multicast)\r\nidentified in the Destination Address field of the IPv6 header.\r\n",
    "correct_text": "With one exception, extension headers are not examined, processed,\r\nmodified, inserted or deleted\r\nby any node along a packet's delivery path, until the packet reaches\r\nthe node (or each of the set of nodes, in the case of multicast)\r\nidentified in the Destination Address field of the IPv6 header.",
    "notes": "This is being handled in the 2460bis work.",
    "submit_date": "2016-04-11",
    "submitter_name": "Brian Carpenter",
    "verifier_id": "152",
    "verifier_name": "Suresh Krishnan",
    "update_date": "2019-09-10 09:09:03"
  }
]
