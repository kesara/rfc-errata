[
  {
    "errata_id": 5615,
    "doc-id": "RFC8466",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "5.10.1",
    "orig_text": "   The svc-bandwidth parameter must include a \"cos-id\" parameter if the\r\n   \"type\" is set to \"bw-per-cos\".  The cos-id can be assigned based on\r\n   either (1) the IEEE 802.1p value [IEEE-802-1D] in the C-tag or\r\n   (2) the Differentiated Services Code Point (DSCP) in the Ethernet\r\n   frame header.  Service frames are metered against the bandwidth\r\n   profile based on the cos-id.",
    "correct_text": "   The svc-bandwidth parameter must include a \"cos-id\" parameter if the\r\n   \"type\" is set to \"bw-per-cos\".  The cos-id can be assigned based on\r\n   either (1) the IEEE 802.1p value [IEEE-802-1D] in the C-tag or\r\n   (2) the Differentiated Services Code Point (DSCP) in the IP\r\n   header.  Service frames are metered against the bandwidth\r\n   profile based on the cos-id.",
    "notes": "The DSCP field is part of the IP packet header, not the Ethernet frame руфвук.",
    "submit_date": "2019-01-28",
    "submitter_name": "Nikolai Malykh",
    "verifier_id": 158,
    "verifier_name": "Ignas Bagdonas",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": 5921,
    "doc-id": "RFC8466",
    "errata_status_code": "Reported",
    "errata_type_code": "Editorial",
    "section": 8,
    "orig_text": "identity vpws-evpn {\r\n    base service-type;\r\n    description\r\n      \"VPWS service type using Ethernet VPNs (EVPNs)\r\n       as specified in RFC 7432.\";\r\n  \r\n\r\n  identity pbb-evpn {\r\n   base service-type;\r\n    description\r\n      \"Provider Backbone Bridge (PBB) service type using\r\n       EVPNs as specified in RFC 7432.\";\r\n}",
    "correct_text": "identity vpws-evpn {\r\n    base service-type;\r\n    description\r\n      \"VPWS service type using Ethernet VPNs (EVPNs)\r\n       as specified in RFC 8214.\";\r\n  \r\n\r\n  identity pbb-evpn {\r\n   base service-type;\r\n    description\r\n      \"Provider Backbone Bridge (PBB) service type using\r\n       EVPNs as specified in RFC 7623.\";\r\n}",
    "notes": "Neither VPWS-EVPN nor PBB-EVPN are mentioned in RFC 7432. \r\nThe former is defined in RFC 8214, and the latter - in RFC 7623.\r\n\r\nPlease note also that RFC 7623 is  not mentioned as one of the references.",
    "submit_date": "2019-11-27",
    "submitter_name": "Alexander (\"Sasha\") Vainshtein",
    "verifier_id": 99,
    "verifier_name": null,
    "update_date": null
  },
  {
    "errata_id": 5922,
    "doc-id": "RFC8466",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": 8,
    "orig_text": "  identity bgp-vpls {\r\n    base service-type;\r\n    description\r\n      \"BGP-based multipoint VPLS service type.  This VPLS uses a\r\n       BGP control plane as described in RFCs 4761 and 6624.\";\r\n  }\r\n\r\n  identity vpws-evpn {\r\n    base service-type;\r\n    description\r\n      \"VPWS service type using Ethernet VPNs (EVPNs)\r\n       as specified in RFC 7432.\";\r\n  }",
    "correct_text": "  identity bgp-vpls {\r\n    base service-type;\r\n    description\r\n      \"BGP-based multipoint VPLS service type.  This VPLS uses a\r\n       BGP control plane as described in RFCs 4761 and 6624.\";\r\n  }\r\n identity evpn {\r\n    base service-type;\r\n    description\r\n      \" EVPN service type as specified in RFC 7432\"\r\n}\r\n  identity vpws-evpn {\r\n    base service-type;\r\n    description\r\n      \"VPWS service type using Ethernet VPNs (EVPNs)\r\n       as specified in RFC 7432.\";\r\n  }",
    "notes": "The service type for an EVPN service as defined in RFC 7432 is missing.",
    "submit_date": "2019-11-27",
    "submitter_name": "Alexander (\"Sasha\") Vainshtein",
    "verifier_id": 99,
    "verifier_name": null,
    "update_date": null
  },
  {
    "errata_id": 6383,
    "doc-id": "RFC8466",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": 8,
    "orig_text": "container service {\r\n              container svc-bandwidth {\r\n                if-feature \"input-bw\";\r\n                list bandwidth {\r\n                  key \"direction type\";\r\n                  leaf direction {\r\n                    type identityref {\r\n                      base bw-direction;\r\n                    }\r\n                    description\r\n                      \"Indicates the bandwidth direction.  It can be\r\n                       the bandwidth download direction from the SP to\r\n                       the site or the bandwidth upload direction from\r\n                       the site to the SP.\";\r\n                  }",
    "correct_text": null,
    "notes": "The svc-bandwidth container is triggered by if-feature \"input-bw\". However, that container can contain input-bw only, output-bw only or both. It might be better to have two separate containers, one for input-bw and the other for output-bw, triggered by if-feature \"input-bw\" and if-feature \"output-bw\" respectively.",
    "submit_date": "2021-01-08",
    "submitter_name": "Julian Lucek",
    "verifier_id": 99,
    "verifier_name": null,
    "update_date": null
  },
  {
    "errata_id": 6384,
    "doc-id": "RFC8466",
    "errata_status_code": "Reported",
    "errata_type_code": "Editorial",
    "section": 8,
    "orig_text": "identity pbb-evpn {\r\n   base service-type;\r\n    description\r\n      \"Provider Backbone Bridge (PBB) service type using\r\n       EVPNs as specified in RFC 7432.\";\r\n}",
    "correct_text": "identity evpn {\r\n   base service-type;\r\n    description\r\n      \"EVPN service type as specified in RFC 7432.\";\r\n}",
    "notes": "The mention of PBB is a mistake, it should be normal (non-PBB) EVPN, given that Section 3.1 lists EVPN and not PBB-EVPN among the supported L2VPN types. However, the reference to RFC 7432 in the original text box above is correct, as that RFC deals with EVPN, not PBB-EVPN.\r\n\r\n(n.b. see erratum 5921 that has the \"opposite\" interpretation, i.e. that pbb-evpn is correct but that the RFC number is wrong)",
    "submit_date": "2021-01-08",
    "submitter_name": "Julian Lucek",
    "verifier_id": 99,
    "verifier_name": null,
    "update_date": null
  },
  {
    "errata_id": 6555,
    "doc-id": "RFC8466",
    "errata_status_code": "Reported",
    "errata_type_code": "Editorial",
    "section": 8,
    "orig_text": "                container vxlan {\r\n                  when \"derived-from-or-self(../type, \"\r\n                     + \"'l2vpn-svc:vxlan')\" {\r\n                    description\r\n                      \"Only applies when the type of the tagged\r\n                       interface is 'vxlan'.\";\r\n                  }\r\n                  if-feature \"vxlan\";\r\n                  leaf vni-id {\r\n                    type uint32;\r\n                    mandatory true;\r\n                    description\r\n                      \"VXLAN Network Identifier (VNI).\";\r\n                  }\r\n                  leaf peer-mode {\r\n                    type identityref {\r\n                      base vxlan-peer-mode;\r\n                    }\r\n                    default \"static-mode\";\r\n                    description\r\n                      \"Specifies the VXLAN access mode.  By default,\r\n                       the peer mode is set to 'static-mode'.\";\r\n                  }\r\n                  list peer-list {\r\n                    key \"peer-ip\";\r\n                    leaf peer-ip {\r\n                      type inet:ip-address;\r\n                      description\r\n                        \"Peer IP.\";\r\n                    }\r\n                    description\r\n                      \"List of peer IP addresses.\";\r\n                  }\r\n                  description\r\n                    \"QinQ.\";\r\n                }",
    "correct_text": "                container vxlan {\r\n                  when \"derived-from-or-self(../type, \"\r\n                     + \"'l2vpn-svc:vxlan')\" {\r\n                    description\r\n                      \"Only applies when the type of the tagged\r\n                       interface is 'vxlan'.\";\r\n                  }\r\n                  if-feature \"vxlan\";\r\n                  leaf vni-id {\r\n                    type uint32;\r\n                    mandatory true;\r\n                    description\r\n                      \"VXLAN Network Identifier (VNI).\";\r\n                  }\r\n                  leaf peer-mode {\r\n                    type identityref {\r\n                      base vxlan-peer-mode;\r\n                    }\r\n                    default \"static-mode\";\r\n                    description\r\n                      \"Specifies the VXLAN access mode.  By default,\r\n                       the peer mode is set to 'static-mode'.\";\r\n                  }\r\n                  list peer-list {\r\n                    key \"peer-ip\";\r\n                    leaf peer-ip {\r\n                      type inet:ip-address;\r\n                      description\r\n                        \"Peer IP.\";\r\n                    }\r\n                    description\r\n                      \"List of peer IP addresses.\";\r\n                  }\r\n                  description\r\n                    \"Container for VXLAN.\";\r\n                }",
    "notes": "The description should refer to VXLAN not QinQ.",
    "submit_date": "2021-04-23",
    "submitter_name": "Mohamed Boucadair",
    "verifier_id": 99,
    "verifier_name": null,
    "update_date": null
  }
]
