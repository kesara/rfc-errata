[
  {
    "errata_id": "5762",
    "doc-id": "RFC8519",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "4.1",
    "orig_text": "leaf type {\r\ntype acl-type;\r\ndescription\r\n  \"Type of ACL.  Indicates the primary intended\r\n   type of match criteria (e.g., Ethernet, \r\n   IPv4, IPv6, mixed, etc.) used in the list\r\n   instance.\";\r\n}",
    "correct_text": "leaf type {\r\ntype acl-type;\r\ndefault \"ipv4-acl-type\";\r\ndescription\r\n  \"Type of ACL.  Indicates the primary intended\r\n   type of match criteria (e.g., Ethernet, \r\n   IPv4, IPv6, mixed, etc.) used in the list\r\n   instance.\";\r\n}",
    "notes": "I am wondering why not  set default value for acl-type,e.g., set default value as \"ipv4-acl-type\" otherwise, how to determine which field under which choice will be matched upon and which action should be taken on them if the opetional parameter type under acl list is not set.\r\n\r\nAlso I want to better understand why acl type is removed from key indexes of access list and keep it as optional parameter under acl list. One case I am thinking in my mind is we add a mixed Ethernet, IPv4, and IPv6 ACL entry when we already have Ethernet ACL entry,IPv4 ACL entry , we don't need to remove existing ethernet entry and existing IPv4 entry in the list (\"aces\") and create a new entry with mixed ethernet, IPv4, IPv6 ACL, instead, we just add a new identity called mixed-eth-ipv4-ipv6-acl-type and add a new IPv6 entry.\n --VERIFIER NOTES-- \n   \r\nMahesh Jethanandani replied:\r\n\r\nThis errata should be rejected for the following reason.\r\n\r\nThe whole idea of defining the identities for acl-type was to allow vendors to specify what capabilities their box is capable of supporting and then to specify what capabilities the vendors want to support. As such there is no â€œdefault capability\" for every vendor. Besides, if a device advertises a mixed-eth-ipv4 feature, it is because it can only support Ethernet and IPv4 ACL combinations, and it cannot support IPv6 ACL matches. You do not add a capability of IPv6 match on the fly. It either has it, or it does not. If it does, advertise mixed-eth-ipv4-ipv6 capability to begin with.\r\n\r\nThe errata proposes a change to the standard and is not correcting an error in the document.  additionaly it not clear why it would be appraise to set a default acl type.\r\n\r\nThe errata is declined.\r\n",
    "submit_date": "2019-06-24",
    "submitter_name": "Qin WU",
    "verifier_id": "135",
    "verifier_name": "Joel Jaeggli",
    "update_date": "2019-09-23 23:37:31"
  },
  {
    "errata_id": "5908",
    "doc-id": "RFC8519",
    "errata_status_code": "Reported",
    "errata_type_code": "Editorial",
    "section": "section-4.1",
    "orig_text": "choice l2 {\r\n              container eth {\r\n                when \"derived-from-or-self(/acls/acl/type, \"\r\n                   + \"'acl:eth-acl-type')\";\r\n                if-feature \"match-on-eth\";\r\n                uses pf:acl-eth-header-fields;\r\n                description\r\n                  \"Rule set that matches Ethernet headers.\";\r\n              }\r\n              description\r\n                \"Match Layer 2 headers, for example, Ethernet\r\n                 header fields.\";\r\n            }\r\n\r\n            choice l3 {\r\n              container ipv4 {\r\n                when \"derived-from-or-self(/acls/acl/type, \"\r\n                   + \"'acl:ipv4-acl-type')\";\r\n                if-feature \"match-on-ipv4\";\r\n                uses pf:acl-ip-header-fields;\r\n                uses pf:acl-ipv4-header-fields;\r\n                description\r\n                  \"Rule set that matches IPv4 headers.\";\r\n              }\r\n\r\n              container ipv6 {\r\n                when \"derived-from-or-self(/acls/acl/type, \"\r\n                   + \"'acl:ipv6-acl-type')\";\r\n                if-feature \"match-on-ipv6\";\r\n                uses pf:acl-ip-header-fields;\r\n                uses pf:acl-ipv6-header-fields;\r\n                description\r\n                  \"Rule set that matches IPv6 headers.\";\r\n              }\r\n              description\r\n                \"Choice of either IPv4 or IPv6 headers\";\r\n            }",
    "correct_text": "choice l2 {\r\n              container eth {\r\n                when \"derived-from-or-self(../../../../type, \"\r\n                   + \"'acl:eth-acl-type')\";\r\n                if-feature \"match-on-eth\";\r\n                uses pf:acl-eth-header-fields;\r\n                description\r\n                  \"Rule set that matches Ethernet headers.\";\r\n              }\r\n              description\r\n                \"Match Layer 2 headers, for example, Ethernet\r\n                 header fields.\";\r\n            }\r\n\r\n            choice l3 {\r\n              container ipv4 {\r\n                when \"derived-from-or-self(../../../../type, \"\r\n                   + \"'acl:ipv4-acl-type')\";\r\n                if-feature \"match-on-ipv4\";\r\n                uses pf:acl-ip-header-fields;\r\n                uses pf:acl-ipv4-header-fields;\r\n                description\r\n                  \"Rule set that matches IPv4 headers.\";\r\n              }\r\n\r\n              container ipv6 {\r\n                when \"derived-from-or-self(../../../../type, \"\r\n                   + \"'acl:ipv6-acl-type')\";\r\n                if-feature \"match-on-ipv6\";\r\n                uses pf:acl-ip-header-fields;\r\n                uses pf:acl-ipv6-header-fields;\r\n                description\r\n                  \"Rule set that matches IPv6 headers.\";\r\n              }\r\n              description\r\n                \"Choice of either IPv4 or IPv6 headers\";\r\n            }",
    "notes": "In access-list-control yang definition, the absolute path was used in when derived-from-or-self. This mean it will check all the type in configured acl lists one by one the return the first matched result (If there is any). For examples, I have acls acl acl_test1 configured, and type is set to ipv4-acl-type. Then if I create acl_test2 with ipv6-acl-type, when choice happened in acl_test2, it starts from acl_test1 because it's the first entry for acl list. Choice found there is ipv4-acl-type, then it chooses containter ipv4 rather than ipv6. This is not the correct behivour, it should choose ipv6 container because current acl type is ipv6-acl-type.\r\nI think it should only check the current acl type not the whole acl list. So I changed it to relevant path only match the type field in current acl.\r\nPlease review my change and corret me if my understanding is not match your design.\r\nIf you need more information, please contact me directly.",
    "submit_date": "2019-11-14",
    "submitter_name": "Fanqiang Kong",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": null
  }
]
