[
  {
    "errata_id": "3017",
    "doc-id": "RFC6376",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "3.6.1",
    "orig_text": "   k= Key type (plain-text; OPTIONAL, default is \"rsa\").  Signers and\r\n      Verifiers MUST support the \"rsa\" key type.  The \"rsa\" key type\r\n      indicates that an ASN.1 DER-encoded [ITU-X660-1997] RSAPublicKey\r\n      (see [RFC3447], Sections 3.1 and A.1.1) is being used in the \"p=\"\r\n      tag.  (Note: the \"p=\" tag further encodes the value using the\r\n      base64 algorithm.)  Unrecognized key types MUST be ignored.",
    "correct_text": "   k= Key type (plain-text; OPTIONAL, default is \"rsa\").  Signers and\r\n      Verifiers MUST support the \"rsa\" key type.  The \"rsa\" key type\r\n      indicates that an ASN.1 DER-encoded [ITU-X660-1997] RSAPublicKey\r\n      (see [RFC3447], Sections 3.1 and A.1.1), which MAY be contained in\r\n      a SubjectPublicKeyInfo (see [RFC5280], Section A.1), is being used\r\n      in the \"p=\" tag.  (Note: the \"p=\" tag further encodes the value\r\n      using the base64 algorithm.)  Unrecognized key types MUST be\r\n      ignored.",
    "notes": "The procedure in Appendix C results in a public key in SubjectPublicKeyInfo format. Accordingly, most current implementations will accept such keys. Furthermore, it is trivial to distinguish whether a key is encapsulated in a SubjectPublicKeyInfo.\r\n",
    "submit_date": "2011-11-05",
    "submitter_name": "Vernon Tang",
    "verifier_id": "130",
    "verifier_name": "Barry Leiba",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "3192",
    "doc-id": "RFC6376",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "Appendix A",
    "orig_text": "   From: Joe SixPack <joe@football.example.com>\r\n   To: Suzie Q <suzie@shopping.example.net>\r\n   Subject: Is dinner ready?\r\n   Date: Fri, 11 Jul 2003 21:00:37 -0700 (PDT)\r\n   Message-ID: <20030712040037.46341.5F8J@football.example.com>\r\n\r\n   Hi.\r\n\r\n   We lost the game.  Are you hungry yet?\r\n\r\n   Joe.",
    "correct_text": "   From: Joe SixPack <joe@football.example.com>\r\n   To: Suzie Q <suzie@shopping.example.net>\r\n   Subject: Is dinner ready?\r\n   Date: Fri, 11 Jul 2003 21:00:37 -0700 (PDT)\r\n   Message-ID: <20030712040037.46341.5F8J@football.example.com>\r\n\r\n   Hi.\r\n\r\n   We lost the game. Are you hungry yet?\r\n\r\n   Joe.",
    "notes": "This text appears three times, in A.1, A.2, and A.3.  Notice the double space after \"game.\", which renders the body hashes in A.2 and A.3 invalid.\r\n\r\nThe corrected text, which is the same as that in RFC 4871, removes the extra space.",
    "submit_date": "2012-04-14",
    "submitter_name": "John Hawthorn",
    "verifier_id": "130",
    "verifier_name": "Barry Leiba",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "3758",
    "doc-id": "RFC6376",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "3.6.1.",
    "orig_text": "v= Version of the DKIM key record (plain-text; RECOMMENDED, default\r\n      is \"DKIM1\").  If specified, this tag MUST be set to \"DKIM1\"\r\n      (without the quotes).  This tag MUST be the first tag in the\r\n      record.  Records beginning with a \"v=\" tag with any other value\r\n      MUST be discarded.  Note that Verifiers must do a string\r\n      comparison on this value; for example, \"DKIM1\" is not the same as\r\n      \"DKIM1.0\".",
    "correct_text": "v= Version of the DKIM key record (plain-text; RECOMMENDED, default\r\n      is \"1\").  If specified, this tag MUST be set to \"1\"\r\n      (without the quotes).  This tag MUST be the first tag in the\r\n      record.  Records beginning with a \"v=\" tag with any other value\r\n      MUST be discarded.  Note that Verifiers must do a string\r\n      comparison on this value; for example, \"1\" is not the same as\r\n      \"1.0\".",
    "notes": "The \"DKIM\" prefix in the version field is unnecessary.\r\nfor example the followings are snipped from an actual email via gmail.com:\r\n\r\nDKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;\r\n        d=gmail.com; s=20120113;\r\n        h=mime-version:from:date:message-id:subject:to:content-type;\r\n        bh=46j07/8gDec8jTto/znsrAKiXDj6YJ7Wa2DCoZuhwXc=;\r\n        b=h6SViP6DcHgPwydJD6aztqyKd0UmCN3SdwmqZd0uCHmqrprphjN8qQ8AnBDhbwDhAa\r\n         DfHIDS8RSegELKtzsp95u+DnIFg1uNhIukKVpGT+9MqxfCSAFk7WpMe2O/2gcLruilTe\r\n         MxkKJ29s64NGevYewKtI8s73xHmbzD1NFH9ugdow8i9E16kgQ+vAx56qvbFTBwdEEw8I\r\n         6Bteu3tXEsYYbU/9Akm2GXS+6PFiDSbv47u3EmhRQIOK3e8DvcobrpicjL7vUwBCpQuf\r\n         J/c+Acdq4GZQoMoG9imzku0K2o0w33CZ1xUR1bARJKCVaJfWeHiEMQ2OJ9A6ZtqpyK0z\r\n         1Ftg==\n --VERIFIER NOTES-- \nThe reporters are confused.  The text in Section 3.6.1 is about the key records in the DNS, and the document is correct.  Section 3.5 is where the dkim-signature header field is described (and that is also correct).",
    "submit_date": "2013-10-20",
    "submitter_name": "Majid Tajamolian & Nazilla Karkon",
    "verifier_id": "130",
    "verifier_name": "Barry Leiba",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "3759",
    "doc-id": "RFC6376",
    "errata_status_code": "Rejected",
    "errata_type_code": "Editorial",
    "section": "3.6.1.",
    "orig_text": "   h= Acceptable hash algorithms (plain-text; OPTIONAL, defaults to\r\n      allowing all algorithms).  A colon-separated list of hash\r\n      algorithms that might be used.  Unrecognized algorithms MUST be\r\n      ignored.  Refer to Section 3.3 for a discussion of the hash\r\n      algorithms implemented by Signers and Verifiers.  The set of\r\n      algorithms listed in this tag in each record is an operational\r\n      choice made by the Signer.",
    "correct_text": "   a= Acceptable hash algorithms (plain-text; OPTIONAL, defaults to\r\n      allowing all algorithms).  A colon-separated list of hash\r\n      algorithms that might be used.  Unrecognized algorithms MUST be\r\n      ignored.  Refer to Section 3.3 for a discussion of the hash\r\n      algorithms implemented by Signers and Verifiers.  The set of\r\n      algorithms listed in this tag in each record is an operational\r\n      choice made by the Signer.",
    "notes": "The correct tag is \"a=\" for algorithms not \"h=\". The latter is used for the \"List of Included Headers in the Signature\"\n --VERIFIER NOTES-- \nThe reporters are confused.  The text in Section 3.6.1 is about the key records in the DNS, and the document is correct.  Section 3.5 is where the dkim-signature header field is described (and that is also correct).",
    "submit_date": "2013-10-20",
    "submitter_name": "Majid Tajamolian & Nazila Karkon",
    "verifier_id": "130",
    "verifier_name": "Barry Leiba",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "4287",
    "doc-id": "RFC6376",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": "3.6.1",
    "orig_text": "   k= Key type (plain-text; OPTIONAL, default is \"rsa\").  Signers and\r\n      Verifiers MUST support the \"rsa\" key type.  The \"rsa\" key type\r\n      indicates that an ASN.1 DER-encoded [ITU-X660-1997] RSAPublicKey\r\n      (see [RFC3447], Sections 3.1 and A.1.1) is being used in the \"p=\"\r\n      tag.  (Note: the \"p=\" tag further encodes the value using the\r\n      base64 algorithm.)  Unrecognized key types MUST be ignored.\r\n\r\nand in Section 9.1:\r\n\r\n   [ITU-X660-1997]\r\n              \"Information Technology - ASN.1 encoding rules:\r\n              Specification of Basic Encoding Rules (BER), Canonical\r\n              Encoding Rules (CER) and Distinguished Encoding Rules\r\n              (DER)\", 1997.",
    "correct_text": "Both instances of \"[ITU-X660-1997]\" should be \"[ITU-X690-1997]\"",
    "notes": "This is just a typo: \"660\" should be \"690\".  The text of the reference is correct, but the document number is wrong.",
    "submit_date": "2015-03-04",
    "submitter_name": "Phil Griffin (via DCrocker)",
    "verifier_id": "130",
    "verifier_name": "Barry Leiba",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "4810",
    "doc-id": "RFC6376",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "3.5",
    "orig_text": "x-sig-q-tag-args = qp-hdr-value",
    "correct_text": "x-sig-q-tag-args = dkim-quoted-printable  ; with \":\" encoded",
    "notes": "sig-q-tag-methods are \":\"-separated in sig-q-tag, so \":\" shouldn't be permitted\r\nwithin x-sig-q-tag-args.  Note that qp-hdr-value (which I believe was originally\r\ndefined for sig-z-tag, which includes \"|\"-separated values) is defined as\r\n\r\n   qp-hdr-value    =  dkim-quoted-printable    ; with \"|\" encoded",
    "submit_date": "2016-09-26",
    "submitter_name": "Juan Altmayer Pizzorno",
    "verifier_id": "128",
    "verifier_name": "Stephen Farrell",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "4875",
    "doc-id": "RFC6376",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Editorial",
    "section": "3.5",
    "orig_text": "The header field text itself must encode the vertical bar\r\n(\"|\", %x7C) character (i.e., vertical bars in the \"z=\" text are\r\nmeta-characters, and any actual vertical bar characters in a\r\ncopied header field must be encoded).  Note that all whitespace\r\nmust be encoded, including whitespace between the colon and the\r\nheader field value.  After encoding, FWS MAY be added at arbitrary\r\nlocations in order to avoid excessively long lines; such\r\nwhitespace is NOT part of the value of the header field and MUST\r\nbe removed before decoding.\r\n",
    "correct_text": "The header field value itself must encode the vertical bar\r\n(\"|\", %x7C) character (i.e., vertical bars in the \"z=\" text are\r\nmeta-characters, and any actual vertical bar characters in a\r\ncopied header field must be encoded).  Note that all whitespace\r\nmust be encoded, including whitespace between the colon and the\r\nheader field value.  After encoding, FWS MAY be added at arbitrary\r\nlocations inside the header field value in order to avoid \r\nexcessively long lines; such whitespace is NOT part of the value \r\nof the header field and MUST be removed before decoding. FWS MAY NOT\r\nbe added to the header field name.",
    "notes": "The original text is confusing on whether FWS may be added to just the header field values or to both the header field names and header field values. The ABNF suggests that it is just allowed inside the values, but we've seen in practice that this whitespace is also added to the field names.\r\n\r\nFurther more, the use of the three terms \"header field name\", \"header field value\" and \"header field text\" is confusing. It is better to stick with just \"header field name\" and \"header field value\".",
    "submit_date": "2016-12-01",
    "submitter_name": "Emiel Bruijntjes",
    "verifier_id": "2",
    "verifier_name": null,
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "4926",
    "doc-id": "RFC6376",
    "errata_status_code": "Verified",
    "errata_type_code": "Editorial",
    "section": "A.2, A.3",
    "orig_text": "DKIM-Signature: v=1; a=rsa-sha256; s=brisbane; d=example.com;\r\n     c=simple/simple; q=dns/txt; i=joe@football.example.com;\r\n     h=Received : From : To : Subject : Date : Message-ID;\r\n     bh=2jUSOH9NhtVGCQWNr9BrIAPreKQjO6Sn7XIkfJVOzv8=;\r\n     b=AuUoFEfDxTDkHlLXSZEpZj79LICEps6eda7W3deTVFOk4yAUoqOB\r\n     4nujc7YopdG5dWLSdNg6xNAZpOPr+kHxt1IrE+NahM6L/LbvaHut\r\n     KVdkLLkpVaVVQPzeRDI009SO2Il5Lu7rDNH6mZckBdrIx0orEtZV\r\n     4bmp/YzhwvcubU4=;\r\nReceived: from client1.football.example.com  [192.0.2.1]\r\n     by submitserver.example.com with SUBMISSION;\r\n     Fri, 11 Jul 2003 21:01:54 -0700 (PDT)\r\nFrom: Joe SixPack <joe@football.example.com>\r\nTo: Suzie Q <suzie@shopping.example.net>\r\nSubject: Is dinner ready?\r\nDate: Fri, 11 Jul 2003 21:00:37 -0700 (PDT)\r\nMessage-ID: <20030712040037.46341.5F8J@football.example.com>\r\n",
    "correct_text": "DKIM-Signature: v=1; a=rsa-sha256; s=brisbane; d=example.com;\r\n      c=simple/simple; q=dns/txt; i=joe@football.example.com;\r\n      h=Received : From : To : Subject : Date : Message-ID;\r\n      bh=2jUSOH9NhtVGCQWNr9BrIAPreKQjO6Sn7XIkfJVOzv8=;\r\n      b=AuUoFEfDxTDkHlLXSZEpZj79LICEps6eda7W3deTVFOk4yAUoqOB\r\n      4nujc7YopdG5dWLSdNg6xNAZpOPr+kHxt1IrE+NahM6L/LbvaHut\r\n      KVdkLLkpVaVVQPzeRDI009SO2Il5Lu7rDNH6mZckBdrIx0orEtZV\r\n      4bmp/YzhwvcubU4=;\r\nReceived: from client1.football.example.com  [192.0.2.1]\r\n      by submitserver.example.com with SUBMISSION;\r\n      Fri, 11 Jul 2003 21:01:54 -0700 (PDT)\r\nFrom: Joe SixPack <joe@football.example.com>\r\nTo: Suzie Q <suzie@shopping.example.net>\r\nSubject: Is dinner ready?\r\nDate: Fri, 11 Jul 2003 21:00:37 -0700 (PDT)\r\nMessage-ID: <20030712040037.46341.5F8J@football.example.com>",
    "notes": "The \"simple\" header canonicalization doesn't change the header fields in any way.\r\n\r\nFolded header fields are missing one space of indentation (they have 5 spaces instead of 6), which makes the verification fail. Note that the plain text version of the RFC adds a prefix of three spaces before each line of text, which must be ignored.\r\n\r\nVerifier note: this was disposed of as per the IETF DKIM mailing list discussion.\r\n\r\nIn section A.3, the indentation is changed again (5 spaces instead of 6 + the \"b=\" tag has 2 additional spaces of indentation).\r\n\r\nTest cases:\r\n- opendkim: https://github.com/cyrusimap/opendkim/blob/ab2934e131cbe670b49f11db9daf8cd1223e3839/libopendkim/tests/t-testdata.h#L74\r\n- go-dkim: https://github.com/emersion/go-dkim/blob/master/verify_test.go#L9",
    "submit_date": "2017-02-07",
    "submitter_name": "Simon Ser",
    "verifier_id": "128",
    "verifier_name": "Stephen Farrell",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "5070",
    "doc-id": "RFC6376",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "3.2",
    "orig_text": "   tag-spec  =  [FWS] tag-name [FWS] \"=\" [FWS] tag-value [FWS]\r\n   tag-name  =  ALPHA *ALNUMPUNC\r\n   tag-value =  [ tval *( 1*(WSP / FWS) tval ) ]\r\n                     ; Prohibits WSP and FWS at beginning and end",
    "correct_text": "   tag-spec  =  [FWS] tag-name [FWS] \"=\" [FWS] [tag-value [FWS]]\r\n   tag-name  =  ALPHA *ALNUMPUNC\r\n   tag-value =  tval *( 1*(WSP / FWS) tval )\r\n                     ; Prohibits WSP and FWS at beginning and end",
    "notes": "The ABNF in the document permits two FWS rules to appear in the row. This results in permitting a line with only whitespace in the header which falls into obsolete syntax in RFC 5322 (Appendix B rule 12). The corrected text disallows this by eliding the second FWS when the tag-value is empty/omitted.",
    "submit_date": "2017-07-15",
    "submitter_name": "Chris Newman",
    "verifier_id": "130",
    "verifier_name": "Barry Leiba",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "5137",
    "doc-id": "RFC6376",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "3.6.1",
    "orig_text": "      key-k-tag        = %x76 [FWS] \"=\" [FWS] key-k-tag-type\r\n",
    "correct_text": "      key-k-tag        = %x6b [FWS] \"=\" [FWS] key-k-tag-type\r\n",
    "notes": "The key-k-tag should (presumably) start with the letter \"k\" to match the other key-LETTER-tag definitions and to match the \"k=\" heading.  However, the ABNF specifies %76 which is the letter \"v\", not the letter \"k\".  The correct value is %x6b.",
    "submit_date": "2017-10-03",
    "submitter_name": "Peter Smith",
    "verifier_id": "116",
    "verifier_name": "Alexey Melnikov",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "5252",
    "doc-id": "RFC6376",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "3.7",
    "orig_text": "   More formally, pseudo-code for the signature algorithm is:\r\n\r\n   body-hash    =  hash-alg (canon-body, l-param)\r\n   data-hash    =  hash-alg (h-headers, D-SIG, body-hash)\r\n   signature    =  sig-alg (d-domain, selector, data-hash)\r\n\r\n   where:\r\n\r\n   body-hash:  is the output from hashing the body, using hash-alg.\r\n\r\n   hash-alg:   is the hashing algorithm specified in the \"a\" parameter.\r\n\r\n   canon-body: is a canonicalized representation of the body, produced\r\n               using the body algorithm specified in the \"c\" parameter,\r\n               as defined in Section 3.4 and excluding the\r\n               DKIM-Signature field.\r\n\r\n   l-param:    is the length-of-body value of the \"l\" parameter.\r\n\r\n   data-hash:  is the output from using the hash-alg algorithm, to hash\r\n               the header including the DKIM-Signature header, and the\r\n               body hash.\r\n\r\n   h-headers:  is the list of headers to be signed, as specified in the\r\n               \"h\" parameter.\r\n\r\n   D-SIG:      is the canonicalized DKIM-Signature field itself without\r\n               the signature value portion of the parameter, that is, an\r\n               empty parameter value.\r\n",
    "correct_text": "   More formally, pseudo-code for the signature algorithm is:\r\n\r\n   body-hash    =  hash-alg (canon-body, l-param)\r\n   data-hash    =  hash-alg (h-headers, D-SIG)\r\n   signature    =  sig-alg (d-domain, selector, data-hash)\r\n\r\n   where:\r\n\r\n   body-hash:  is the output from hashing the body, using hash-alg.\r\n\r\n   hash-alg:   is the hashing algorithm specified in the \"a\" parameter.\r\n\r\n   canon-body: is a canonicalized representation of the body, produced\r\n               using the body algorithm specified in the \"c\" parameter,\r\n               as defined in Section 3.4 and excluding the\r\n               DKIM-Signature field.\r\n\r\n   l-param:    is the length-of-body value of the \"l\" parameter.\r\n\r\n   data-hash:  is the output from using the hash-alg algorithm, to hash\r\n               the header including the DKIM-Signature header, and the\r\n               body hash.\r\n\r\n   h-headers:  is the list of headers to be signed, as specified in the\r\n               \"h\" parameter.\r\n\r\n   D-SIG:      is the canonicalized DKIM-Signature field itself without\r\n               the signature value portion of the parameter, that is, an\r\n               empty parameter value, with no trailing CRLF.\r\n",
    "notes": "data-hash does not include body-hash (body-hash is already included by virtue of  the \"bh=\" tag in D-SIG). Also, D-SIG should not include the trailing CRLF, unlike the headers in h-headers.",
    "submit_date": "2018-02-02",
    "submitter_name": "Alastair Houghton",
    "verifier_id": "130",
    "verifier_name": "Barry Leiba",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "5260",
    "doc-id": "RFC6376",
    "errata_status_code": "Rejected",
    "errata_type_code": "Editorial",
    "section": "3.5",
    "orig_text": null,
    "correct_text": "DKIM-Signature = \"DKIM-Signature:\" tag-list",
    "notes": "A formal definition is needed to make it explicit that this header field name is case insensitive, like all the other header field names.\n --VERIFIER NOTES-- \n   \r\nHeader field names are case-insensitive, in general; there is neither need nor desire to repeat that in the DKIM spec.",
    "submit_date": "2018-02-08",
    "submitter_name": "Ale",
    "verifier_id": "130",
    "verifier_name": "Barry Leiba",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "5551",
    "doc-id": "RFC6376",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "6.3.",
    "orig_text": "If an MTA does wish to reject such\r\n   messages during an SMTP session (for example, when communicating with\r\n   a peer who, by prior agreement, agrees to only send signed messages),\r\n   and a signature is missing or does not verify, the handling MTA\r\n   SHOULD use a 550/5.7.x reply code.\r\n\r\n   Where the Verifier is integrated within the MTA and it is not\r\n   possible to fetch the public key, perhaps because the key server is\r\n   not available, a temporary failure message MAY be generated using a\r\n   451/4.7.5 reply code, such as:\r\n\r\n   451 4.7.5 Unable to verify signature - key server unavailable\r\n\r\n   Temporary failures such as inability to access the key server or\r\n   other external service are the only conditions that SHOULD use a 4xx\r\n   SMTP reply code. ",
    "correct_text": null,
    "notes": "This contradicts RFC5321 which says:\r\n\r\n...a relay SMTP has no need to inspect or\r\n   act upon the header section or body of the message data and MUST NOT\r\n   do so except to add its own \"Received:\" header field...\n --VERIFIER NOTES-- \n   \r\nThere is nothing in the cited text above that suggests modifications to the message.  The text only talks about which SMTP reply codes to use.",
    "submit_date": "2018-11-09",
    "submitter_name": "Borislav Petrov",
    "verifier_id": "130",
    "verifier_name": "Barry Leiba",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "5713",
    "doc-id": "RFC6376",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "2.8",
    "orig_text": "FWS =   [*WSP CRLF] 1*WSP",
    "correct_text": "FWS =   [*WSP] CRLF 1*WSP",
    "notes": "In the ABNF RFC ([RFC5234]), section 3.8 states \"Square brackets enclose an optional element sequence\".\r\n\r\nCRLF is required for folding.  However, the CRLF in the FWS rule is shown inside the square brackets, which would make it optional. It should not be inside the square brackets.\r\n\r\n(See Errata ID 5712 for FWS in [RFC5322], which is referenced at the end of section 2.8.)\n --VERIFIER NOTES-- \nAs noted by Dave Crocker, Folding White Space is a construct that permits a newline but does not require it -- only whitespace of  some form is required to be present in order  to match, not a specific kind of  whitespace.  The present construction, as corresponds  to RFC 5322, is as intended.",
    "submit_date": "2019-04-30",
    "submitter_name": "Victor Shrubowich",
    "verifier_id": "159",
    "verifier_name": "Benjamin Kaduk",
    "update_date": "2019-09-10 09:09:03"
  },
  {
    "errata_id": "5839",
    "doc-id": "RFC6376",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": "3.4.2",
    "orig_text": "   o  Delete all WSP characters at the end of each unfolded header field\r\n      value.",
    "correct_text": "   o  Delete the SP character, if present, at the end of each unfolded\r\n      header field value before its final CRLF",
    "notes": "A prior step in this section suggests that header field values include the trailing CRLF.  If that is the case, then a header field value can't end with WSP, which suggests that this step is incorrectly specified.  The correction I give here restores the apparent intent of this step.\r\n\r\n[MSK: The corrected text was modified after discussion on the WG mailing list.]",
    "submit_date": "2019-08-18",
    "submitter_name": "Peter Occil",
    "verifier_id": "164",
    "verifier_name": "Murray Kucherawy",
    "update_date": "2021-12-02 08:17:23"
  },
  {
    "errata_id": "6076",
    "doc-id": "RFC6376",
    "errata_status_code": "Verified",
    "errata_type_code": "Technical",
    "section": ".6",
    "orig_text": "      domain-name     = sub-domain 1*(\".\" sub-domain)\r\n                        ; from [RFC5321] Domain,\r\n                        ; excluding address-literal\r\n",
    "correct_text": "      domain-name     = sub-domain 1*(\".\" sub-domain)\r\n                        ; from [RFC5321] Domain\r\n                        \r\n",
    "notes": "In RFC5321 \"domain\" does not include address-literal. This mistake was copied from RFC4871\r\n(which referred to the [RFC2821] Domain, which does include address-literal). \r\nThis report is just to flag it so we don't put it in the next revision.",
    "submit_date": "2020-04-01",
    "submitter_name": "John Levine",
    "verifier_id": "159",
    "verifier_name": "Benjamin Kaduk",
    "update_date": "2020-04-01 14:56:07"
  },
  {
    "errata_id": "6254",
    "doc-id": "RFC6376",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "5.4",
    "orig_text": null,
    "correct_text": null,
    "notes": "The \"INFORMATIVE OPERATIONS NOTE\" early in Section 5.4 appears to be in conflict with Section 5.4.1.  They appear to cover the same issue, namely what header fields to use for the signature, but they seem to give different advice.  (Though not formally an erratum, there is also the matter of thinking that what is shown the the recipient is relevant...) /d",
    "submit_date": "2020-08-08",
    "submitter_name": "Dave Crocker",
    "verifier_id": "164",
    "verifier_name": "Murray Kucherawy",
    "update_date": "2021-12-02 08:17:47"
  },
  {
    "errata_id": "6674",
    "doc-id": "RFC6376",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "Appendix C",
    "orig_text": "This results in the file rsa.public containing the key information\r\nsimilar to this:\r\n\r\n-----BEGIN PUBLIC KEY-----\r\nMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDwIRP/UC3SBsEmGqZ9ZJW3/DkM\r\noGeLnQg1fWn7/zYtIxN2SnFCjxOCKG9v3b4jYfcTNh5ijSsq631uBItLa7od+v/R\r\ntdC2UzJ1lWT947qR+Rcac2gbto/NMqJ0fzfVjH4OuKhitdY9tf6mcwGjaNBcWToI\r\nMmPSPDdQPNUYckcQ2QIDAQAB\r\n-----END PUBLIC KEY-----\r\n\r\nThis public-key data (without the BEGIN and END tags) is placed in\r\nthe DNS:\r\n\r\n$ORIGIN _domainkey.example.org.\r\nbrisbane IN  TXT  (\"v=DKIM1; p=MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQ\"\r\n                   \"KBgQDwIRP/UC3SBsEmGqZ9ZJW3/DkMoGeLnQg1fWn7/zYt\"\r\n                   \"IxN2SnFCjxOCKG9v3b4jYfcTNh5ijSsq631uBItLa7od+v\"\r\n                   \"/RtdC2UzJ1lWT947qR+Rcac2gbto/NMqJ0fzfVjH4OuKhi\"\r\n                   \"tdY9tf6mcwGjaNBcWToIMmPSPDdQPNUYckcQ2QIDAQAB\")\r\n",
    "correct_text": "This results in the file rsa.public containing the key information\r\nsimilar to this (long output lines truncated):\r\n\r\nopenssl asn1parse -i -inform PEM -in rsa.public\r\n    0:d=0  hl=3 l= 159 cons: SEQUENCE          \r\n    3:d=1  hl=2 l=  13 cons:  SEQUENCE          \r\n    5:d=2  hl=2 l=   9 prim:   OBJECT            :rsaEncryption\r\n   16:d=2  hl=2 l=   0 prim:   NULL              \r\n   18:d=1  hl=3 l= 141 prim:  BIT STRING\r\n\r\nopenssl asn1parse -i -inform PEM -in rsa.public -strparse 18\r\n    0:d=0  hl=3 l= 137 cons: SEQUENCE          \r\n    3:d=1  hl=3 l= 129 prim:  INTEGER           :F02113FF502DD206C126…\r\n  135:d=1  hl=2 l=   3 prim:  INTEGER           :010001\r\n\r\nThe result of\r\n\r\nopenssl asn1parse -i -inform PEM -in rsa.public -offset 22 -out /dev/stdout -noout | openssl base64\r\n\r\nis then placed in the DNS:\r\n\r\n$ORIGIN _domainkey.example.org.\r\nbrisbane IN  TXT  (\"v=DKIM1; p=MIGJAoGBAPAhE/9QLdIGwSYapn1klbf8OQ\"\r\n                   \"ygZ4udCDV9afv/Ni0jE3ZKcUKPE4Iob2/dviNh9xM2HmK\"\r\n                   \"NKyrrfW4Ei0truh36/9G10LZTMnWVZP3jupH5FxpzaBu2\"\r\n                   \"j80yonR/N9WMfg64qGK11j21/qZzAaNo0FxZOggyY9I8N\"\r\n                   \"1A81RhyRxDZAgMBAAE=\")\r\n",
    "notes": "Empirical evidence suggests that MSPs have taken the command lines in\r\nAppendix C literally, and, by doing so, have deviated from the specification\r\nlaid out in Section 3.6.1. for the k= and p= tags.\r\n\r\nSpecifically, the  openssl rsa  command, used with its  -pubout  option\r\nas demonstrated in Appendix C, produces a SubjectPublicKeyInfo-typed result\r\ninstead of a RSAPublicKey-typed one.  It does so for both  DER  and  PEM\r\narguments to the  -outform  option.\r\n\r\nWhat is more, had Section 3.6.1., p= tag, specified a base64-encoded\r\nSubjectPublicKeyInfo-typed value instead of a RSAPublicKey-typed one,\r\nSection 3.6.1., k= tag, could have been dispensed of entirely, since\r\nthe SubjectPublicKeyInfo type contains an AlgorithmIdentifier-typed\r\nattribute for that purpose.\r\n\r\nThat indeed an RSAPublicKey-typed result for the p= tag was intended\r\nby RFC 6376 can be confirmed by comparison with RFC 8463, Section 4.2.,\r\nwhich specifies that a \"raw\" Ed25519 public key be used, instead of\r\na SubjectPublicKeyInfo-typed one such as defined in RFC 8410,\r\nSection 4. Subject Public Key Fields.\r\n\r\nThe Corrected Text uses the same public key data from the Original Text.",
    "submit_date": "2021-09-01",
    "submitter_name": "Christian Böhme",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": null
  },
  {
    "errata_id": "6769",
    "doc-id": "RFC6376",
    "errata_status_code": "Held for Document Update",
    "errata_type_code": "Technical",
    "section": "8.2",
    "orig_text": "An example of such an attack includes altering the MIME structure,\r\nexploiting lax HTML parsing in the MUA, and defeating duplicate\r\nmessage detection algorithms.\r\n",
    "correct_text": "In case of MIME structures, the value of l= should cover all of the\r\nbody, including the terminating boundary and the epilogue, so that\r\naltering the structure is not feasible.  In any case, if l= is set and\r\nContent-Type is not signed, an attacker can replace it with a multipart\r\ntype and thus relegate the original body to the role of a MIME preamble.\r\n",
    "notes": "Duplicate message detection algorithms should consider Message-ID.  When they compare the body, they should be sophisticated enough to recognize specific key fields, for example to avoid accumulating duplicate values of financial transactions.",
    "submit_date": "2021-12-01",
    "submitter_name": "Ale Vesely",
    "verifier_id": "164",
    "verifier_name": "Murray Kucherawy",
    "update_date": "2021-12-02 08:13:28"
  },
  {
    "errata_id": "7001",
    "doc-id": "RFC6376",
    "errata_status_code": "Reported",
    "errata_type_code": "Technical",
    "section": "3.6.1",
    "orig_text": "   k= Key type (plain-text; OPTIONAL, default is \"rsa\").  Signers and\r\n      Verifiers MUST support the \"rsa\" key type.  The \"rsa\" key type\r\n      indicates that an ASN.1 DER-encoded [ITU-X660-1997] RSAPublicKey\r\n      (see [RFC3447], Sections 3.1 and A.1.1) is being used in the \"p=\"\r\n      tag.",
    "correct_text": "   k= Key type (plain-text; OPTIONAL, default is \"rsa\").  Signers and\r\n      Verifiers MUST support the \"rsa\" key type.  The \"rsa\" key type\r\n      indicates that an ASN.1 DER-encoded [ITU-X660-1997] SubjectPublicKeyInfo\r\n      (see [RFC5280], Section 4.1) is being used in the \"p=\"\r\n      tag.",
    "notes": "The format specified for RSA keys is not what is used\r\neither in the wild, or in the examples in this RFC.\r\n\r\nThe current citation for the RSAPublicKey format is\r\nlisted below for reference:\r\n\r\n   RSAPublicKey ::= SEQUENCE {\r\n       modulus           INTEGER,  -- n\r\n       publicExponent    INTEGER   -- e\r\n   }\r\n \r\nTaking the example public key in this RFC document:\r\n\r\n   -----BEGIN PUBLIC KEY-----\r\n   MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDwIRP/UC3SBsEmGqZ9ZJW3/DkM\r\n   oGeLnQg1fWn7/zYtIxN2SnFCjxOCKG9v3b4jYfcTNh5ijSsq631uBItLa7od+v/R\r\n   tdC2UzJ1lWT947qR+Rcac2gbto/NMqJ0fzfVjH4OuKhitdY9tf6mcwGjaNBcWToI\r\n   MmPSPDdQPNUYckcQ2QIDAQAB\r\n   -----END PUBLIC KEY-----\r\n\r\nWe can decode it as asn.1, and see that it is not in the format\r\nspecified:\r\n\r\n  $  openssl asn1parse -i -inform pem -in /home/ori/ykey.pem  \r\n    0:d=0  hl=3 l= 159 cons: SEQUENCE          \r\n    3:d=1  hl=2 l=  13 cons:  SEQUENCE          \r\n    5:d=2  hl=2 l=   9 prim:   OBJECT            :rsaEncryption\r\n   16:d=2  hl=2 l=   0 prim:   NULL              \r\n   18:d=1  hl=3 l= 141 prim:  BIT STRING        \r\n\r\nThe openssl documentation unhelpfully says that it's generated\r\nin the \"traditional SSLEay format\". Poking around, that seems\r\nto correspond to SubjectPublicKeyInfo in RFC5280:\r\n\r\n  SubjectPublicKeyInfo  ::=  SEQUENCE  {\r\n        algorithm            AlgorithmIdentifier,\r\n        subjectPublicKey     BIT STRING  }\r\n\r\nWhen generating a key that conforms to the RSAPublicKey\r\nencoding, multiple sites (including gmail) reject the key,\r\nclaiming a failure to parse the tag -- this is also the\r\nerror that openssl has when attempting to parse an RSA\r\npublic key in this format; for example:\r\n\r\n   -----BEGIN PUBLIC KEY-----\r\n   MIGJAoGBAOPkeIi7+kBDwxOlfJFeWygu5Txt43ddLdY8AfWxLIHtQObNhgsxuaWh\r\n   UUhlftnJWcafJg6V8HVyvd4i+3D0l/PLHu89bIkGnH0ts/weIvQJ+Rx/hVZtS/H1\r\n   vkHRmiPnO5gaDi/jvfAFWcG4BiJgkEcUovKbmWAxYzGBqe/8um23AgMBAAE=\r\n   -----END PUBLIC KEY-----\r\n\r\n $ openssl asn1parse -i -inform pem -in /home/ori/key.pem   \r\n    0:d=0  hl=3 l= 137 cons: SEQUENCE          \r\n    3:d=1  hl=3 l= 129 prim:  INTEGER           :E3E47888BBFA404·.\r\n  135:d=1  hl=2 l=   3 prim:  INTEGER           :010001\r\n  $ openssl rsa -pubin -in /home/ori/key.pem  -text             \r\n   unable to load Public Key\r\n   140290635060544:error:0D0680A8:asn1 encoding routines:asn1_check_tlen:wrong tag:../crypto/asn1/tasn_dec.c:1149:\r\n   140290635060544:error:0D07803A:asn1 encoding routines:asn1_item_embed_d2i:nested asn1 error:../crypto/asn1/tasn_dec.c:309:Type=X509_ALGOR\r\n   140290635060544:error:0D08303A:asn1 encoding routines:asn1_template_noexp_d2i:nested asn1 error:../crypto/asn1/tasn_dec.c:646:Field=algor, Type=X509_PUBKEY\r\n   140290635060544:error:0906700D:PEM routines:PEM_ASN1_read_bio:ASN1 lib:../crypto/pem/pem_oth.c:33:\r\n\r\nWhile in theory it would be better to fix the examples,\r\nI think that ship has sailed, and it's better instead\r\nto fix the citation in the specification.",
    "submit_date": "2022-06-21",
    "submitter_name": "Ori Bernstein",
    "verifier_id": "99",
    "verifier_name": null,
    "update_date": null
  },
  {
    "errata_id": "7862",
    "doc-id": "RFC6376",
    "errata_status_code": "Rejected",
    "errata_type_code": "Technical",
    "section": "3.4.2",
    "orig_text": "[..]",
    "correct_text": "[insert after item 2]\r\n\r\nDue to de-facto implementation practice, the term WSP of the following two items, \r\nas well as in the part that refers to after the separating colon (the field body) \r\nin the third, has to be interpreted differently, and must include all US-ASCII \r\nwhitespace characters, namely %d9 (HT), %d10 (LF), %d11 (VT), %d12 (FF), %d12 \r\n(CR) as well as %d32 (SP) [?](the isspace(3) set of characters in the ISO C \"C\" \r\nlocale)[/?]",
    "notes": "As written.\r\nThe behaviour *could* originate in a partial misunderstanding of the Sendmail milter protocol, which is often used to implement DKIM; this protocol *may* send header continuation lines separated by lone LF bytes, instead of CRLF.\r\n(Thanks to Claus Assmann of esmtp.org for this in-between-the-lines reading.)\n --VERIFIER NOTES-- \n   Withdrawn by submitter.",
    "submit_date": "2024-03-21",
    "submitter_name": "Steffen Nurpmeso",
    "verifier_id": "164",
    "verifier_name": "Murray Kucherawy",
    "update_date": "2024-03-21 19:39:17"
  }
]
